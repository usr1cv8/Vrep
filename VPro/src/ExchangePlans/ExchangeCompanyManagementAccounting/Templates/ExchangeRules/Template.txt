<ExchangeRules>
<FormatVersion РежимСовместимости="">2.01</FormatVersion>
<ID>f5c0f102-0db3-42e4-9dee-79bbdc44d327    </ID>
<Description>Drive3 --&gt; AccountingCORPvi</Description>
<CreationDateTime>2018-11-15T14:51:40</CreationDateTime>
<Source PlatformVersion="8.0" ConfigurationVersion="1.0.1.1" ConfigurationSynonym="1C:Company management, version 1.0">CompanyManagement</Source>
<Receiver PlatformVersion="8.0" ConfigurationVersion="3.2.34.16" ConfigurationSynonym="Бухгалтерия предприятия">Accounting</Receiver>
<BeforeGetChangedObjects>Parameters.Вставить("NodeChangeRef", NodeForExchange);

Parameters.Вставить("SettingVariant",  NodeForExchange.SettingVariant);
Parameters.Вставить("ManualExchange",  NodeForExchange.ManualExchange);</BeforeGetChangedObjects>
<AfterGetExchangeNodeDetails>Параметры.Вставить("УзелОбменаЗагрузкаДанных", УзелОбменаЗагрузкаДанных);</AfterGetExchangeNodeDetails>
<BeforeDataExport>Parameters.Вставить("AccountingCurrency", Константы.AccountingCurrency.Получить());
Parameters.Вставить("NationalCurrency", Константы.NationalCurrency.Получить());
Parameters.Вставить("SubsystemProductionUse", ПолучитьФункциональнуюОпцию("UseSubsystemProduction"))</BeforeDataExport>
<AfterDataExport>If Parameters.ManualExchange Then
	
	ExchangePlanName = DataExchangeReUse.GetExchangePlanName(Parameters.УзелДляОбменаСсылка);
	ExchangePlanContent = MetaData.ExchangePlans[ExchangePlanName].Content;
	
	For Each ItemExchangeContent in ExchangePlanContent Do
		If CommonUse.ThisIsDocument(ItemExchangeContent.MetaData) Then
			ExchangePlans.DeleteChangeRecords(Parameters.УзелДляОбменаСсылка, ItemExchangeContent.MetaData);
		EndIf;
	EndDo;
	
EndIf;</AfterDataExport>
<BeforeObjectImport>Параметры.Вставить("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
Параметры.Вставить("ВедетсяПроизводственнаяДеятельность", Константы.ВедетсяПроизводственнаяДеятельность.Получить());
Параметры.Вставить("ТипЦенПлановойСебестоимости", Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить());
Параметры.Вставить("ОсновнаяОрганизация", БухгалтерскийУчетПереопределяемый.ПолучитьValueПоУмолчанию("ОсновнаяОрганизация"));

LoadOrganization = New Array();
Параметры.Вставить("LoadOrganization", LoadOrganization);

ImportObjectTable = New ValueTable();
ImportObjectTable.Columns.Add("ImportObject");
ImportObjectTable.Columns.Add("Ref");
ImportObjectTable.Columns.Add("ObjectParameters");

Параметры.Insert("ImportObjectTable", ImportObjectTable);</BeforeObjectImport>
	<OnGetDeletionInfo>МетаданныеОбъекта = Объект.Метаданные();

Если Метаданные.Справочники.Содержит(МетаданныеОбъекта) Тогда
	
	Отказ  = Истина;
	
	УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "Справочник");
	
ИначеЕсли Метаданные.Документы.Содержит(МетаданныеОбъекта) Тогда
	
	Отказ  = Истина;
	
	Если Объект.Проведен Тогда
		
		ОтменитьПроведениеОбъектаВИБ(Объект, ТипЗнч(Объект));
		
	КонецЕсли;
	
	Если НЕ Объект.Проведен Тогда
		
		УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "Документ");
		
	КонецЕсли;
	
ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
	
	Отказ  = Истина;
	
	УстановитьПометкуУдаленияУОбъекта(Объект, Истина, "ПланВидовХарактеристик");
	
КонецЕсли;</OnGetDeletionInfo>
	<Parameters>
		<Parameter Name="ManualType                                        " Description="ManualType                                        " UsedOnImport="true" УстанавливатьВДиалоге="true" ТипValues="Булево" ПередаватьПараметрПриВыгрузке="true"/>
	</Parameters>
	<DataProcessors/>
	<ObjectConversionRules>
		<Group>
			<Code>Enums</Code>
			<Description>Enums                                             </Description>
			<Order>50</Order>
			<Rule>
				<Code>ТипыКонтактнойИнформации</Code>
				<Description>Перечисление: Contact information types</Description>
				<Order>50</Order>
				<Source>ПеречислениеСсылка.ContactInformationTypes</Source>
				<Receiver>ПеречислениеСсылка.ТипыКонтактнойИнформации</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Address --&gt; Адрес</Description>
						<Order>50</Order>
						<Source>Address</Source>
						<Receiver>Адрес</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>EmailAddress --&gt; АдресЭлектроннойПочты</Description>
						<Order>100</Order>
						<Source>EmailAddress</Source>
						<Receiver>АдресЭлектроннойПочты</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WebPage --&gt; ВебСтраница</Description>
						<Order>150</Order>
						<Source>WebPage</Source>
						<Receiver>ВебСтраница</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Other --&gt; Другое</Description>
						<Order>200</Order>
						<Source>Other</Source>
						<Receiver>Другое</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Phone --&gt; Телефон</Description>
						<Order>250</Order>
						<Source>Phone</Source>
						<Receiver>Телефон</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Fax --&gt; Факс</Description>
						<Order>300</Order>
						<Source>Fax</Source>
						<Receiver>Факс</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>Skype --&gt; Другое</Description>
						<Order>350</Order>
						<Source>Skype</Source>
						<Receiver>Другое</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ПорядкиОкругления</Code>
				<Description>Перечисление: Rounding Methods</Description>
				<Order>100</Order>
				<Source>ПеречислениеСсылка.RoundingMethods</Source>
				<Receiver>ПеречислениеСсылка.ПорядкиОкругления</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Round0_01 --&gt; Окр0_01</Description>
						<Order>50</Order>
						<Source>Round0_01</Source>
						<Receiver>Окр0_01</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Round0_05 --&gt; Окр0_05</Description>
						<Order>100</Order>
						<Source>Round0_05</Source>
						<Receiver>Окр0_05</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>Round0_1 --&gt; Окр0_1</Description>
						<Order>150</Order>
						<Source>Round0_1</Source>
						<Receiver>Окр0_1</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Round0_5 --&gt; Окр0_5</Description>
						<Order>200</Order>
						<Source>Round0_5</Source>
						<Receiver>Окр0_5</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Round1 --&gt; Окр1</Description>
						<Order>250</Order>
						<Source>Round1</Source>
						<Receiver>Окр1</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Round10 --&gt; Окр10</Description>
						<Order>300</Order>
						<Source>Round10</Source>
						<Receiver>Окр10</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>Round100 --&gt; Окр100</Description>
						<Order>350</Order>
						<Source>Round100</Source>
						<Receiver>Окр100</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>Round5 --&gt; Окр5</Description>
						<Order>400</Order>
						<Source>Round5</Source>
						<Receiver>Окр5</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>Round50 --&gt; Окр50</Description>
						<Order>450</Order>
						<Source>Round50</Source>
						<Receiver>Окр50</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>СпособыРасчетаКомиссионногоВознаграждения</Code>
				<Description>Перечисление: Commission calculation methods</Description>
				<Order>150</Order>
				<Source>ПеречислениеСсылка.CommissionFeeCalculationMethods</Source>
				<Receiver>ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>IsNotCalculating --&gt; НеРассчитывается</Description>
						<Order>50</Order>
						<Source>IsNotCalculating</Source>
						<Receiver>НеРассчитывается</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>PercentFromDifferenceOfSaleAndAmountReceipts --&gt; П</Description>
						<Order>100</Order>
						<Source>PercentFromDifferenceOfSaleAndAmountReceipts</Source>
						<Receiver>ПроцентОтРазностиСуммПродажиИПоступления</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>PercentFromSaleAmount --&gt; ПроцентОтСуммыПродажи</Description>
						<Order>150</Order>
						<Source>PercentFromSaleAmount</Source>
						<Receiver>ПроцентОтСуммыПродажи</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ПолФизическогоЛица</Code>
				<Description>Перечисление: Individual's gender</Description>
				<Order>200</Order>
				<Source>ПеречислениеСсылка.IndividualGender</Source>
				<Receiver>ПеречислениеСсылка.ПолФизическогоЛица</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Female --&gt; Женский</Description>
						<Order>50</Order>
						<Source>Female</Source>
						<Receiver>Женский</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Male --&gt; Мужской</Description>
						<Order>100</Order>
						<Source>Male</Source>
						<Receiver>Мужской</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийРеализацияТоваров</Code>
				<Description>Перечисление: "Sales order" operation kinds</Description>
				<Order>250</Order>
				<Source>ПеречислениеСсылка.OperationKindsCustomerInvoice</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийРеализацияТоваров</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>OrderForProcessing --&gt; ПродажаКомиссия</Description>
						<Order>50</Order>
						<Source>TransferForCommission</Source>
						<Receiver>ПродажаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>OrderForSale --&gt; ПродажаКомиссия</Description>
						<Order>100</Order>
						<Source>SaleToCustomer</Source>
						<Receiver>ПродажаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WorkOrder --&gt; ПродажаКомиссия</Description>
						<Order>150</Order>
						<Source>TransferToProcessing</Source>
						<Receiver>ПродажаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>ReturnFromProcessing --&gt;</Description>
						<Order>200</Order>
						<Source>ReturnFromProcessing</Source>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>ReturnFromSafeCustody --&gt;</Description>
						<Order>250</Order>
						<Source>ReturnFromSafeCustody</Source>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>ReturnToPrincipal --&gt;</Description>
						<Order>300</Order>
						<Source>ReturnToPrincipal</Source>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>ReturnToVendor --&gt;</Description>
						<Order>350</Order>
						<Source>ReturnToVendor</Source>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>TransferForSafeCustody --&gt;</Description>
						<Order>400</Order>
						<Source>TransferForSafeCustody</Source>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийПоступлениеТоваровУслуг</Code>
				<Description>Перечисление: Operation kinds "Supplier invoice"</Description>
				<Order>300</Order>
				<Source>ПеречислениеСсылка.OperationKindsSupplierInvoice</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReceiptFromVendor --&gt; ПокупкаКомиссия</Description>
						<Order>50</Order>
						<Source>ReceiptFromVendor</Source>
						<Receiver>ПокупкаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ReceptionForCommission --&gt; ПокупкаКомиссия</Description>
						<Order>100</Order>
						<Source>ReceptionForCommission</Source>
						<Receiver>ПокупкаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>ReceptionIntoProcessing --&gt; ВПереработку</Description>
						<Order>150</Order>
						<Source>ReceptionIntoProcessing</Source>
						<Receiver>ВПереработку</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийПередачаТоваров</Code>
				<Description>Перечисление: Operation kind "Invoice"</Description>
				<Order>350</Order>
				<Source>ПеречислениеСсылка.OperationKindsCustomerInvoice</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийПередачаТоваров</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnFromProcessing --&gt; ИзПереработки</Description>
						<Order>50</Order>
						<Source>ReturnFromProcessing</Source>
						<Receiver>ИзПереработки</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>TransferToProcessing --&gt; ВПереработку</Description>
						<Order>100</Order>
						<Source>TransferToProcessing</Source>
						<Receiver>ВПереработку</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийВозвратТоваровПоставщику</Code>
				<Description>Перечисление: Operation kind "Invoice"</Description>
				<Order>400</Order>
				<Source>ПеречислениеСсылка.OperationKindsCustomerInvoice</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийВозвратТоваровПоставщику</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnFromProcessing --&gt; ИзПереработки</Description>
						<Order>50</Order>
						<Source>ReturnFromProcessing</Source>
						<Receiver>ИзПереработки</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ReturnToPrincipal --&gt; ПокупкаКомиссия</Description>
						<Order>100</Order>
						<Source>ReturnFromSafeCustody</Source>
						<Receiver>ПокупкаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>ReturnToVendor --&gt; ПокупкаКомиссия</Description>
						<Order>150</Order>
						<Source>ReturnToVendor</Source>
						<Receiver>ПокупкаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>ReturnFromAgent --&gt; ПокупкаКомиссия</Description>
						<Order>200</Order>
						<Source>ReturnToPrincipal</Source>
						<Receiver>ПокупкаКомиссия</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>СпособыНачисленияАмортизацииНМА</Code>
				<Description>Перечисление: Property depreciation accrual methods</Description>
				<Order>450</Order>
				<Source>ПеречислениеСсылка.FixedAssetsDepreciationMethods</Source>
				<Receiver>ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Linear --&gt; Линейный</Description>
						<Order>50</Order>
						<Source>Linear</Source>
						<Receiver>Линейный</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ProportionallyToProductsVolume --&gt; Пропорционально</Description>
						<Order>100</Order>
						<Source>ProportionallyToProductsVolume</Source>
						<Receiver>ПропорциональноОбъемуПродукции</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>СпособыНачисленияАмортизацииОС</Code>
				<Description>Перечисление: Property depreciation accrual methods</Description>
				<Order>500</Order>
				<Source>ПеречислениеСсылка.FixedAssetsDepreciationMethods</Source>
				<Receiver>ПеречислениеСсылка.СпособыНачисленияАмортизацииОС</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Linear --&gt; Линейный</Description>
						<Order>50</Order>
						<Source>Linear</Source>
						<Receiver>Линейный</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ProportionallyToProductsVolume --&gt; Пропорционально</Description>
						<Order>100</Order>
						<Source>ProportionallyToProductsVolume</Source>
						<Receiver>ПропорциональноОбъемуПродукции</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийПоступлениеДенежныхСредств</Code>
				<Description>Перечисление: Receipt to Cash account</Description>
				<Order>550</Order>
				<Source>ПеречислениеСсылка.OperationKindsPaymentReceipt</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийПоступлениеДенежныхСредств</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CurrencyPurchase --&gt; ПриобретениеИностраннойВалюты</Description>
						<Order>50</Order>
						<Source>CurrencyPurchase</Source>
						<Receiver>ПриобретениеИностраннойВалюты</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>FromCustomer --&gt; ОплатаПокупателя</Description>
						<Order>100</Order>
						<Source>FromCustomer</Source>
						<Receiver>ОплатаПокупателя</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>FromVendor --&gt; ВозвратОтПоставщика</Description>
						<Order>150</Order>
						<Source>FromVendor</Source>
						<Receiver>ВозвратОтПоставщика</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>LoanRepaymentByEmployee --&gt; ПрочееПоступление</Description>
						<Order>200</Order>
						<Source>Other</Source>
						<Receiver>ПрочееПоступление</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>OtherSettlements --&gt; ПрочееПоступление</Description>
						<Order>250</Order>
						<Source>OtherSettlements</Source>
						<Receiver>ПрочиеРасчетыСКонтрагентами</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>LoanSettlements --&gt; РасчетыПоКредитамИЗаймам</Description>
						<Order>300</Order>
						<Source>LoanSettlements</Source>
						<Receiver>РасчетыПоКредитамИЗаймам</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>LoanRepaymentByEmployee --&gt; ВозвратЗаймаРаботником</Description>
						<Order>350</Order>
						<Source>LoanRepaymentByEmployee</Source>
						<Receiver>ВозвратЗаймаРаботником</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>FromAdvanceHolder --&gt; ПрочееПоступление</Description>
						<Order>400</Order>
						<Source>FromAdvanceHolder</Source>
						<Receiver>ПрочееПоступление</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийСписаниеДенежныхСредств</Code>
				<Description>Перечисление: Expense from Cash account</Description>
				<Order>600</Order>
				<Source>ПеречислениеСсылка.OperationKindsPaymentExpense</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>OtherSettlements --&gt; ПрочееСписание</Description>
						<Order>50</Order>
						<Source>OtherSettlements</Source>
						<Receiver>ПрочееСписание</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Salary --&gt; ПеречислениеЗП</Description>
						<Order>100</Order>
						<Source>Salary</Source>
						<Receiver>ПеречислениеЗП</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>SalaryForEmployee --&gt; ПеречислениеЗаработнойПлатыР</Description>
						<Order>150</Order>
						<Source>Salary</Source>
						<Receiver>ПеречислениеЗаработнойПлатыРаботнику</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Taxes --&gt; ПеречислениеНалога</Description>
						<Order>200</Order>
						<Source>Taxes</Source>
						<Receiver>ПеречислениеНалога</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>ToCustomer --&gt; ВозвратПокупателю</Description>
						<Order>250</Order>
						<Source>ToCustomer</Source>
						<Receiver>ВозвратПокупателю</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Vendor --&gt; ОплатаПоставщику</Description>
						<Order>300</Order>
						<Source>Vendor</Source>
						<Receiver>ОплатаПоставщику</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>Other --&gt; ПрочееСписание</Description>
						<Order>350</Order>
						<Source>Other</Source>
						<Receiver>ПрочееСписание</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>ToAdvanceHolder --&gt; ПеречислениеПодотчетномуЛицу</Description>
						<Order>400</Order>
						<Source>ToAdvanceHolder</Source>
						<Receiver>ПеречислениеПодотчетномуЛицу</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>LoanSettlements --&gt; РасчетыПоКредитамИЗаймам</Description>
						<Order>450</Order>
						<Source>LoanSettlements</Source>
						<Receiver>РасчетыПоКредитамИЗаймам</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>IssueLoanToEmployee --&gt; ВыдачаЗаймаРаботнику</Description>
						<Order>500</Order>
						<Source>IssueLoanToEmployee</Source>
						<Receiver>ВыдачаЗаймаРаботнику</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийПКО</Code>
				<Description>Перечисление: Receipt to Cash account</Description>
				<Order>650</Order>
				<Source>ПеречислениеСсылка.OperationKindsCashReceipt</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийПКО</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>FromCustomer --&gt; ОплатаПокупателя</Description>
						<Order>50</Order>
						<Source>FromCustomer</Source>
						<Receiver>ОплатаПокупателя</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>FromVendor --&gt; ВозвратОтПоставщика</Description>
						<Order>100</Order>
						<Source>FromVendor</Source>
						<Receiver>ВозвратОтПоставщика</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>LoanSettlements --&gt; РасчетыПоКредитамИЗаймам</Description>
						<Order>150</Order>
						<Source>Other</Source>
						<Receiver>ПрочийПриход</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>OtherSettlements --&gt; ПрочийПриход</Description>
						<Order>200</Order>
						<Source>OtherSettlements</Source>
						<Receiver>ПрочийПриход</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>RetailIncome --&gt; РозничнаяВыручка</Description>
						<Order>250</Order>
						<Source>RetailIncome</Source>
						<Receiver>РозничнаяВыручка</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>FromAdvanceHolder --&gt; ВозвратОтПодотчетногоЛица</Description>
						<Order>300</Order>
						<Source>FromAdvanceHolder</Source>
						<Receiver>ВозвратОтПодотчетногоЛица</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>LoanSettlements --&gt; РасчетыПоКредитамИЗаймам</Description>
						<Order>350</Order>
						<Source>LoanSettlements</Source>
						<Receiver>РасчетыПоКредитамИЗаймам</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>LoanRepaymentByEmployee --&gt; ВозвратЗаймаРаботником</Description>
						<Order>400</Order>
						<Source>LoanRepaymentByEmployee</Source>
						<Receiver>ВозвратЗаймаРаботником</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийРКО</Code>
				<Description>Перечисление: Expense from Cash account</Description>
				<Order>700</Order>
				<Source>ПеречислениеСсылка.OperationKindsCashPayment</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийРКО</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>IssueLoanToEmployee --&gt; ВыдачаЗаймаРаботнику</Description>
						<Order>50</Order>
						<Source>IssueLoanToEmployee</Source>
						<Receiver>ВыдачаЗаймаРаботнику</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Other --&gt; ПрочийРасход</Description>
						<Order>100</Order>
						<Source>Other</Source>
						<Receiver>ПрочийРасход</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>OtherSettlements --&gt; ПрочийРасход</Description>
						<Order>150</Order>
						<Source>OtherSettlements</Source>
						<Receiver>ПрочийРасход</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Salary --&gt; ВыплатаЗаработнойПлатыПоВедомостям</Description>
						<Order>200</Order>
						<Source>Salary</Source>
						<Receiver>ВыплатаЗаработнойПлатыПоВедомостям</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>SalaryForEmployee --&gt; ВыплатаЗаработнойПлатыРаботн</Description>
						<Order>250</Order>
						<Source>SalaryForEmployee</Source>
						<Receiver>ВыплатаЗаработнойПлатыРаботнику</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>ToAdvanceHolder --&gt; ВыдачаПодотчетномуЛицу</Description>
						<Order>300</Order>
						<Source>ToAdvanceHolder</Source>
						<Receiver>ВыдачаПодотчетномуЛицу</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>ToCustomer --&gt; ВозвратПокупателю</Description>
						<Order>350</Order>
						<Source>ToCustomer</Source>
						<Receiver>ВозвратПокупателю</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>Vendor --&gt; ОплатаПоставщику</Description>
						<Order>400</Order>
						<Source>Vendor</Source>
						<Receiver>ОплатаПоставщику</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>Taxes --&gt; ПрочийРасход</Description>
						<Order>450</Order>
						<Source>Taxes</Source>
						<Receiver>ПрочийРасход</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>TransferToCashCR --&gt; Инкассация</Description>
						<Order>500</Order>
						<Source>TransferToCashCR</Source>
						<Receiver>Инкассация</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>LoanSettlements --&gt; РасчетыПоКредитамИЗаймам</Description>
						<Order>550</Order>
						<Source>LoanSettlements</Source>
						<Receiver>РасчетыПоКредитамИЗаймам</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыДоговоровКонтрагентов</Code>
				<Description>Перечисление: Contract kinds</Description>
				<Order>750</Order>
				<Source>ПеречислениеСсылка.ContractKinds</Source>
				<Receiver>ПеречислениеСсылка.ВидыДоговоровКонтрагентов</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>FromPrincipal --&gt; СКомитентом</Description>
						<Order>50</Order>
						<Source>FromPrincipal</Source>
						<Receiver>СКомитентом</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Other --&gt; Прочее</Description>
						<Order>100</Order>
						<Source>Other</Source>
						<Receiver>Прочее</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WithAgent --&gt; СКомиссионером</Description>
						<Order>150</Order>
						<Source>WithAgent</Source>
						<Receiver>СКомиссионером</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>WithCustomer --&gt; СПокупателем</Description>
						<Order>200</Order>
						<Source>WithCustomer</Source>
						<Receiver>СПокупателем</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>WithVendor --&gt; СПоставщиком</Description>
						<Order>250</Order>
						<Source>WithVendor</Source>
						<Receiver>СПоставщиком</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ТипыСкладов</Code>
				<Description>Перечисление: Business unit types</Description>
				<Order>800</Order>
				<Source>ПеречислениеСсылка.StructuralUnitsTypes</Source>
				<Receiver>ПеречислениеСсылка.ТипыСкладов</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Retail --&gt; РозничныйМагазин</Description>
						<Order>50</Order>
						<Source>Retail</Source>
						<Receiver>РозничныйМагазин</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>RetailAccrualAccounting --&gt; НеавтоматизированнаяТо</Description>
						<Order>100</Order>
						<Source>RetailAccrualAccounting</Source>
						<Receiver>НеавтоматизированнаяТорговаяТочка</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>Warehouse --&gt; ОптовыйСклад</Description>
						<Order>150</Order>
						<Source>Warehouse</Source>
						<Receiver>ОптовыйСклад</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Department --&gt; ОптовыйСклад</Description>
						<Order>200</Order>
						<Source>Department</Source>
						<Receiver>ОптовыйСклад</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийКорректировкаДолга</Code>
				<Description>Перечисление: "Setoff" operation kinds</Description>
				<Order>850</Order>
				<Source>ПеречислениеСсылка.OperationKindsNetting</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийКорректировкаДолга</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CustomerDebtAdjustment --&gt; СписаниеЗадолженности</Description>
						<Order>50</Order>
						<Source>CustomerDebtAdjustment</Source>
						<Receiver>СписаниеЗадолженности</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>CustomerDebtAssignment --&gt; ПереносЗадолженности</Description>
						<Order>100</Order>
						<Source>CustomerDebtAssignment</Source>
						<Receiver>ПереносЗадолженности</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>DebtAssignmentToVendor --&gt; ПереносЗадолженности</Description>
						<Order>150</Order>
						<Source>DebtAssignmentToVendor</Source>
						<Receiver>ПереносЗадолженности</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Netting --&gt; Прочее</Description>
						<Order>200</Order>
						<Source>Netting</Source>
						<Receiver>Прочее</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>VendorDebtAdjustment --&gt; СписаниеЗадолженности</Description>
						<Order>250</Order>
						<Source>VendorDebtAdjustment</Source>
						<Receiver>СписаниеЗадолженности</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ЮридическоеФизическоеЛицо</Code>
				<Description>Перечисление: Legal entity individual</Description>
				<Order>900</Order>
				<Source>ПеречислениеСсылка.CounterpartyKinds</Source>
				<Receiver>ПеречислениеСсылка.ЮридическоеФизическоеЛицо</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Individual --&gt; ФизическоеЛицо</Description>
						<Order>50</Order>
						<Source>Individual</Source>
						<Receiver>ФизическоеЛицо</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>LegalEntity --&gt; ЮридическоеЛицо</Description>
						<Order>100</Order>
						<Source>LegalEntity</Source>
						<Receiver>ЮридическоеЛицо</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыПеречисленийВБюджет</Code>
				<Description>Перечисление: Kinds of transfers to budget</Description>
				<Order>950</Order>
				<Source>ПеречислениеСсылка.BudgetTransferKinds</Source>
				<Receiver>ПеречислениеСсылка.ВидыПеречисленийВБюджет</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CustomsPayment --&gt; ТаможенныйПлатеж</Description>
						<Order>50</Order>
						<Source>CustomsPayment</Source>
						<Receiver>ТаможенныйПлатеж</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>OtherPayment --&gt; ИнойПлатеж</Description>
						<Order>100</Order>
						<Source>OtherPayment</Source>
						<Receiver>ИнойПлатеж</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>TaxPayment --&gt; НалоговыйПлатеж</Description>
						<Order>150</Order>
						<Source>TaxPayment</Source>
						<Receiver>НалоговыйПлатеж</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыОперацийВозвратТоваровОтПокупателя</Code>
				<Description>Перечисление: Operation kinds "Supplier invoice"</Description>
				<Order>1000</Order>
				<Source>ПеречислениеСсылка.OperationKindsSupplierInvoice</Source>
				<Receiver>ПеречислениеСсылка.ВидыОперацийВозвратТоваровОтПокупателя</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnFromAgent --&gt; ПродажаКомиссия</Description>
						<Order>50</Order>
						<Source>ReturnFromAgent</Source>
						<Receiver>ПродажаКомиссия</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ReturnFromCustomer --&gt; ПродажаКомиссия</Description>
						<Order>100</Order>
						<Source>ReturnFromCustomer</Source>
						<Receiver>ПродажаКомиссия</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Catalogs</Code>
			<Description>Catalogs                                          </Description>
			<Order>100</Order>
			<Group>
				<Code>Classifiers</Code>
				<Description>Classifiers                                       </Description>
				<Order>50</Order>
				<Rule>
					<Code>Banks</Code>
					<Description>Справочник: Banks</Description>
					<Order>50</Order>
					<Donotreplace>true</Donotreplace>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<Source>CatalogRef.Banks</Source>
					<Receiver>CatalogRef.Банки</Receiver>
					<Properties>
						<Property Search="true">
							<Code>3</Code>
							<Description>Code --&gt; Code</Description>
							<Order>150</Order>
							<Source Name="Code" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
							<CastToLength>9</CastToLength>
						</Property>
						<Property Search="true" Required="true">
							<Code>12</Code>
							<Description>IsFolder --&gt; IsFolder</Description>
							<Order>600</Order>
							<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
							<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Description --&gt; Description</Description>
							<Order>650</Order>
							<Source Name="Description" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>700</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>Родитель --&gt; Родитель</Description>
							<Order>750</Order>
							<Source Name="Parent" Kind="Свойство" Type="CatalogRef.Banks"/>
							<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.Банки"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Address --&gt; Адрес</Description>
							<Order>800</Order>
							<Source Name="Address" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Адрес" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>City --&gt; Город</Description>
							<Order>850</Order>
							<Source Name="City" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Город" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>PhoneNumbers --&gt; Телефоны</Description>
							<Order>900</Order>
							<Source Name="PhoneNumbers" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Телефоны" Kind="Реквизит" Type="Строка"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>Валюты</Code>
					<Description>Справочник: Currencies</Description>
					<Order>100</Order>
					<Donotreplace>true</Donotreplace>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<Source>CatalogRef.Currencies</Source>
					<Receiver>CatalogRef.Валюты</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Code --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>Description --&gt; Description</Description>
							<Order>100</Order>
							<Source Name="Description" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DescriptionFull --&gt; НаименованиеПолное</Description>
							<Order>150</Order>
							<Source Name="DescriptionFull" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>InWordParametersInHomeLanguage --&gt; ПараметрыПрописиНаРусском</Description>
							<Order>200</Order>
							<Source Name="InWordParametersInHomeLanguage" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПараметрыПрописиНаРусском" Kind="Реквизит" Type="Строка"/>
							<BeforeExport> 
							If Parameters.SettingVariant = "Accounting4" Then
								Cancel = True;
							EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>КлассификаторЕдиницИзмерения</Code>
					<Description>Справочник: UOM classifier</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<UseQuickSearchOnImport>true</UseQuickSearchOnImport>
					<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
					<Source>CatalogRef.UOMClassifier</Source>
					<Receiver>CatalogRef.КлассификаторЕдиницИзмерения</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Description --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>DescriptionFull --&gt; НаименованиеПолное</Description>
							<Order>100</Order>
							<Source Name="DescriptionFull" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>150</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Наименование --&gt; Наименование</Description>
							<Order>250</Order>
							<Source Name="Description" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>СтраныМира</Code>
					<Description>Справочник: World countries</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<UseQuickSearchOnImport>true</UseQuickSearchOnImport>
					<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
					<Source>CatalogRef.WorldCountries</Source>
					<Receiver>CatalogRef.СтраныМира</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Code --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>AlphaCode2 --&gt; КодАльфа2</Description>
							<Order>100</Order>
							<Source Name="AlphaCode2" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="КодАльфа2" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>AlphaCode3 --&gt; КодАльфа3</Description>
							<Order>150</Order>
							<Source Name="AlphaCode3" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="КодАльфа3" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Description --&gt; Description</Description>
							<Order>200</Order>
							<Source Name="Description" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>LongDescription --&gt; НаименованиеПолное</Description>
							<Order>250</Order>
							<Source Name="LongDescription" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Rule>
				<Code>СчетаВидыНоменклатуры</Code>
				<Description>План счетов: Chart of accounts</Description>
				<Order>50</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>ПланСчетовСсылка.Managerial</Source>
				<Receiver>СправочникСсылка.ВидыНоменклатуры</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Наименование --&gt; Наименование</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>БанковскиеСчета</Code>
				<Description>Справочник: Bank accounts</Description>
				<Order>100</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.BankAccounts</Source>
				<Receiver>CatalogRef.БанковскиеСчета</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Bank --&gt; Банк</Description>
						<Order>50</Order>
						<Source Name="Bank" Kind="Реквизит" Type="CatalogRef.Banks"/>
						<Receiver Name="Банк" Kind="Реквизит" Type="CatalogRef.Банки"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>CashCurrency --&gt; ВалютаДенежныхСредств</Description>
						<Order>100</Order>
						<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
						<Receiver Name="ВалютаДенежныхСредств" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>AccountType --&gt; ВидСчета</Description>
						<Order>150</Order>
						<Source Name="AccountType" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="ВидСчета" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>200</Order>
						<Source Name="Owner" Kind="Свойство"/>
						<Receiver Name="Owner" Kind="Свойство"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>ClosingDate --&gt; ДатаЗакрытия</Description>
						<Order>250</Order>
						<Source Name="ClosingDate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="ДатаЗакрытия" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>OpeningDate --&gt; ДатаОткрытия</Description>
						<Order>300</Order>
						<Source Name="OpeningDate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="ДатаОткрытия" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Code --&gt; Code</Description>
						<Order>350</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Description --&gt; Description</Description>
						<Order>400</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>9</Code>
						<Description>AccountNo --&gt; НомерСчета</Description>
						<Order>450</Order>
						<Source Name="AccountNo" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="НомерСчета" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>500</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>AmountWithoutCents --&gt; СуммаБезКопеек</Description>
						<Order>550</Order>
						<Source Name="AmountWithoutCents" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="СуммаБезКопеек" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>CorrespondentText --&gt; ТекстКорреспондента</Description>
						<Order>600</Order>
						<Source Name="CorrespondentText" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="ТекстКорреспондента" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>DestinationText --&gt; ТекстНазначения</Description>
						<Order>650</Order>
						<Source Name="DestinationText" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="ТекстНазначения" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>14</Code>
						<Description>AccountsBank --&gt; БанкДляРасчетов</Description>
						<Order>700</Order>
						<Source Name="AccountsBank" Kind="Реквизит" Type="CatalogRef.Banks"/>
						<Receiver Name="БанкДляРасчетов" Kind="Реквизит" Type="CatalogRef.Банки"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Контрагенты</Code>
				<Description>Справочник: Counterparties</Description>
				<Order>150</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Counterparties</Source>
				<Receiver>CatalogRef.Контрагенты</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.Контрагенты"/>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						<BeforeExport>Если Source.Родитель = Source.Ссылка Тогда
	Value = Неопределено;	
КонецЕсли;</BeforeExport>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>TIN --&gt; ИНН</Description>
						<Order>300</Order>
						<Source Name="TIN" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="ИНН" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>DescriptionFull --&gt; НаименованиеПолное</Description>
						<Order>350</Order>
						<Source Name="DescriptionFull" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>LegalEntityIndividual --&gt; ЮридическоеФизическоеЛицо</Description>
						<Order>400</Order>
						<Source Name="LegalEntityIndividual" Kind="Реквизит" Type="ПеречислениеСсылка.CounterpartyKinds"/>
						<Receiver Name="ЮридическоеФизическоеЛицо" Kind="Реквизит" Type="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
						<ConversionRuleCode>ЮридическоеФизическоеЛицо                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>450</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>BankAccountByDefault --&gt; ОсновнойБанковскийСчет</Description>
						<Order>500</Order>
						<Source Name="BankAccountByDefault" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
						<Receiver Name="ОсновнойБанковскийСчет" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
						<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>ContractByDefault --&gt; ОсновнойДоговорКонтрагента</Description>
						<Order>550</Order>
						<Source Name="ContractByDefault" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
						<Receiver Name="ОсновнойДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
						<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
						Cancel = True;
			EndIf;	</BeforeExport>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>--&gt; ГоловнойКонтрагент</Description>
						<Order>600</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ГоловнойКонтрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
						<BeforeExport>Value = Source.Ref;</BeforeExport>
					</Property>
					<Group>
						<Code>14</Code>
						<Description>ContactInformation --&gt; КонтактнаяИнформация</Description>
						<Order>700</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="КонтактнаяИнформация" Kind="TabularSection"/>
						<BeforeProcessExport>Если Source.IsFolder = Истина Тогда
	
	Cancel = Истина;
	
КонецЕсли;</BeforeProcessExport>
						<Property>
							<Code>15</Code>
							<Description>EmailAddress --&gt; АдресЭП</Description>
							<Order>50</Order>
							<Source Name="EmailAddress" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="АдресЭП" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Type --&gt; Тип</Description>
							<Order>100</Order>
							<Source Name="Type" Kind="Реквизит" Type="ПеречислениеСсылка.ContactInformationTypes"/>
							<Receiver Name="Тип" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							<ConversionRuleCode>ТипыКонтактнойИнформации                          </ConversionRuleCode>
						</Property>
						<Property Disable= "true">
							<Code>17</Code>
							<Description>FieldValues --&gt; ЗначенияПолей</Description>
							<Order>150</Order>
							<Source Name="FieldValues" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ЗначенияПолей" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Presentation --&gt; Представление</Description>
							<Order>200</Order>
							<Source Name="Presentation" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Представление" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Kind --&gt; Вид</Description>
							<Order>250</Order>
							<Source Name="Kind" Kind="Реквизит" Type="CatalogRef.ContactInformationKinds"/>
							<Receiver Name="Вид" Kind="Реквизит" Type="CatalogRef.ВидыКонтактнойИнформации"/>
							<ConversionRuleCode>ВидыКонтактнойИнформации                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>City --&gt; Город</Description>
							<Order>300</Order>
							<Source Name="City" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Город" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>ServerDomainName --&gt; ДоменноеИмяСервера</Description>
							<Order>350</Order>
							<Source Name="ServerDomainName" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ДоменноеИмяСервера" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>PhoneNumber --&gt; НомерТелефона</Description>
							<Order>400</Order>
							<Source Name="PhoneNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерТелефона" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>PhoneNumberWithoutCodes --&gt; НомерТелефонаБезКодов</Description>
							<Order>450</Order>
							<Source Name="PhoneNumberWithoutCodes" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерТелефонаБезКодов" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>Region --&gt; Регион</Description>
							<Order>500</Order>
							<Source Name="Region" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Регион" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>Country --&gt; Страна</Description>
							<Order>550</Order>
							<Source Name="Country" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Страна" Kind="Реквизит" Type="Строка"/>
						</Property>
					</Group>
					<Property>
						<Code>26</Code>
						<Description>Comment --&gt; Комментарий</Description>
						<Order>750</Order>
						<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Номенклатура</Code>
				<Description>Справочник: Products and services</Description>
				<Order>200</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ProductsAndServices</Source>
				<Receiver>CatalogRef.Номенклатура</Receiver>
				<Properties>
					<Property Disable="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.Номенклатура"/>
						<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
						<BeforeExport>Если Source.Родитель = Source.Ref Тогда
	Value = Неопределено;	
КонецЕсли;</BeforeExport>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>Comment --&gt; Комментарий</Description>
						<Order>300</Order>
						<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>CountryOfOrigin --&gt; СтранаПроисхождения</Description>
						<Order>350</Order>
						<Source Name="CountryOfOrigin" Kind="Реквизит" Type="CatalogRef.WorldCountries"/>
						<Receiver Name="СтранаПроисхождения" Kind="Реквизит" Type="CatalogRef.СтраныМира"/>
						<ConversionRuleCode>СтраныМира                                        </ConversionRuleCode>
						<BeforeExport>IF  Source.IsFolder Then
	Cancel = True;	
EndIF;</BeforeExport>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>DescriptionFull --&gt; НаименованиеПолное</Description>
						<Order>400</Order>
						<Source Name="DescriptionFull" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
						<Order>450</Order>
						<Source Name="MeasurementUnit" Kind="Реквизит" Type="CatalogRef.UOMClassifier"/>
						<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
						<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
						<BeforeExport>IF  Source.IsFolder Then
	Cancel = True;	
EndIF;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>10</Code>
						<Description>SKU --&gt; Артикул</Description>
						<Order>500</Order>
						<Source Name="SKU" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Артикул" Kind="Реквизит" Type="Строка"/>
						<BeforeExport>IF  Source.IsFolder Then
	Cancel = True;	
EndIF;</BeforeExport>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>VATRate --&gt; СтавкаНДС</Description>
						<Order>550</Order>
						<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
						<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
						<BeforeExport>
	IF  Source.IsFolder Then
		Cancel = True;
	EndIf;
	
	If Parameters.SettingVariant = "Accounting4" Then
		Cancel = True;
	EndIf;
	Если НЕ Source.IsFolder Тогда
	Если Source.VATRate.NotTaxable Тогда
		Expression = "Перечисления.СтавкиНДС.БезНДС";	
	ИначеЕсли Source.VATRate.Rate = 18
		 И НЕ Source.VATRate.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС18";
	ИначеЕсли Source.VATRate.Rate = 18
			И Source.VATRate.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС18_118";
	ИначеЕсли Source.VATRate.Rate = 10 
		 И НЕ Source.VATRate.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС10";
	ИначеЕсли Source.VATRate.Rate = 10 
			И Source.СтавкаНДС.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС10_110";
	ИначеЕсли Source.VATRate.Rate = 0 Тогда
		Expression = "Перечисления.СтавкиНДС.НДС0"; 
	ИначеЕсли Source.VATRate.Rate = 20
		 И НЕ Source.VATRate.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС20";
	ИначеЕсли Source.VATRate.Rate = 20
			И Source.VATRate.Calculated Тогда
		Expression = "Перечисления.СтавкиНДС.НДС20_120";
	Иначе
		Expression = "Перечисления.СтавкиНДС.НДС18";
	КонецЕсли;
КонецЕсли;</BeforeExport>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>Vendor --&gt; Импортер</Description>
						<Order>600</Order>
						<Source Name="Vendor" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Импортер" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						<BeforeExport>IF  Source.IsFolder Then
	Cancel = True;	
EndIF;</BeforeExport>

					</Property>
					<Property>
						<Code>13</Code>
						<Description>ProductsAndServicesType --&gt; Услуга</Description>
						<Order>650</Order>
						<Source Name="ProductsAndServicesType" Kind="Реквизит" Type="ПеречислениеСсылка.ProductsAndServicesTypes"/>
						<Receiver Name="Услуга" Kind="Реквизит" Type="Булево"/>
						<BeforeExport>Если НЕ Source.IsFolder Тогда
	
	Value = (Source.ProductsAndServicesType = Enums.ProductsAndServicesTypes.Service)
		ИЛИ (Source.ProductsAndServicesType = Enums.ProductsAndServicesTypes.Work);
	
КонецЕсли;</BeforeExport>
					</Property>
					<Property>
						<Code>18</Code>
						<Description>--&gt; HệSố</Description>
						<Order>750</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="HệSố" Kind="Реквизит" Type="Число"/>
						<BeforeExport>
						If Parameters.SettingVariant = "Accounting4" Then
							Cancel = True;
						EndIf;
						Value = 1;</BeforeExport>
					</Property>
					<Property>
						<Code>19</Code>
						<Description>InventoryGLAccount --&gt; ВидНоменклатуры</Description>
						<Order>800</Order>
						<Source Name="InventoryGLAccount" Kind="Реквизит" Type="ПланСчетовСсылка.Managerial"/>
						<Receiver Name="ВидНоменклатуры" Kind="Реквизит" Type="СправочникСсылка.ВидыНоменклатуры"/>
						<ConversionRuleCode>СчетаВидыНоменклатуры                             </ConversionRuleCode>
						<BeforeExport>
						IF Source.IsFolder Then
	Cancel = True;	
EndIf;
						If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIf; </BeforeExport>
						<OnExport>ExportObject = True; </OnExport>
					</Property>
					<Property>
						<Code>20</Code>
						<Description>VATRate --&gt; ВидСтавкиНДС</Description>
						<Order>850</Order>
						<Source Name="VATRate" Kind="Реквизит" Type="СправочникСсылка.VATRates"/>
						<Receiver Name="ВидСтавкиНДС" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыСтавокНДС"/>
						<BeforeExport>
	
If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;	
EndIf;

IF Not Source.IsFolder Then
	
	Если Source.VATRate.Rate = 10 Тогда
		Expression =  "Перечисления.ВидыСтавокНДС.Общая";
	ИначеЕсли Source.VATRate.Rate = 5 Тогда
		Expression =  "Перечисления.ВидыСтавокНДС.Пониженная";
	ИначеЕсли Source.VATRate.Rate = 0 Тогда
		Expression =  "Перечисления.ВидыСтавокНДС.Нулевая";
	ИначеЕсли Source.VATRate.NotTaxable Тогда
		Expression =  "Перечисления.ВидыСтавокНДС.БезНДС";
	КонецЕсли;
EndIf;
						</BeforeExport>
					</Property>
					<Property>
						<Code>21</Code>
						<Description>ProductsAndServicesCategory --&gt; НоменклатурнаяГруппа</Description>
						<Order>900</Order>
						<Source Name="ProductsAndServicesCategory" Kind="Реквизит" Type="СправочникСсылка.ProductsAndServicesCategories"/>
						<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="СправочникСсылка.НоменклатурныеГруппы"/>
						<ConversionRuleCode>НоменклатурныеГруппы                              </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Организации</Code>
				<Description>Справочник: Companies</Description>
				<Order>250</Order>
				<BeforeExport>If Source.IsFolder = True Then
	
	Отказ = True;
	
EndIf;</BeforeExport>
				<ПослеЗагрузки>

If Not ObjectFound Then
	Parameters.LoadOrganization.Add(Object);
EndIf;</ПослеЗагрузки>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Companies</Source>
				<Receiver>CatalogRef.Организации</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>BankAccountByDefault --&gt; ОсновнойБанковскийСчет</Description>
						<Order>200</Order>
						<Source Name="BankAccountByDefault" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
						<Receiver Name="ОсновнойБанковскийСчет" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
						<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>LegalEntityIndividual --&gt; ЮридическоеФизическоеЛицо</Description>
						<Order>250</Order>
						<Source Name="LegalEntityIndividual" Kind="Реквизит" Type="ПеречислениеСсылка.CounterpartyKinds"/>
						<Receiver Name="ЮридическоеФизическоеЛицо" Kind="Реквизит" Type="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>RegistrationCountry --&gt; СтранаРегистрации</Description>
						<Order>300</Order>
						<Source Name="RegistrationCountry" Kind="Реквизит" Type="CatalogRef.WorldCountries"/>
						<Receiver Name="СтранаРегистрации" Kind="Реквизит" Type="CatalogRef.СтраныМира"/>
						<ConversionRuleCode>СтраныМира                                        </ConversionRuleCode>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>RegistrationDate --&gt; ДатаРегистрации</Description>
						<Order>350</Order>
						<Source Name="RegistrationDate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="ДатаРегистрации" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>TIN --&gt; ИНН</Description>
						<Order>400</Order>
						<Source Name="TIN" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="ИНН" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>--&gt; РайонныйКоэффициент</Description>
						<Order>450</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="РайонныйКоэффициент" Kind="Реквизит" Type="Число"/>
						<BeforeExport>Value  = 1;</BeforeExport>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>--&gt; ГоловнаяОрганизация</Description>
						<Order>500</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ГоловнаяОрганизация" Kind="Реквизит" Type="CatalogRef.Организации"/>
						<BeforeExport>Value = Source.Ref;</BeforeExport>
					</Property>
					<Group>
						<Code>11</Code>
						<Description>ContactInformation --&gt; КонтактнаяИнформация</Description>
						<Order>550</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="КонтактнаяИнформация" Kind="TabularSection"/>
						<Property>
							<Code>12</Code>
							<Description>City --&gt; Город</Description>
							<Order>50</Order>
							<Source Name="City" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Город" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Country --&gt; Страна</Description>
							<Order>100</Order>
							<Source Name="Country" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Страна" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>EmailAddress --&gt; АдресЭП</Description>
							<Order>150</Order>
							<Source Name="EmailAddress" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="АдресЭП" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Kind --&gt; Вид</Description>
							<Order>250</Order>
							<Source Name="Kind" Kind="Реквизит" Type="CatalogRef.ContactInformationKinds"/>
							<Receiver Name="Вид" Kind="Реквизит" Type="CatalogRef.ВидыКонтактнойИнформации"/>
							<ConversionRuleCode>ВидыКонтактнойИнформации                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>PhoneNumber --&gt; НомерТелефона</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерТелефона" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>PhoneNumberWithoutCodes --&gt; НомерТелефонаБезКодов</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberWithoutCodes" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерТелефонаБезКодов" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Presentation --&gt; Представление</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Представление" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>Region --&gt; Регион</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Регион" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>ServerDomainName --&gt; ДоменноеИмяСервера</Description>
							<Order>500</Order>
							<Source Name="ServerDomainName" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ДоменноеИмяСервера" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>Type --&gt; Тип</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Реквизит" Type="ПеречислениеСсылка.ContactInformationTypes"/>
							<Receiver Name="Тип" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							<ConversionRuleCode>ТипыКонтактнойИнформации                          </ConversionRuleCode>
						</Property>
					</Group>
					<Property>
						<Code>23</Code>
						<Description>DescriptionFull --&gt; НаименованиеПолное</Description>
						<Order>600</Order>
						<Source Name="DescriptionFull" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>24</Code>
						<Description>Description --&gt; НаименованиеСокращенное</Description>
						<Order>650</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="НаименованиеСокращенное" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>НоменклатурныеГруппы</Code>
				<Description>Справочник: Products and services groups</Description>
				<Order>300</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ProductsAndServicesCategories</Source>
				<Receiver>CatalogRef.НоменклатурныеГруппы</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Disable="true">
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.ProductsAndServicesCategories"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.НоменклатурныеГруппы"/>
						<BeforeExport>Cancel = True;</BeforeExport>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>--&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<BeforeExport>Value = False;</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ФизическиеЛица</Code>
				<Description>Справочник: Individuals</Description>
				<Order>350</Order>
				<BeforeExport>If Source.IsFolder = True Then
	
	Cancel = True;
	
EndIf;</BeforeExport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Individuals</Source>
				<Receiver>CatalogRef.ФизическиеЛица</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.Individuals"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ФизическиеЛица"/>
						<ConversionRuleCode>ФизическиеЛица                                     </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Birthdate --&gt; ДатаРождения</Description>
						<Order>300</Order>
						<Source Name="Birthdate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="ДатаРождения" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Group>
						<Code>7</Code>
						<Description>ContactInformation --&gt; КонтактнаяИнформация</Description>
						<Order>350</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="КонтактнаяИнформация" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder = True Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
					</Group>
					<Property>
						<Code>18</Code>
						<Description>Description --&gt; ФИО</Description>
						<Order>400</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="ФИО" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ДоговорыКонтрагентов</Code>
				<Description>Справочник: Contracts</Description>
				<Order>400</Order>
				<AfterImport>ВалютаРегламентированногоУчета	= Parameters.NationalCurrency;
Объект.ОплатаВВалюте 			= (Объект.ВалютаВзаиморасчетов &lt;&gt; ВалютаРегламентированногоУчета)
										И НЕ Объект.РасчетыВУсловныхЕдиницах;
										
Объект.УстановленСрокОплаты     = Объект.СрокОплаты &lt;&gt; 0;</AfterImport>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.CounterpartyContracts</Source>
				<Receiver>CatalogRef.ДоговорыКонтрагентов</Receiver>
				<Properties>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Код" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>250</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.CounterpartyContracts"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ДоговорыКонтрагентов"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>300</Order>
						<Source Name="Owner" Kind="Свойство" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Владелец" Kind="Свойство" Type="CatalogRef.Контрагенты"/>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>Company --&gt; Организация</Description>
						<Order>350</Order>
						<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
						<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
						<ConversionRuleCode>Организации                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>ContractDate --&gt; Дата</Description>
						<Order>400</Order>
						<Source Name="ContractDate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="Дата" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>ContractNo --&gt; Номер</Description>
						<Order>450</Order>
						<Source Name="ContractNo" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Номер" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property Search="true" Required="true">
						<Code>10</Code>
						<Description>--&gt; IsFolder</Description>
						<Order>500</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<BeforeExport>Value = False;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>11</Code>
						<Description>ContractKind --&gt; ВидДоговора</Description>
						<Order>550</Order>
						<Source Name="ContractKind" Kind="Реквизит" Type="ПеречислениеСсылка.ContractKinds"/>
						<Receiver Name="ВидДоговора" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
						<ConversionRuleCode>ВидыДоговоровКонтрагентов                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>PriceKind --&gt; ТипЦен</Description>
						<Order>600</Order>
						<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
						<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
						<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						<BeforeExport>Cancel = Истина;</BeforeExport>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>--&gt; СрокОплаты</Description>
						<Order>650</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="СрокОплаты" Kind="Реквизит" Type="Число"/>
						<BeforeExport>
If Source.ContractKind = Enums.ContractKinds.WithCustomer
	Or Source.ContractKind = Enums.ContractKinds.WithAgent Then
	Value = Source.CustomerPaymentDueDate;
ElsIf   Source.ContractKind = Enums.ContractKinds.WithVendor
	Or Source.ContractKind = Enums.ContractKinds.FromPrincipal Then
	Value = Source.VendorPaymentDueDate;
Else
	Value = 0;
EndIf;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>14</Code>
						<Description>SettlementsCurrency --&gt; ВалютаВзаиморасчетов</Description>
						<Order>700</Order>
						<Source Name="SettlementsCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
						<Receiver Name="ВалютаВзаиморасчетов" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ДоговорыКонтрагентовПоискПоИдентификатору</Code>
				<Description>Справочник: Contracts</Description>
				<Order>450</Order>
				<AfterImport>ВалютаРегламентированногоУчета	= Параметры.ВалютаРегламентированногоУчета;
Object.ОплатаВВалюте 			= (Object.ВалютаВзаиморасчетов &lt;&gt; ВалютаРегламентированногоУчета)
										И НЕ Object.РасчетыВУсловныхЕдиницах;
										
Object.УстановленСрокОплаты     = Object.СрокОплаты &lt;&gt; 0;</AfterImport>
				<DontRememberExported>true</DontRememberExported>
				<SynchronizeByID>true</SynchronizeByID>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.CounterpartyContracts</Source>
				<Receiver>CatalogRef.ДоговорыКонтрагентов</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Свойство" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Owner" Kind="Свойство" Type="CatalogRef.Контрагенты"/>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>250</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.CounterpartyContracts"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ДоговорыКонтрагентов"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Company --&gt; Организация</Description>
						<Order>300</Order>
						<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
						<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
						<ConversionRuleCode>Организации                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>SettlementsInStandardUnits --&gt; РасчетыВУсловныхЕдиницах</Description>
						<Order>350</Order>
						<Source Name="SettlementsInStandardUnits" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="РасчетыВУсловныхЕдиницах" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>SettlementsCurrency --&gt; ВалютаВзаиморасчетов</Description>
						<Order>400</Order>
						<Source Name="SettlementsCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
						<Receiver Name="ВалютаВзаиморасчетов" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>9</Code>
						<Description>--&gt; IsFolder</Description>
						<Order>450</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<BeforeExport>Value = False;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>10</Code>
						<Description>ContractKind --&gt; ВидДоговора</Description>
						<Order>500</Order>
						<Source Name="ContractKind" Kind="Реквизит" Type="ПеречислениеСсылка.ContractKinds"/>
						<Receiver Name="ВидДоговора" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыДоговоровКонтрагентов"/>
						<ConversionRuleCode>ВидыДоговоровКонтрагентов                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>PriceKind --&gt; ТипЦен</Description>
						<Order>550</Order>
						<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
						<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
						<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>--&gt; СрокОплаты</Description>
						<Order>600</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="СрокОплаты" Kind="Реквизит" Type="Число"/>
						<BeforeExport>
If Source.ContractKind = Enums.ContractKinds.WithCustomer
	Or Source.ContractKind = Enums.ContractKinds.WithAgent Then
	Value = Source.CustomerPaymentDueDate;
ElsIf   Source.ContractKind = Enums.ContractKinds.WithVendor
	Or Source.ContractKind = Enums.ContractKinds.FromPrincipal Then
	Value = Source.VendorPaymentDueDate;
Else
	Value = 0;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>ContractDate --&gt; Дата</Description>
						<Order>650</Order>
						<Source Name="ContractDate" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="Date" Kind="Реквизит" Type="Дата"/>
					</Property>
					<Property>
						<Code>14</Code>
						<Description>ContractNo --&gt; Номер</Description>
						<Order>700</Order>
						<Source Name="ContractNo" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Номер" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>НомераГТД</Code>
				<Description>Справочник: CCD numbers</Description>
				<Order>500</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.CCDNumbers</Source>
				<Receiver>CatalogRef.НомераГТД</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>100</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>СтатьиДвиженияДенежныхСредств</Code>
				<Description>Справочник: Cash flow items</Description>
				<Order>550</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.CashFlowItems</Source>
				<Receiver>CatalogRef.СтатьиДвиженияДенежныхСредств</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.CashFlowItems"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
						<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Склады</Code>
				<Description>Справочник: Business units</Description>
				<Order>600</Order>
				<ПослеЗагрузки>If LoadModeInInfoBase() Then
	NewRow = Parameters.ImportObjectTable.Add();
	NewRow.ImportObject = Object;
	NewRow.ObjectParameters  = ObjectParameters;
	NewRow.Ref = Ref;
EndIf;</ПослеЗагрузки>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.StructuralUnits</Source>
				<Receiver>CatalogRef.Склады</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.StructuralUnits"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.Склады"/>
						<BeforeExport>Empty = True;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>StructuralUnitType --&gt; ТипСклада</Description>
						<Order>250</Order>
						<Source Name="StructuralUnitType" Kind="Реквизит" Type="ПеречислениеСсылка.StructuralUnitsTypes"/>
						<Receiver Name="ТипСклада" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыСкладов"/>
						<ConversionRuleCode>ТипыСкладов                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>RetailPriceKind --&gt; ТипЦенРозничнойТорговли</Description>
						<Order>300</Order>
						<Source Name="RetailPriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
						<Receiver Name="ТипЦенРозничнойТорговли" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
						<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ПроизводственныеСклады</Code>
				<Description>Справочник: Business units</Description>
				<Order>650</Order>
				<ПослеЗагрузки>If LoadModeInInfoBase() Then
	NewRow = Parameters.ImportObjectTable.Add();
	NewRow.ImportObject = Object;
	NewRow.ObjectParameters  = ObjectParameters;
	NewRow.Ref = Ref;
EndIf;</ПослеЗагрузки>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.StructuralUnits</Source>
				<Receiver>CatalogRef.Склады</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.StructuralUnits"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.Склады"/>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>--&gt; ТипСклада</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ТипСклада" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыСкладов"/>
						<BeforeExport>Value = "ОптовыйСклад";</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>СпецификацииНоменклатуры</Code>
				<Description>Справочник: Bills of materials</Description>
				<Order>700</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Specifications</Source>
				<Receiver>CatalogRef.СпецификацииНоменклатуры</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Свойство" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Owner" Kind="Свойство" Type="CatalogRef.Номенклатура"/>
						<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Required="true">
						<Code>5</Code>
						<Description>--&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<BeforeExport>Value = False;</BeforeExport>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>--&gt; Количество</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
						<BeforeExport>Value = 1;</BeforeExport>
					</Property>
					<Group>
						<Code>7</Code>
						<Description>Content --&gt; ИсходныеКомплектующие</Description>
						<Order>350</Order>
						<Source Name="Content" Kind="TabularSection"/>
						<Receiver Name="ИсходныеКомплектующие" Kind="TabularSection"/>
						<Property>
							<Code>8</Code>
							<Description>ProductsAndServices --&gt; Номенклатура</Description>
							<Order>50</Order>
							<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
							<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Quantity --&gt; Количество</Description>
							<Order>100</Order>
							<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ТипыЦенНоменклатуры</Code>
				<Description>Справочник: Price kinds</Description>
				<Order>750</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.PriceKinds</Source>
				<Receiver>CatalogRef.ТипыЦенНоменклатуры</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>PriceCurrency --&gt; ВалютаЦены</Description>
						<Order>200</Order>
						<Source Name="PriceCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
						<Receiver Name="ВалютаЦены" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>RoundUp --&gt; ОкруглятьВБольшуюСторону</Description>
						<Order>250</Order>
						<Source Name="RoundUp" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="ОкруглятьВБольшуюСторону" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>RoundingOrder --&gt; ПорядокОкругления</Description>
						<Order>300</Order>
						<Source Name="RoundingOrder" Kind="Реквизит" Type="ПеречислениеСсылка.RoundingMethods"/>
						<Receiver Name="ПорядокОкругления" Kind="Реквизит" Type="ПеречислениеСсылка.ПорядкиОкругления"/>
						<ConversionRuleCode>ПорядкиОкругления                                 </ConversionRuleCode>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>PriceIncludesVAT --&gt; ЦенаВключаетНДС</Description>
						<Order>350</Order>
						<Source Name="PriceIncludesVAT" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="ЦенаВключаетНДС" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Comment --&gt; Комментарий</Description>
						<Order>400</Order>
						<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ПодразделенияОрганизаций</Code>
				<Description>Справочник: Business units</Description>
				<Order>800</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.StructuralUnits</Source>
				<Receiver>CatalogRef.ПодразделенияОрганизаций</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.StructuralUnits"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ПодразделенияОрганизаций"/>
						<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>Company --&gt; Владелец</Description>
						<Order>250</Order>
						<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
						<Receiver Name="Owner" Kind="Свойство" Type="CatalogRef.Организации"/>
						<ConversionRuleCode>Организации                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>--&gt; РайонныйКоэффициент</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="РайонныйКоэффициент" Kind="Реквизит" Type="Число"/>
						<OnExport>Value = 1;</OnExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ВидыКонтактнойИнформации</Code>
				<Description>Справочник: Contact information kinds</Description>
				<Order>850</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.ContactInformationKinds</Source>
				<Receiver>CatalogRef.ВидыКонтактнойИнформации</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Type --&gt; Тип</Description>
						<Order>50</Order>
						<Source Name="Type" Kind="Реквизит" Type="ПеречислениеСсылка.ContactInformationTypes"/>
						<Receiver Name="Тип" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<ConversionRuleCode>ТипыКонтактнойИнформации                          </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>CanChangeEditMode --&gt; МожноИзменятьСпособРедактирования</Description>
						<Order>200</Order>
						<Source Name="CanChangeEditMode" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="МожноИзменятьСпособРедактирования" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>EditInDialogOnly --&gt; РедактированиеТолькоВДиалоге</Description>
						<Order>250</Order>
						<Source Name="EditInDialogOnly" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="РедактированиеТолькоВДиалоге" Kind="Реквизит" Type="Булево"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>AdditionalOrderingAttribute --&gt; РеквизитДопУпорядочивания</Description>
						<Order>300</Order>
						<Source Name="AdditionalOrderingAttribute" Kind="Реквизит" Type="Число"/>
						<Receiver Name="РеквизитДопУпорядочивания" Kind="Реквизит" Type="Число"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>350</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.ContactInformationKinds"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ВидыКонтактнойИнформации"/>
						<ConversionRuleCode>ВидыКонтактнойИнформации                          </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>8</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>400</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CatalogCompanies --&gt; СправочникОрганизации</Description>
						<Order>50</Order>
						<Source>CatalogCompanies</Source>
						<Receiver>СправочникОрганизации</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>CatalogContactPersons --&gt; СправочникКонтактныеЛица</Description>
						<Order>100</Order>
						<Source>CatalogContactPersons</Source>
						<Receiver>СправочникКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>CatalogCounterparties --&gt; СправочникКонтрагенты</Description>
						<Order>150</Order>
						<Source>CatalogCounterparties</Source>
						<Receiver>СправочникКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>CatalogIndividuals --&gt; СправочникФизическиеЛица</Description>
						<Order>200</Order>
						<Source>CatalogIndividuals</Source>
						<Receiver>СправочникФизическиеЛица</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>CatalogStructuralUnits --&gt; СправочникПодразделения</Description>
						<Order>250</Order>
						<Source>CatalogStructuralUnits</Source>
						<Receiver>СправочникПодразделенияОрганизаций</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>CatalogUsers --&gt; СправочникПользователи</Description>
						<Order>300</Order>
						<Source>CatalogUsers</Source>
						<Receiver>СправочникПользователи</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>CompanyActualAddress --&gt; ФактАдресОрганизации</Description>
						<Order>350</Order>
						<Source>CompanyActualAddress</Source>
						<Receiver>ФактАдресОрганизации</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>CompanyEmail --&gt; EmailОрганизации</Description>
						<Order>400</Order>
						<Source>CompanyEmail</Source>
						<Receiver>EmailОрганизации</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>CompanyFax --&gt; ФаксОрганизации</Description>
						<Order>450</Order>
						<Source>CompanyFax</Source>
						<Receiver>ФаксОрганизации</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>CompanyLegalAddress --&gt; ПочтовыйАдресОрганизации</Description>
						<Order>500</Order>
						<Source>CompanyLegalAddress</Source>
						<Receiver>ПочтовыйАдресОрганизации</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>CompanyOtherInformation --&gt; ДругаяИнформацияОргани</Description>
						<Order>550</Order>
						<Source>CompanyOtherInformation</Source>
						<Receiver>ДругаяИнформацияОрганизации</Receiver>
					</Value>
					<Value>
						<Code>12</Code>
						<Description>CompanyPhone --&gt; ТелефонОрганизации</Description>
						<Order>600</Order>
						<Source>CompanyPhone</Source>
						<Receiver>ТелефонОрганизации</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>CompanyPostalAddress --&gt; ПочтовыйАдресОрганизации</Description>
						<Order>650</Order>
						<Source>CompanyPostalAddress</Source>
						<Receiver>ПочтовыйАдресОрганизации</Receiver>
					</Value>
					<Value>
						<Code>14</Code>
						<Description>ContactPersonEmail --&gt; EmailКонтактныеЛица</Description>
						<Order>700</Order>
						<Source>ContactPersonEmail</Source>
						<Receiver>EmailКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>15</Code>
						<Description>ContactPersonMessenger --&gt; ДругаяИнформацияКонтакт</Description>
						<Order>750</Order>
						<Source>ContactPersonMessenger</Source>
						<Receiver>ДругаяИнформацияКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>16</Code>
						<Description>ContactPersonPhone --&gt; ТелефонМобильныйКонтактныеЛ</Description>
						<Order>800</Order>
						<Source>ContactPersonPhone</Source>
						<Receiver>ТелефонМобильныйКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>17</Code>
						<Description>ContactPersonSkype --&gt; ДругаяИнформацияКонтактныеЛ</Description>
						<Order>850</Order>
						<Source>ContactPersonSkype</Source>
						<Receiver>ДругаяИнформацияКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>18</Code>
						<Description>ContactPersonSocialNetwork --&gt; ДругаяИнформацияКон</Description>
						<Order>900</Order>
						<Source>ContactPersonSocialNetwork</Source>
						<Receiver>ДругаяИнформацияКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>19</Code>
						<Description>CounterpartyActualAddress --&gt; ПочтовыйАдресКонтраг</Description>
						<Order>950</Order>
						<Source>CounterpartyActualAddress</Source>
						<Receiver>ПочтовыйАдресКонтрагента</Receiver>
					</Value>
					<Value>
						<Code>20</Code>
						<Description>CounterpartyDeliveryAddress --&gt; ФактАдресКонтраген</Description>
						<Order>1000</Order>
						<Source>CounterpartyDeliveryAddress</Source>
						<Receiver>ФактАдресКонтрагента</Receiver>
					</Value>
					<Value>
						<Code>21</Code>
						<Description>CounterpartyEmail --&gt; EmailКонтрагенты</Description>
						<Order>1050</Order>
						<Source>CounterpartyEmail</Source>
						<Receiver>EmailКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>22</Code>
						<Description>CounterpartyFax --&gt; ФаксКонтрагенты</Description>
						<Order>1100</Order>
						<Source>CounterpartyFax</Source>
						<Receiver>ФаксКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>23</Code>
						<Description>CounterpartyLegalAddress --&gt; ЮрАдресКонтрагента</Description>
						<Order>1150</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>ЮрАдресКонтрагента</Receiver>
					</Value>
					<Value>
						<Code>24</Code>
						<Description>CounterpartyOtherInformation --&gt; ДругаяИнформацияК</Description>
						<Order>1200</Order>
						<Source>CounterpartyOtherInformation</Source>
						<Receiver>ДругаяИнформацияКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>25</Code>
						<Description>CounterpartyPhone --&gt; ТелефонКонтрагента</Description>
						<Order>1250</Order>
						<Source>CounterpartyPhone</Source>
						<Receiver>ТелефонКонтрагента</Receiver>
					</Value>
					<Value>
						<Code>26</Code>
						<Description>CounterpartyPostalAddress --&gt; ПочтовыйАдресКонтраг</Description>
						<Order>1300</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>ПочтовыйАдресКонтрагента</Receiver>
					</Value>
					<Value>
						<Code>27</Code>
						<Description>CounterpartySkype --&gt; ДругаяИнформацияКонтрагенты</Description>
						<Order>1350</Order>
						<Source>CounterpartySkype</Source>
						<Receiver>ДругаяИнформацияКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>28</Code>
						<Description>CounterpartyWebpage --&gt; ДругаяИнформацияКонтрагент</Description>
						<Order>1400</Order>
						<Source>CounterpartyWebpage</Source>
						<Receiver>ДругаяИнформацияКонтрагенты</Receiver>
					</Value>
					<Value>
						<Code>29</Code>
						<Description>IndividualActualAddress --&gt; АдресДляИнформирования</Description>
						<Order>1450</Order>
						<Source>IndividualActualAddress</Source>
						<Receiver>АдресДляИнформированияФизическиеЛица</Receiver>
					</Value>
					<Value>
						<Code>30</Code>
						<Description>IndividualEmail --&gt; EmailКонтактныеЛица</Description>
						<Order>1500</Order>
						<Source>IndividualEmail</Source>
						<Receiver>EmailКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>31</Code>
						<Description>IndividualOtherInformation --&gt; ДругаяИнформацияКон</Description>
						<Order>1550</Order>
						<Source>IndividualOtherInformation</Source>
						<Receiver>ДругаяИнформацияКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>32</Code>
						<Description>IndividualPhone --&gt; ТелефонМобильныйКонтактныеЛица</Description>
						<Order>1600</Order>
						<Source>IndividualPhone</Source>
						<Receiver>ТелефонМобильныйКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>33</Code>
						<Description>IndividualPostalAddress --&gt; АдресДляИнформирования</Description>
						<Order>1650</Order>
						<Source>IndividualPostalAddress</Source>
						<Receiver>АдресДляИнформированияКонтактныеЛица</Receiver>
					</Value>
					<Value>
						<Code>34</Code>
						<Description>StructuralUnitsActualAddress --&gt; ФактическийАдресП</Description>
						<Order>1700</Order>
						<Source>StructuralUnitsActualAddress</Source>
						<Receiver>ФактическийАдресПодразделенияОрганизаций</Receiver>
					</Value>
					<Value>
						<Code>35</Code>
						<Description>StructuralUnitsPhone --&gt; ТелефонПодразделенияОрган</Description>
						<Order>1750</Order>
						<Source>StructuralUnitsPhone</Source>
						<Receiver>ТелефонПодразделенияОрганизаций</Receiver>
					</Value>
					<Value>
						<Code>36</Code>
						<Description>UserEmail --&gt; EmailПользователя</Description>
						<Order>1800</Order>
						<Source>UserEmail</Source>
						<Receiver>EmailПользователя</Receiver>
					</Value>
					<Value>
						<Code>37</Code>
						<Description>UserPhone --&gt; ТелефонПользователя</Description>
						<Order>1850</Order>
						<Source>UserPhone</Source>
						<Receiver>ТелефонПользователя</Receiver>
					</Value>
					<Value>
						<Code>38</Code>
						<Description>UserWebpage --&gt; ДругаяИнформацияПользователя</Description>
						<Order>1900</Order>
						<Source>UserWebpage</Source>
						<Receiver>ДругаяИнформацияПользователя</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ВидыДокументовФизическихЛиц</Code>
				<Description>Справочник: Document kinds of individuals</Description>
				<Order>900</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.IndividualsDocumentsKinds</Source>
				<Receiver>CatalogRef.ВидыДокументовФизическихЛиц</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>100</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ЗначенияСвойствОбъектов</Code>
				<Description>Справочник: Additional values</Description>
				<Order>950</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ObjectsPropertiesValues</Source>
				<Receiver>CatalogRef.ЗначенияСвойствОбъектов</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Свойство" Type="ПланВидовХарактеристикСсылка.AdditionalAttributesAndInformation"/>
						<Receiver Name="Owner" Kind="Свойство" Type="ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.ObjectsPropertiesValues"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ЗначенияСвойствОбъектов"/>
						<ConversionRuleCode>ЗначенияСвойствОбъектов                           </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="IsFolder" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>Weight --&gt; Вес</Description>
						<Order>300</Order>
						<Source Name="Weight" Kind="Реквизит" Type="Число"/>
						<Receiver Name="Вес" Kind="Реквизит" Type="Число"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ЗначенияСвойствОбъектовИерархия</Code>
				<Description>Справочник: Additional values (hierarchy)</Description>
				<Order>1000</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ObjectsPropertiesValuesHierarchy</Source>
				<Receiver>CatalogRef.ЗначенияСвойствОбъектовИерархия</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Владелец --&gt; Владелец</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Свойство" Type="ПланВидовХарактеристикСсылка.AdditionalAttributesAndInformation"/>
						<Receiver Name="Owner" Kind="Свойство" Type="ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Родитель --&gt; Родитель</Description>
						<Order>150</Order>
						<Source Name="Parent" Kind="Свойство" Type="CatalogRef.ObjectsPropertiesValuesHierarchy"/>
						<Receiver Name="Parent" Kind="Свойство" Type="CatalogRef.ЗначенияСвойствОбъектовИерархия"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Weight --&gt; Вес</Description>
						<Order>200</Order>
						<Source Name="Weight" Kind="Реквизит" Type="Число"/>
						<Receiver Name="Вес" Kind="Реквизит" Type="Число"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Пользователи</Code>
				<Description>Справочник: Users</Description>
				<Order>1050</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Users</Source>
				<Receiver>CatalogRef.Пользователи</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ТипыЦенКонтрагента</Code>
				<Description>Справочник: Counterparty price kinds</Description>
				<Order>1100</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.CounterpartyPriceKind</Source>
				<Receiver>CatalogRef.ТипыЦенНоменклатуры</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Code" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Comment --&gt; Комментарий</Description>
						<Order>200</Order>
						<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>PriceCurrency --&gt; ВалютаЦены</Description>
						<Order>250</Order>
						<Source Name="PriceCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
						<Receiver Name="ВалютаЦены" Kind="Реквизит" Type="CatalogRef.Валюты"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>PriceIncludesVAT --&gt; ЦенаВключаетНДС</Description>
						<Order>300</Order>
						<Source Name="PriceIncludesVAT" Kind="Реквизит" Type="Булево"/>
						<Receiver Name="ЦенаВключаетНДС" Kind="Реквизит" Type="Булево"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ДоговорыКонтрагентовЗаймы</Code>
				<Description>Документ: Loan contract</Description>
				<Order>1200</Order>
				<SearchFieldSequence>    UUIDString = ObjectParameters["UUID"];
    UUID = New UUID(UUIDString);    
 	
	Ref = Справочники.ДоговорыКонтрагентов.GetRef(UUID);
	
	Query = New Query(
	"Select
	|    Catalog.Ref
	|From
	|    Catalog.ДоговорыКонтрагентов КАК Catalog 
	|Where
	|    Catalog.Ref = &amp;Ref
	|");                              
	Query.SetParameter("Ref",Ref);                      
	QResult = Запрос.Выполнить();
	If Not QResult.Empty() Then
		
		ObjectReference = Ref;
		
	EndIf;	
</SearchFieldSequence>
				<Source>DocumentRef.LoanContract</Source>
				<Receiver>СправочникСсылка.ДоговорыКонтрагентов</Receiver>
				<Properties>
					<Property Search="true">
						<Code>2</Code>
						<Description>--&gt; Организация</Description>
						<Order>100</Order>
						<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
						<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
						<ConversionRuleCode>Организации                                       </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>--&gt; Владелец</Description>
						<Order>150</Order>
						<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Владелец" Kind="Свойство" Type="CatalogRef.Контрагенты"/>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>--&gt; ВидДоговора</Description>
						<Order>200</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ВидДоговора" Kind="Реквизит" Type="EnumRef.ВидыДоговоровКонтрагентов"/>
						<ConversionRuleCode>ВидыДоговоровКонтрагентов                         </ConversionRuleCode>
						<BeforeExport>Expression = "Перечисления.ВидыДоговоровКонтрагентов.Прочее"</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>--&gt; ВалютаВзаиморасчетов</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ВалютаВзаиморасчетов" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						<BeforeExport>Value =  Constants.NationalCurrency.Get();</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>--&gt; Номер</Description>
						<Order>300</Order>
						<Source Name="Number" Kind="Реквизит" Type="Строка"/>
						<Receiver Name="Номер" Kind="Реквизит" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>--&gt; Дата</Description>
						<Order>350</Order>
						<Source Name="Date" Kind="Реквизит" Type="Дата"/>
						<Receiver Name="Дата" Kind="Реквизит" Type="Дата"/>
						<BeforeExport>AttrDateType = CommonUse.TypeDescriptionDate(DateFractions.Date);
Value = AttrDateType.AdjustValue(Source.Date);</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>--&gt; Наименование</Description>
						<Order>400</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
						<BeforeExport>Value = "Hợp đồng tín dụng số"+ " " + ObjectPrefixationClientServer.GetNumberForPrinting(Source.Number) +" ngày " + Format(Source.Date, "DLF=D");</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>9</Code>
						<Description>--&gt; UUID</Description>
						<Order>450</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="" Kind=""/>
						<BeforeExport>Value = Source.UUID;</BeforeExport>
						<ParameterForTransferName>UUID</ParameterForTransferName>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>КонтрагентыСотрудник</Code>
				<Description>Справочник: Employees</Description>
				<Order>1250</Order>
				<Source>CatalogRef.Employees</Source>
				<Receiver>CatalogRef.Контрагенты</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Наименование --&gt; Наименование</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>ПометкаУдаления --&gt; ПометкаУдаления</Description>
						<Order>100</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="ПометкаУдаления" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property Обязательное="true">
						<Code>3</Code>
						<Description>ЭтоГруппа --&gt; ЭтоГруппа</Description>
						<Order>150</Order>
						<Source Name="IsFolder" Kind="Свойство" Type="Булево"/>
						<Receiver Name="ЭтоГруппа" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Наименование --&gt; НаименованиеПолное</Description>
						<Order>200</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="НаименованиеПолное" Kind="Реквизит" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>КомиссииБанков</Code>
				<Description>Справочник: Bank charges</Description>
				<Order>1300</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>СправочникСсылка.BankCharges</Source>
				<Receiver>СправочникСсылка.КомиссииБанков</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Наименование --&gt; Наименование</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>--&gt; СчетЗатрат</Description>
						<Order>100</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="СчетЗатрат" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
						<BeforeExport>Value = "6428";</BeforeExport>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>--&gt; Контрагент</Description>
						<Order>150</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Контрагент" Kind="Реквизит" Type="СправочникСсылка.Контрагенты"/>
						<BeforeExport>Value = IncomingData.Контрагент;</BeforeExport>
						<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>--&gt; СчетУчетаНДС</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="СчетУчетаНДС" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
						<BeforeExport>Value = "1331" ;</BeforeExport>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>--&gt; СтавкаНДС</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
						<BeforeExport>Expression = "Перечисления.СтавкиНДС.БезНДС";	</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ВидыНалоговИПлатежейВБюджет</Code>
				<Description>Справочник: Tax kinds</Description>
				<Order>1350</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>СправочникСсылка.TaxTypes</Source>
				<Receiver>СправочникСсылка.ВидыНалоговИПлатежейВБюджет</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Код --&gt; Код</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Код" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Наименование --&gt; Наименование</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Наименование" Kind="Свойство" Type="Строка"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>ПометкаУдаления --&gt; ПометкаУдаления</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						<Receiver Name="ПометкаУдаления" Kind="Свойство" Type="Булево"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>TaxOnImport_EnvironmentalFee --&gt; НалогНаИмпорт_Эко</Description>
						<Order>50</Order>
						<Source>TaxOnImport_EnvironmentalFee</Source>
						<Receiver>НалогНаИмпорт_ЭкологическийСбор</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>TaxOnImport_Excise --&gt; НалогНаИмпорт_Акциз</Description>
						<Order>100</Order>
						<Source>TaxOnImport_Excise</Source>
						<Receiver>НалогНаИмпорт_Акциз</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>TaxOnImport_Fee --&gt; НалогНаИмпорт_Пошлина</Description>
						<Order>150</Order>
						<Source>TaxOnImport_Fee</Source>
						<Receiver>НалогНаИмпорт_Пошлина</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Information registers</Code>
			<Description>Information registers                             </Description>
			<Order>1050</Order>
			<Rule>
				<Code>ДокументыФизическихЛиц</Code>
				<Description>Регистр сведений: Individuals' documents</Description>
				<Order>1100</Order>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Source>InformationRegisterRecord.IndividualsDocuments</Source>
				<Receiver>InformationRegisterRecord.ДокументыФизическихЛиц</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Активность --&gt; Активность</Description>
						<Order>50</Order>
						<Source Name="Активность" Kind="Свойство" Type="Булево"/>
						<Receiver Name="Активность" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Период --&gt; Период</Description>
						<Order>100</Order>
						<Source Name="Период" Kind="Свойство" Type="Дата"/>
						<Receiver Name="Период" Kind="Свойство" Type="Дата"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DocumentKind --&gt; ВидДокумента</Description>
						<Order>150</Order>
						<Source Name="DocumentKind" Kind="Измерение" Type="CatalogRef.IndividualsDocumentsKinds"/>
						<Receiver Name="ВидДокумента" Kind="Измерение" Type="CatalogRef.ВидыДокументовФизическихЛиц"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Ind --&gt; Физлицо</Description>
						<Order>200</Order>
						<Source Name="Ind" Kind="Измерение" Type="CatalogRef.Individuals"/>
						<Receiver Name="Физлицо" Kind="Измерение" Type="CatalogRef.ФизическиеЛица"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DepartmentCode --&gt; CodeПодразделения</Description>
						<Order>250</Order>
						<Source Name="DepartmentCode" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="CodeПодразделения" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>IsIdentityDocument --&gt; ЯвляетсяДокументомУдостоверяющимЛичность</Description>
						<Order>300</Order>
						<Source Name="IsIdentityDocument" Kind="Ресурс" Type="Булево"/>
						<Receiver Name="ЯвляетсяДокументомУдостоверяющимЛичность" Kind="Ресурс" Type="Булево"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>IssueDate --&gt; ДатаВыдачи</Description>
						<Order>350</Order>
						<Source Name="IssueDate" Kind="Ресурс" Type="Дата"/>
						<Receiver Name="ДатаВыдачи" Kind="Ресурс" Type="Дата"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Number --&gt; Номер</Description>
						<Order>400</Order>
						<Source Name="Number" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Number" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>Presentation --&gt; Представление</Description>
						<Order>450</Order>
						<Source Name="Presentation" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Представление" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>Series --&gt; Серия</Description>
						<Order>500</Order>
						<Source Name="Series" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Серия" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>ValidityPeriod --&gt; СрокДействия</Description>
						<Order>550</Order>
						<Source Name="ValidityPeriod" Kind="Ресурс" Type="Дата"/>
						<Receiver Name="СрокДействия" Kind="Ресурс" Type="Дата"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>WhoIssued --&gt; КемВыдан</Description>
						<Order>600</Order>
						<Source Name="WhoIssued" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="КемВыдан" Kind="Ресурс" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ФИОФизическихЛиц</Code>
				<Description>Регистр сведений: Last name, name, patronymic of individuals</Description>
				<Order>1150</Order>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Source>InformationRegisterRecord.IndividualsDescriptionFull</Source>
				<Receiver>InformationRegisterRecord.ФИОФизическихЛиц</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Активность --&gt; Активность</Description>
						<Order>50</Order>
						<Source Name="Активность" Kind="Свойство" Type="Булево"/>
						<Receiver Name="Активность" Kind="Свойство" Type="Булево"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Период --&gt; Период</Description>
						<Order>100</Order>
						<Source Name="Период" Kind="Свойство" Type="Дата"/>
						<Receiver Name="Период" Kind="Свойство" Type="Дата"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Ind --&gt; ФизическоеЛицо</Description>
						<Order>150</Order>
						<Source Name="Ind" Kind="Измерение" Type="CatalogRef.Individuals"/>
						<Receiver Name="ФизическоеЛицо" Kind="Измерение"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Name --&gt; Имя</Description>
						<Order>200</Order>
						<Source Name="Name" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Отчество" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Patronymic --&gt; Отчество</Description>
						<Order>250</Order>
						<Source Name="Patronymic" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Имя" Kind="Ресурс" Type="Строка"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>Surname --&gt; Фамилия</Description>
						<Order>300</Order>
						<Source Name="Surname" Kind="Ресурс" Type="Строка"/>
						<Receiver Name="Фамилия" Kind="Ресурс" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Documents</Code>
			<Description>Documents                                         </Description>
			<Order>1100</Order>
			<Group>
				<Code>Marketing</Code>
				<Description>Marketing                                         </Description>
				<Order>50</Order>
				<Rule>
					<Code>РеализацияТоваровУслуг</Code>
					<Description>Документ: Invoice</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CustomerInvoice</Source>
					<Receiver>DocumentRef.РеализацияТоваровУслуг</Receiver>
					<Properties>
						<Property>
							<Code>57</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>100</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsCustomerInvoice"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийРеализацияТоваров"/>
							<ConversionRuleCode>ВидыОперацийРеализацияТоваров                     </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>350</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>BankAccount --&gt; БанковскийСчетОрганизации</Description>
							<Order>450</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="БанковскийСчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>BasisDocument --&gt; СчетНаОплатуПокупателю</Description>
							<Order>500</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="СчетНаОплатуПокупателю" Kind="Реквизит" Type="DocumentRef.СчетНаОплатуПокупателю"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>ChiefAccountant --&gt; ГлавныйБухгалтер</Description>
							<Order>550</Order>
							<Source Name="ChiefAccountant" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="ГлавныйБухгалтер" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
							<ConversionRuleCode>ФизическиеЛица                                    </ConversionRuleCode>
							<BeforeExport>If ValueIsFilled(Source.ChiefAccountant) Then
	Value = Source.ChiefAccountant.Ind;
КонецЕсли;</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>600</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>650</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Consignee --&gt; Грузополучатель</Description>
							<Order>700</Order>
							<Source Name="Consignee" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузополучатель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Consignor --&gt; Грузоотправитель</Description>
							<Order>750</Order>
							<Source Name="Consignor" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузоотправитель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>800</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>
Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>850</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>900</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>950</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>1000</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Head --&gt; Руководитель</Description>
							<Order>1050</Order>
							<Source Name="Head" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="Руководитель" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
							<ConversionRuleCode>ФизическиеЛица                                    </ConversionRuleCode>
							<BeforeExport>If  ValueIsFilled(Source.Head) Then
	Value = Source.Head.Ind;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>PowerAttorneyPerson --&gt; ДоверенностьЧерезКого</Description>
							<Order>1100</Order>
							<Source Name="PowerAttorneyPerson" Kind="Реквизит" Type="CatalogRef.Individuals"/>
							<Receiver Name="ДоверенностьЧерезКого" Kind="Реквизит" Type="Строка"/>
							<BeforeExport>Value = String(Source.PowerAttorneyPerson);</BeforeExport>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>PowerOfAttorneyDate --&gt; ДоверенностьДата</Description>
							<Order>1150</Order>
							<Source Name="PowerOfAttorneyDate" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ДоверенностьДата" Kind="Реквизит" Type="Дата"/>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>PowerOfAttorneyIssued --&gt; ДоверенностьВыдана</Description>
							<Order>1200</Order>
							<Source Name="PowerOfAttorneyIssued" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ДоверенностьВыдана" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>PowerOfAttorneyNumber --&gt; ДоверенностьНомер</Description>
							<Order>1250</Order>
							<Source Name="PowerOfAttorneyNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ДоверенностьНомер" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>1300</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>Released --&gt; ОтпускПроизвел</Description>
							<Order>1350</Order>
							<Source Name="Released" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="ОтпускПроизвел" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
							<ConversionRuleCode>ФизическиеЛица                                    </ConversionRuleCode>
							<BeforeExport>If ValueIsFilled(Source.Released) Then
	Value = Source.Released.Ind;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>ShippingAddress --&gt; АдресДоставки</Description>
							<Order>1400</Order>
							<Source Name="ShippingAddress" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="АдресДоставки" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>1450</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>1500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	
Else
	If Source.OperationKind = Enums.OperationKindsCustomerInvoice.TransferForCommission Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	ElsIf Source.Prepayment.Count() &gt; 0 Then
		Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
	Else
		ReceiptSettlement = CommonUse.GetAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
		If ReceiptSettlement = True Then
			Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
		Else
			Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
		EndIf;
	EndIf;
EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>--&gt; SaleToCustomer</Description>
							<Order>1550</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="" Kind=""/>
							<ParameterForTransferName>SaleToCustomer</ParameterForTransferName>
							<BeforeExport>Value = (Source.OperationKind = Enums.OperationKindsCustomerInvoice.SaleToCustomer);</BeforeExport>
						</Property>
						<Property Disable= "true">
							<Code>32</Code>
							<Description>Department --&gt; ПодразделениеОрганизации</Description>
							<Order>1650</Order>
							<Source Name="Department" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Group>
							<Code>33</Code>
							<Description>--&gt; Товары</Description>
							<Order>1700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>Execute(Algorithms.FormTabularSectionInventory);
ObjectsCollection.Columns.Add("НомерГТД");
ObjectsCollection.Columns.Add("СтранаПроисхождения");
//Execute(Algorithms.FillCCDNumbersWorldCountries);</BeforeProcessExport>
							<Property>
								<Code>34</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
							</Property>
							<Property>
								<Code>35</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>37</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>38</Code>
								<Description>--&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>39</Code>
								<Description>--&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice)</BeforeExport>
							</Property>
							<Property>
								<Code>40</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor);</BeforeExport>
							</Property>
							<Property>
								<Code>41</Code>
								<Description>--&gt; СтавкаНДС</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVatRate);</BeforeExport>
							</Property>
							<Property>
								<Code>42</Code>
								<Description>--&gt; Количество</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>43</Code>
								<Description>--&gt; НомерГТД</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НомерГТД" Kind="Реквизит" Type="CatalogRef.НомераГТД"/>
							</Property>
							<Property>
								<Code>44</Code>
								<Description>--&gt; СтранаПроисхождения</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтранаПроисхождения" Kind="Реквизит" Type="CatalogRef.СтраныМира"/>
							</Property>
							<Property>
								<Code>45</Code>
								<Description>--&gt; ТоварНаКомиссии</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsCustomerInvoice.SaleToCustomer
	And ValueIsFilled(CollectionObject.Партия)
	And CollectionObject.Партия.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>46</Code>
							<Description>--&gt; Услуги</Description>
							<Order>1750</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Услуги" Kind="TabularSection"/>
							<BeforeProcessExport>Execute(Algorithms.FormTabularSectionServices);</BeforeProcessExport>
							<Property>
								<Code>47</Code>
								<Description>--&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>48</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>49</Code>
								<Description>--&gt; Сумма</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>50</Code>
								<Description>--&gt; Цена</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>51</Code>
								<Description>--&gt; СтавкаНДС</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVatRate);</BeforeExport>
							</Property>
							<Property>
								<Code>52</Code>
								<Description>--&gt; СуммаНДС</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>53</Code>
								<Description>--&gt; Содержание</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
								<BeforeExport>If Not  ValueIsFilled(CollectionObject.Содержание) Then
	Value = String(CollectionObject.Номенклатура);	
КонецЕсли;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>54</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1800</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>If  Source.Prepayment.Count() &gt; 0
And  Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>55</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>56</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property>
							<Code>58</Code>
							<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
							<Order>1850</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	If Source.DocumentCurrency = AccCur Then
		Value = "1311";
	Else
		Value = "1313";
	EndIf;
	Else
	Cancel = True;
EndIf;						</BeforeExport>
						</Property>
						<Property>
							<Code>59</Code>
							<Description>--&gt; СчетУчетаРасчетовПоАвансам</Description>
							<Order>1900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовПоАвансам" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	If Source.DocumentCurrency = AccCur Then
		Value = "1312";
	Else
		Value = "1314";
	EndIf;
	
EndIf;						</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>РеализацияТоваровУслугУдал</Code>
					<Description>Document: CustomerInvoice</Description>
					<Order>500</Order>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<Source>DocumentRef.CustomerInvoice</Source>
					<Receiver>DocumentRef.РеализацияТоваровУслуг</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>--&gt; DeletionMark</Description>
							<Order>150</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>--&gt; Posted</Description>
							<Order>200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>АктОбОказанииПроизводственныхУслуг</Code>
					<Description>Документ: Acceptance certificate</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.AcceptanceCertificate</Source>
					<Receiver>DocumentRef.АктОбОказанииПроизводственныхУслуг</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>IncludeVATInPrice --&gt; СуммаВключаетНДС</Description>
							<Order>400</Order>
							<Source Name="IncludeVATInPrice" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>450</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>500</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>Execute(Algorithms.FormContractStructure)</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>550</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Department --&gt; ПодразделениеЗатрат</Description>
							<Order>650</Order>
							<Source Name="Department" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Ложь;</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>750</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>--&gt; НоменклатурнаяГруппа</Description>
							<Order>800</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
							<ConversionRuleCode>НоменклатурныеГруппы                              </ConversionRuleCode>
							<BeforeExport>If Source.WorksAndServices.Count() &gt; 0
   И ValueIsFilled(Source.WorksAndServices[0].ProductsAndServices) Then	
	Value = Source.WorksAndServices[0].ProductsAndServices.ProductsAndServicesCategory;
Else
	Value = "";
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>850</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>If Source.Prepayment.Count() &gt; 0  Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptAccounting = CommonUse.ObjectAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptAccounting = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>900</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>20</Code>
							<Description>WorksAndServices --&gt; Услуги</Description>
							<Order>1000</Order>
							<Source Name="WorksAndServices" Kind="TabularSection"/>
							<Receiver Name="Услуги" Kind="TabularSection"/>
							<Property>
								<Code>21</Code>
								<Description>--&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVatRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<ConversionRuleCode>НоменклатурныеГруппы                              </ConversionRuleCode>
								<BeforeExport>Value =  CollectionObject.ProductsAndServices.ProductsAndServicesCategory;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>28</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1050</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.Prepayment.Count() &gt; 0
	And Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>29</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ОтчетКомиссионераОПродажах</Code>
					<Description>Документ: Agent report</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.AgentReport</Source>
					<Receiver>DocumentRef.ОтчетКомиссионераОПродажах</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>44</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>CommissionFeePercent --&gt; ПроцентКомиссионногоВознаграждения</Description>
							<Order>350</Order>
							<Source Name="CommissionFeePercent" Kind="Реквизит" Type="Число"/>
							<Receiver Name="ПроцентКомиссионногоВознаграждения" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>BrokerageCalculationMethod --&gt; СпособРасчетаКомиссионногоВознаграждения</Description>
							<Order>400</Order>
							<Source Name="BrokerageCalculationMethod" Kind="Реквизит" Type="ПеречислениеСсылка.CommissionFeeCalculationMethods"/>
							<Receiver Name="СпособРасчетаКомиссионногоВознаграждения" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения"/>
							<ConversionRuleCode>СпособыРасчетаКомиссионногоВознаграждения         </ConversionRuleCode>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>VATCommissionFeePercent --&gt; СтавкаНДСВознаграждения</Description>
							<Order>450</Order>
							<Source Name="VATCommissionFeePercent" Kind="Реквизит" Type="CatalogRef.VATRates"/>
							<Receiver Name="СтавкаНДСВознаграждения" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
							<BeforeExport>Execute(Algorithms.FillVATCommissionFeePercent);</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>500</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>550</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>600</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>Execute(Algorithms.FormContractStructure );</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>650</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>700</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>750</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>KeepBackComissionFee --&gt; УдержатьВознаграждение</Description>
							<Order>800</Order>
							<Source Name="KeepBackComissionFee" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="УдержатьВознаграждение" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>850</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>
If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	RecepientSettlement = CommonUse.ObjectAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If RecepientSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>950</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>20</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>1000</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>Execute(Algorithms.FormTabularSectionInventory);
</BeforeProcessExport>
							<Property>
								<Code>21</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>200</Order>
								<Source Name="" Kind="" Type=""/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>BrokerageAmount --&gt; СуммаВознаграждения</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаВознаграждения" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>BrokerageVATAmount --&gt; СуммаНДСВознаграждения</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДСВознаграждения" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>TransmissionAmount --&gt; СуммаПередачи</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаПередачи" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice);</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>TransmissionPrice --&gt; ЦенаПередачи</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЦенаПередачи" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Выполнить(Algorithms.FillTabularSectionFactor);</BeforeExport>
							</Property>
							<Property>
								<Code>33</Code>
								<Description>--&gt; Количество</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>34</Code>
								<Description>ConnectionKey --&gt; КлючСтроки</Description>
								<Order>700</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КлючСтроки" Kind="Реквизит" Type="Число"/>
								<BeforeExport>If TypeOf(Value) = Type("Number") Then
	
	Value = Value + 1;
	
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>35</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1050</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>If  Source.Prepayment.Count() &gt; 0
	And Not  ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>36</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>37</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Group>
							<Code>38</Code>
							<Description>Customers --&gt; Покупатели</Description>
							<Order>1100</Order>
							<Source Name="Customers" Kind="TabularSection"/>
							<Receiver Name="Покупатели" Kind="TabularSection"/>
							<Property>
								<Code>39</Code>
								<Description>Customer --&gt; Покупатель</Description>
								<Order>50</Order>
								<Source Name="Customer" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Покупатель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>40</Code>
								<Description>ConnectionKey --&gt; КлючСтроки</Description>
								<Order>100</Order>
								<Source Name="ConnectionKey" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КлючСтроки" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>41</Code>
								<Description>ConnectionKey --&gt; КлючСтроки</Description>
								<Order>150</Order>
								<Source Name="ConnectionKey" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КлючСтроки" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property Disable = "true">
							<Code>42</Code>
							<Description>Responsible --&gt; Ответственный</Description>
							<Order>1150</Order>
							<Source Name="Responsible" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="Ответственный" Kind="Реквизит" Type="CatalogRef.Пользователи"/>
							<ConversionRuleCode>Пользователи                                      </ConversionRuleCode>
						</Property>
						<Property>
							<Code>43</Code>
							<Description>--&gt; СуммаВознаграждения</Description>
							<Order>1200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СуммаВознаграждения" Kind="Реквизит" Type="Число"/>
							<BeforeExport>Value = Source.Inventory.Total("BrokerageAmount");</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ЗаказПокупателяСчетНаОплату</Code>
					<Description>Документ: Purchase order</Description>
					<Order>200</Order>
					<AfterImport>
Если РежимЗагрузкиДанныхВИнформационнуюБазу() Тогда
	
	Выполнить(Алгоритмы.ОбработатьЗаполнениеДокументаПослеЗагрузки);
	
	Выполнить(Алгоритмы.ОбработатьДоговорКонтрагента);
	
КонецЕсли;</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CustomerOrder</Source>
					<Receiver>DocumentRef.СчетНаОплатуПокупателю</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Дата" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>4</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Номер" Kind="Свойство" Type="Строка"/>
							<ПриВыгрузке>Pref = "PO";
Value = Left(Value, 5) + Pref + Midl(Value, 8);</ПриВыгрузке>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; ОрганизацияПолучатель</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="ОрганизацияПолучатель" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>--&gt; ТипЦен</Description>
							<Order>350</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенКонтрагента                                </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>400</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>Execute(Algorithms.FormContractStructure );</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>450</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>500</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>550</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>BankAccount --&gt; СтруктурнаяЕдиница</Description>
							<Order>600</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СтруктурнаяЕдиница" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							<BeforeExport>If Not ValueIsFilled(Source.BankAccount) Then 
	
	If ValueIsFilled(Source.Company) 
		И ValueIsFilled(Source.Company.BankAccountByDefault)
		И Source.ВалютаДокумента = Source.Company.BankAccountByDefault.CashCurrency Then
		
		Value = Source.Company.BankAccountByDefault;
		
	Else
		
		Value = Catalogs.BankAccounts.EmptyRef();
		
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>650</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>14</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>700</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>15</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Выполнить(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>VATAmount --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Выполнить(Algorithms.FillTabularSectionVatRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2) ;</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>21</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>750</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Проведен" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>SalesStructuralUnit --&gt; ПодразделениеОрганизации</Description>
							<Order>800</Order>
							<Source Name="SalesStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>СчетНаОплатуПокупателю</Code>
					<Description>Документ: Proforma invoice</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InvoiceForPayment</Source>
					<Receiver>DocumentRef.СчетНаОплатуПокупателю</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; ОрганизацияПолучатель</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="ОрганизацияПолучатель" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>400</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>450</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>500</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>550</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>650</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>BankAccount --&gt; СтруктурнаяЕдиница</Description>
							<Order>700</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СтруктурнаяЕдиница" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							<BeforeExport>If Not  ValueIsFilled(Source.BankAccount) Then 
	
	If ValueIsFilled(Source.Company) 
		And ValueIsFilled(Source.Company.BankAccountByDefault)
		And Source.DocumentCurrency = Source.Company.BankAccountByDefault.CashCurrency Then
		
		Value = Source.Company.BankAccountByDefault;
		
	Else
		
		Value = Catalogs.BankAccounts.EmptyRef();
		
	Endif;
	
Endif;</BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>750</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>17</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>800</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>Execute(Algorithms.FormTabularSectionInventory);</BeforeProcessExport>
							<Property>
								<Code>18</Code>
								<Description>--&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity)</BeforeExport>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>--&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate);</BeforeExport>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>--&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>--&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>24</Code>
							<Description>--&gt; Услуги</Description>
							<Order>850</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Услуги" Kind="TabularSection"/>
							<BeforeProcessExport>
							If Parameters.SettingVariant = "Accounting4" Then
							 Cancel = True;
							EndIf;
							Execute(Algorithms.FormTabularSectionServices);</BeforeProcessExport>
							<Property>
								<Code>25</Code>
								<Description>--&gt; СтавкаНДС</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport> Execute(Algorithms.FillTabularSectionVATRate);</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>--&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Выполнить(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<BeforeExport>Value = CollectionObject.Номенклатура;</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>--&gt; Цена</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice);</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>--&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Value = CollectionObject.Сумма;</BeforeExport>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; СуммаНДС</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Value = CollectionObject.СуммаНДС;</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>--&gt; Содержание</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
								<BeforeExport>If Not ValueIsFilled(CollectionObject.Содержание) Then
	Value = String(CollectionObject.Номенклатура);
	Else
	Value = String(CollectionObject.Содержание);
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>900</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>32</Code>
							<Description>Department --&gt; ПодразделениеОрганизации</Description>
							<Order>950</Order>
							<Source Name="Department" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ВозвратТоваровОтПокупателя</Code>
					<Description>Документ: Supplier invoice</Description>
					<Order>250</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.SupplierInvoice</Source>
					<Receiver>DocumentRef.ВозвратТоваровОтПокупателя</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>150</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="EnumRef.OperationKindsSupplierInvoice"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийВозвратТоваровОтПокупателя"/>
							<ConversionRuleCode>ВидыОперацийВозвратТоваровОтПокупателя              </ConversionRuleCode>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>150</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>450</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>CounterpartyPriceKind --&gt; ТипЦен</Description>
							<Order>500</Order>
							<Source Name="CounterpartyPriceKind" Kind="Реквизит" Type="CatalogRef.CounterpartyPriceKind"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<OnExport>ExportObject = True; </OnExport>
							<ConversionRuleCode>ТипыЦенКонтрагента                                </ConversionRuleCode>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>550</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>Execute(Algorithms.FormContractStructure); </BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>650</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>700</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>750</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>--&gt; ПокупателемВыставляетсяСчетФактураНаВозврат</Description>
							<Order>800</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ПокупателемВыставляетсяСчетФактураНаВозврат" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>BasisDocument --&gt; Сделка</Description>
							<Order>850</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="Сделка" Kind="Реквизит"/>
							<ConversionRuleCode>РеализацияТоваровУслуг                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>900</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>19</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>950</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>20</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>Cost --&gt; Себестоимость</Description>
								<Order>100</Order>
								<Source Name="Cost" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Себестоимость" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>350</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Batch --&gt; ТоварНаКомиссии</Description>
								<Order>400</Order>
								<Source Name="Batch" Kind="Реквизит" Type="CatalogRef.ProductsAndServicesBatches"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsSupplierInvoice.ReturnFromCustomer
   And ValueIsFilled(CollectionObject.Batch)
   And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Property Disable = "true">
							<Code>28</Code>
							<Description>Responsible --&gt; Ответственный</Description>
							<Order>1000</Order>
							<Source Name="Responsible" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="Ответственный" Kind="Реквизит" Type="CatalogRef.Пользователи"/>
							<ConversionRuleCode>Пользователи                                      </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>РеализацияУслугПоПереработке</Code>
					<Description>Документ: Processing report</Description>
					<Order>300</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.ProcessingReport</Source>
					<Receiver>DocumentRef.РеализацияУслугПоПереработке</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>150</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>450</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>500</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>550</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>600</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>
Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>650</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>700</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>750</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="EnumRef.СпособыЗачетаАвансов"/>
							<BeforeExport>If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptSettlement = CommonUse.GetAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
EndIf;
</BeforeExport>
						</Property>
						<Group>
							<Code>16</Code>
							<Description>Inventory --&gt; МатериалыЗаказчика</Description>
							<Order>800</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="МатериалыЗаказчика" Kind="TabularSection"/>
							<Property>
								<Code>17</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
						<Group>
							<Code>19</Code>
							<Description>Products --&gt; Услуги</Description>
							<Order>850</Order>
							<Source Name="Products" Kind="TabularSection"/>
							<Receiver Name="Услуги" Kind="TabularSection"/>
							<Property>
								<Code>20</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>Specification --&gt; Спецификация</Description>
								<Order>150</Order>
								<Source Name="Specification" Kind="Реквизит" Type="CatalogRef.Specifications"/>
								<Receiver Name="Спецификация" Kind="Реквизит" Type="CatalogRef.СпецификацииНоменклатуры"/>
								<ConversionRuleCode>СпецификацииНоменклатуры                          </ConversionRuleCode>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>200</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="EnumRef.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVatRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>300</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>350</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Content --&gt; Содержание</Description>
								<Order>400</Order>
								<Source Name="Content" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
							</Property>
						</Group>
						<Group>
							<Code>28</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>900</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeExport>If  Source.Prepayment.Count() &gt; 0
And  Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeExport>
							<Property>
								<Code>29</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Group>
					<Code>Orders</Code>
					<Description>Orders                                            </Description>
					<Order>350</Order>
					<Rule>
						<Code>ЗаказНарядРеализацияТоваровУслуг</Code>
						<Description>Документ: Customer order</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CustomerOrder</Source>
						<Receiver>DocumentRef.РеализацияТоваровУслуг</Receiver>
						<Properties>
							<Property>
								<Code>5</Code>
								<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
								<Order>50</Order>
								<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
								<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property Search="true">
								<Code>1</Code>
								<Description>Finish --&gt; Дата</Description>
								<Order>100</Order>
								<Source Name="Finish" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>Counterparty --&gt; Контрагент</Description>
								<Order>150</Order>
								<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
							<Property Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>200</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
								<BeforeExport>prefix = "SO";
Value = Left(Source.Number, 5) + prefix +  Mid(Source.Number, 8);</BeforeExport>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>250</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>300</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>350</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
								<Order>400</Order>
								<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
								<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>--&gt; СуммаДокумента</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Value = Source.Inventory.Total("Total");</BeforeExport>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>BankAccount --&gt; БанковскийСчетОрганизации</Description>
								<Order>500</Order>
								<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="БанковскийСчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
								<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>PriceKind --&gt; ТипЦен</Description>
								<Order>550</Order>
								<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
								<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
								<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>600</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>
Execute(Algorithms.FormContractStructure);</BeforeExport>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>650</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>700</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>StructuralUnitReserve --&gt; Склад</Description>
								<Order>750</Order>
								<Source Name="StructuralUnitReserve" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
								<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; СпособЗачетаАвансов</Description>
								<Order>800</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
								<BeforeExport>If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptSettlement = CommonUse.GetAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
EndIf;
</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>--&gt; ПродажаПокупателю</Description>
								<Order>850</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПродажаПокупателю</ParameterForTransferName>
								<BeforeExport>Value = True;</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>900</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Group>
								<Code>19</Code>
								<Description>--&gt; Товары</Description>
								<Order>950</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Товары" Kind="TabularSection"/>
								<BeforeProcessExport>Execute(Algorithms.FormTabularSectionInventory);</BeforeProcessExport>
								<Property>
									<Code>20</Code>
									<Description>--&gt; КоличествоМест</Description>
									<Order>50</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>21</Code>
									<Description>--&gt; ЕдиницаИзмерения</Description>
									<Order>100</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
								</Property>
								<Property>
									<Code>22</Code>
									<Description>--&gt; Номенклатура</Description>
									<Order>150</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								</Property>
								<Property>
									<Code>23</Code>
									<Description>--&gt; Сумма</Description>
									<Order>200</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>24</Code>
									<Description>--&gt; СуммаНДС</Description>
									<Order>250</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>25</Code>
									<Description>--&gt; Цена</Description>
									<Order>300</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionPrice)</BeforeExport>
								</Property>
								<Property>
									<Code>26</Code>
									<Description>--&gt; Коэффициент</Description>
									<Order>350</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionFactor);</BeforeExport>
								</Property>
								<Property>
									<Code>27</Code>
									<Description>--&gt; СтавкаНДС</Description>
									<Order>400</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate);</BeforeExport>
								</Property>
								<Property>
									<Code>28</Code>
									<Description>--&gt; Количество</Description>
									<Order>450</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
								</Property>
								<Property>
									<Code>29</Code>
									<Description>--&gt; ТоварНаКомиссии</Description>
									<Order>500</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="" Kind=""/>
									<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
									<BeforeExport>If ValueIsFilled(CollectionObject.Партия)
   And CollectionObject.Партия.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
								</Property>
							</Group>
							<Group>
								<Code>30</Code>
								<Description>--&gt; Услуги</Description>
								<Order>1000</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Услуги" Kind="TabularSection"/>
								<BeforeProcessExport>Execute(Algorithms.FormTabularSectionServices);</BeforeProcessExport>
								<Property>
									<Code>31</Code>
									<Description>--&gt; Количество</Description>
									<Order>50</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
								</Property>
								<Property>
									<Code>32</Code>
									<Description>--&gt; Номенклатура</Description>
									<Order>100</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								</Property>
								<Property>
									<Code>33</Code>
									<Description>--&gt; Содержание</Description>
									<Order>150</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
									<BeforeExport>In Not ValueIsFilled(CollectionObject.Comment) Then
	Value = String(CollectionObject.ProductsAndServices);	
EndIf;</BeforeExport>
								</Property>
								<Property>
									<Code>34</Code>
									<Description>--&gt; СтавкаНДС</Description>
									<Order>200</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
									<BeforeExport>Execute(Algorithms.FilltzbularSectionVATRate);</BeforeExport>
								</Property>
								<Property>
									<Code>35</Code>
									<Description>--&gt; Сумма</Description>
									<Order>250</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>36</Code>
									<Description>--&gt; СуммаНДС</Description>
									<Order>300</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>37</Code>
									<Description>--&gt; Цена</Description>
									<Order>350</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionPrice);</BeforeExport>
								</Property>
							</Group>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>ЗаказНарядАктОбОказанииПроизводственныхУслуг</Code>
						<Description>Документ: Customer order</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CustomerOrder</Source>
						<Receiver>DocumentRef.АктОбОказанииПроизводственныхУслуг</Receiver>
						<BeforeExport>If Source.OperationKind = Enums.OperationKindsCustomerOrder.OrderForSale Then
							Cancel = True;
						EndIf;
						</BeforeExport>
						<Properties>
							<Property>
								<Code>5</Code>
								<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
								<Order>50</Order>
								<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
								<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property Search="true">
								<Code>1</Code>
								<Description>Finish --&gt; Дата</Description>
								<Order>100</Order>
								<Source Name="Finish" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>Counterparty --&gt; Контрагент</Description>
								<Order>150</Order>
								<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
							<Property Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>200</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>250</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>300</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>350</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
								<Order>400</Order>
								<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
								<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>--&gt; СуммаДокумента</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Value = Source.Works.Total("Total");</BeforeExport>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>PriceKind --&gt; ТипЦен</Description>
								<Order>500</Order>
								<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
								<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
								<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>550</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>600</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>650</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>StructuralUnitReserve --&gt; ПодразделениеЗатрат</Description>
								<Order>700</Order>
								<Source Name="StructuralUnitReserve" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
								<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
								<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>750</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>If Source.Works.Count() &gt; 0
   And ValueIsFilled(Source.Works[0].ProductsAndServices) Then
	Value = Source.Works[0].ProductsAndServices.ProductsAndServicesCategory;
Else
	Value= "";
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; СпособЗачетаАвансов</Description>
								<Order>800</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
								<BeforeExport>If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptSettlement = CommonUse.GetAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
EndIf;
</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>850</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Group>
								<Code>18</Code>
								<Description>Works --&gt; Услуги</Description>
								<Order>900</Order>
								<Source Name="Works" Kind="TabularSection"/>
								<Receiver Name="Услуги" Kind="TabularSection"/>
								<Property>
									<Code>19</Code>
									<Description>Quantity --&gt; Количество</Description>
									<Order>50</Order>
									<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
									<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>20</Code>
									<Description>ProductsAndServices --&gt; Номенклатура</Description>
									<Order>100</Order>
									<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
									<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
									<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
								</Property>
								<Property>
									<Code>21</Code>
									<Description>VATRate --&gt; СтавкаНДС</Description>
									<Order>150</Order>
									<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
									<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionVatRate2);</BeforeExport>
								</Property>
								<Property>
									<Code>22</Code>
									<Description>Amount --&gt; Сумма</Description>
									<Order>200</Order>
									<Source Name="Amount" Kind="Реквизит" Type="Число"/>
									<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>23</Code>
									<Description>VATAmount --&gt; СуммаНДС</Description>
									<Order>250</Order>
									<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
									<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>24</Code>
									<Description>Price --&gt; Цена</Description>
									<Order>300</Order>
									<Source Name="Price" Kind="Реквизит" Type="Число"/>
									<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>25</Code>
									<Description>--&gt; НоменклатурнаяГруппа</Description>
									<Order>350</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
									<BeforeExport>Value = CollectionObject.ProductsAndServices.ProductsAndServicesCategory;</BeforeExport>
								</Property>
							</Group>
							<Group>
								<Code>26</Code>
								<Description>Prepayment --&gt; ЗачетАвансов</Description>
								<Order>950</Order>
								<Source Name="Prepayment" Kind="TabularSection"/>
								<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
								<BeforeProcessExport>If Source.Prepayment.Count() &gt; 0
	And Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
								<Property>
									<Code>27</Code>
									<Description>Document --&gt; ДокументАванса</Description>
									<Order>50</Order>
									<Source Name="Document" Kind="Реквизит"/>
									<Receiver Name="ДокументАванса" Kind="Реквизит"/>
								</Property>
								<Property>
									<Code>28</Code>
									<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
									<Order>100</Order>
									<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
									<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
								</Property>
							</Group>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>ЗаказНарядТребованиеНакладная</Code>
						<Description>Документ: Customer order</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CustomerOrder</Source>
						<Receiver>DocumentRef.ТребованиеНакладная</Receiver>
						<Properties>
							<Property Search="true">
								<Code>1</Code>
								<Description>Finish --&gt; Дата</Description>
								<Order>50</Order>
								<Source Name="Finish" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property>
								<Code>5</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>100</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>Counterparty --&gt; Контрагент</Description>
								<Order>150</Order>
								<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
							<Property Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>200</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
								<BeforeExport>Prefix = "SO";
Value = Left(Source.Number, 5) + Prefix + Mid(Source.Number, 8);</BeforeExport>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>250</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>300</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>350</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>SalesStructuralUnit --&gt; ПодразделениеЗатрат</Description>
								<Order>400</Order>
								<Source Name="SalesStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
								<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
								<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>StructuralUnitReserve --&gt; Склад</Description>
								<Order>450</Order>
								<Source Name="StructuralUnitReserve" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
								<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
								<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>--&gt; СчетаУчетаЗатратВТаблице</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетаУчетаЗатратВТаблице" Kind="Реквизит" Type="Булево"/>
								<BeforeExport>Value = True;</BeforeExport>
							</Property>
							<Group>
								<Code>12</Code>
								<Description>Materials --&gt; Материалы</Description>
								<Order>600</Order>
								<Source Name="Materials" Kind="TabularSection"/>
								<Receiver Name="Материалы" Kind="TabularSection"/>
								<Property>
									<Code>13</Code>
									<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
									<Order>50</Order>
									<Source Name="MeasurementUnit" Kind="Реквизит"/>
									<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
									<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
									<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
								</Property>
								<Property>
									<Code>14</Code>
									<Description>Quantity --&gt; КоличествоМест</Description>
									<Order>100</Order>
									<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
									<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>15</Code>
									<Description>ProductsAndServices --&gt; Номенклатура</Description>
									<Order>150</Order>
									<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
									<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
									<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
								</Property>
								<Property>
									<Code>16</Code>
									<Description>--&gt; Количество</Description>
									<Order>200</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
								</Property>
								<Property>
									<Code>17</Code>
									<Description>--&gt; Коэффициент</Description>
									<Order>250</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
								</Property>
								<Property>
									<Code>18</Code>
									<Description>--&gt; ТоварНаКомиссии</Description>
									<Order>300</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="" Kind=""/>
									<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
									<BeforeExport>If ValueIsFilled(CollectionObject.Batch)
   And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
								</Property>
								<Property>
									<Code>19</Code>
									<Description>--&gt; НоменклатурнаяГруппа</Description>
									<Order>350</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
									<BeforeExport>Value = CollectionObject.ProductsAndServices.ProductsAndServicesCategory;</BeforeExport>
								</Property>
								<Property>
									<Code>20</Code>
									<Description>--&gt; ПодразделениеЗатрат</Description>
									<Order>400</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
									<BeforeExport>Value = Source.SalesStructuralUnit;</BeforeExport>
								</Property>
							</Group>
							<Group>
								<Code>21</Code>
								<Description>ConsumerMaterials --&gt; МатериалыЗаказчика</Description>
								<Order>650</Order>
								<Source Name="ConsumerMaterials" Kind="TabularSection"/>
								<Receiver Name="МатериалыЗаказчика" Kind="TabularSection"/>
								<Property>
									<Code>22</Code>
									<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
									<Order>50</Order>
									<Source Name="MeasurementUnit" Kind="Реквизит"/>
									<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
									<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
									<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
								</Property>
								<Property>
									<Code>23</Code>
									<Description>Quantity --&gt; КоличествоМест</Description>
									<Order>100</Order>
									<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
									<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
								</Property>
								<Property>
									<Code>24</Code>
									<Description>ProductsAndServices --&gt; Номенклатура</Description>
									<Order>150</Order>
									<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
									<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
									<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
								</Property>
								<Property>
									<Code>25</Code>
									<Description>--&gt; Количество</Description>
									<Order>200</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
									<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
								</Property>
								<Property>
									<Code>26</Code>
									<Description>--&gt; Коэффициент</Description>
									<Order>250</Order>
									<Source Name="" Kind=""/>
									<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
									<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
								</Property>
							</Group>
						</Properties>
						<Values/>
					</Rule>
				</Group>
			</Group>
			<Group>
				<Code>Retail</Code>
				<Description>Retail                                            </Description>
				<Order>100</Order>
				<Rule>
					<Code>ОтчетОРозничныхПродажах</Code>
					<Description>Документ: Retail sales report</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.RetailReport</Source>611
					<Receiver>DocumentRef.ОтчетОРозничныхПродажах</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>150</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>400</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>450</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>InventoryReconciliation --&gt; ИнвентаризацияТоваровНаСкладе</Description>
							<Order>500</Order>
							<Source Name="InventoryReconciliation" Kind="Реквизит" Type="DocumentRef.InventoryReconciliation"/>
							<Receiver Name="ИнвентаризацияТоваровНаСкладе" Kind="Реквизит" Type="DocumentRef.ИнвентаризацияТоваровНаСкладе"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>550</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
							<Order>600</Order>
							<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
							<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>650</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; ВидОперации</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийОтчетОРозничныхПродажах"/>
							<BeforeExport>Value = "ОтчетККМОПродажах";</BeforeExport>
						</Property>
						<Group>
							<Code>15</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>750</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>16</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>--&gt; ТоварНаКомиссии</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>If ValueIsFilled(CollectionObject.Batch)
   And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>23</Code>
							<Description>Responsible --&gt; Ответственный</Description>
							<Order>800</Order>
							<Source Name="Responsible" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="Ответственный" Kind="Реквизит" Type="CatalogRef.Пользователи"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПереоценкаТоваровВРознице</Code>
					<Description>Документ: Retail revaluation (value accounting)</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.RetailRevaluation</Source>
					<Receiver>DocumentRef.ПереоценкаТоваровВРознице</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>100</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>150</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>200</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>350</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                                       </ConversionRuleCode>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>400</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>9</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>NewPrice --&gt; ЦенаВРознице</Description>
								<Order>150</Order>
								<Source Name="NewPrice" Kind="Реквизит" Type="Число"/>
								<Receiver Name="ЦенаВРознице" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>Amount --&gt; СуммаПереоценки</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПереоценки" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>Price --&gt; ЦенаВРозницеСтарая</Description>
								<Order>250</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="ЦенаВРозницеСтарая" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property>
							<Code>14</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>450</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="СправочникСсылка.Склады"/>
							<ConversionRuleCode>Склады                                      </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Group>
				<Code>Purchase</Code>
				<Description>Purchase                                          </Description>
				<Order>150</Order>
				<Rule>
					<Code>АвансовыйОтчет</Code>
					<Description>Документ: Expense report</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.ExpenseReport</Source>
					<Receiver>DocumentRef.АвансовыйОтчет</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>Date --&gt; Date</Description>
							<Order>800</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>150</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>200</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>350</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Multiplicity --&gt; КратностьДокумента</Description>
							<Order>400</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>ExchangeRate --&gt; КурсДокумента</Description>
							<Order>450</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>--&gt; ФизЛицо</Description>
							<Order>550</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ФизЛицо" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
							<BeforeExport>Value =  Source.Employee.Ind;</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>600</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>650</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>14</Code>
							<Description>AdvancesPaid --&gt; ВыданныеАвансы</Description>
							<Order>700</Order>
							<Source Name="AdvancesPaid" Kind="TabularSection"/>
							<Receiver Name="ВыданныеАвансы" Kind="TabularSection"/>
							<Property>
								<Code>15</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>16</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>750</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>17</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
								<Order>350</Order>
								<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
								<Order>400</Order>
								<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
							</Property>
						</Group>
						<Group>
							<Code>25</Code>
							<Description>Expenses --&gt; Прочее</Description>
							<Order>800</Order>
							<Source Name="Expenses" Kind="TabularSection"/>
							<Receiver Name="Прочее" Kind="TabularSection"/>
							<Property>
								<Code>26</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>100</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>150</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>200</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>Content --&gt; Содержание</Description>
								<Order>250</Order>
								<Source Name="Content" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
								<BeforeExport>If Not ValueIsFilled(CollectionObject.Content) Then
	Value = CollectionObject.ProductsAndServices.Description;
КонецЕсли;</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
								<Order>300</Order>
								<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
								<Order>350</Order>
								<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>45</Code>
								<Description>--&gt; СчетЗатрат</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетЗатрат" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>Value = CollectionObject.ProductsAndServices.ExpensesGLAccount.Code;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>33</Code>
							<Description>Payments --&gt; ОплатаПоставщикам</Description>
							<Order>850</Order>
							<Source Name="Payments" Kind="TabularSection"/>
							<Receiver Name="ОплатаПоставщикам" Kind="TabularSection"/>
							<Property>
								<Code>34</Code>
								<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
								<Order>50</Order>
								<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
							</Property>
							<Property>
								<Code>35</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>100</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>Document --&gt; Сделка</Description>
								<Order>150</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>37</Code>
								<Description>Counterparty --&gt; Контрагент</Description>
								<Order>200</Order>
								<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>38</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>39</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>40</Code>
								<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
								<Order>350</Order>
								<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>41</Code>
								<Description>PaymentAmount --&gt; Сумма</Description>
								<Order>400</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>42</Code>
								<Description>SettlementsAmount --&gt; СуммаВзаиморасчетов</Description>
								<Order>450</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>43</Code>
								<Description>--&gt; СпособПогашенияЗадолженности</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособПогашенияЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	
Else
	
	If CollectionObject.AdvanceFlag Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.НеПогашать";
	ElsIf ValueIsFilled(CollectionObject.Document) Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.ПоДокументу";
	Else
		Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	EndIf;
	
EndIf;
							</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>44</Code>
							<Description>--&gt; Склад</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Склад" Kind="Реквизит" Type="СправочникСсылка.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
If Source.Inventory.Count() &gt; 0 Then
	
	Value = Source.Inventory[0].StructuralUnit;
	
EndIf;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПоступлениеТоваровУслуг</Code>
					<Description>Документ: Supplier invoice</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.SupplierInvoice</Source>
					<Receiver>DocumentRef.ПоступлениеТоваровУслуг</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>100</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsSupplierInvoice"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг"/>
							<ConversionRuleCode>ВидыОперацийПоступлениеТоваровУслуг               </ConversionRuleCode>
							<BeforeExport>
If Source.OperationKind = Enums.OperationKindsSupplierInvoice.ReceiptFromVendor Then
	
	If Source.Inventory.Count() &gt; 0
		И Source.Expenses.Count() = 0 Then
		
		Value = "Товары";
		
	ElsIf Source.Inventory.Count() = 0
		And Source.Expenses.Count() &gt; 0 Then
		
		Value = "Услуги";
		
	Else
		
		Value = "ПокупкаКомиссия";
		
	EndIf;
	
	OCRName = "";
	
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>450</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>500</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>550</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>650</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>700</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>750</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
							<Order>800</Order>
							<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
							<Order>850</Order>
							<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionForCommission
	Or Source.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionIntoProcessing Then
	
	Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
ElsIf Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	RecepientSettlement = CommonUse.ObjectAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If RecepientSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>950</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>20</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>1000</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>21</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>200</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>300</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>--&gt; Количество</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>--&gt; ТоварНаКомиссии</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>If  Source.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionForCommission
	And ValueIsFilled(CollectionObject.Batch)
	And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	
	Value = True;
	
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>43</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>500</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>30</Code>
							<Description>Expenses --&gt; Услуги</Description>
							<Order>1050</Order>
							<Source Name="Expenses" Kind="TabularSection"/>
							<Receiver Name="Услуги" Kind="TabularSection"/>
							<Property>
								<Code>31</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>33</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>150</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>34</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>35</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>300</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>37</Code>
								<Description>Content --&gt; Содержание</Description>
								<Order>350</Order>
								<Source Name="Content" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Содержание" Kind="Реквизит" Type="Строка"/>
								<BeforeExport>If  Not ValueIsFilled(CollectionObject.Content) Then
	Value = String(CollectionObject.ProductsAndServices);	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>38</Code>
								<Description>--&gt; ПроизводственныйРасход</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПроизводственныйРасход</ParameterForTransferName>
								<BeforeExport>
ExpensesGLAccount = CommonUse.ObjectAttributeValue(CollectionObject.ProductsAndServices, "ExpensesGLAccount");
If ValueIsFilled(ExpensesGLAccount)
	//And Parameters.UseProductionSubsystem
	And (ExpensesGLAccount.TypeOfAccount = Enums.GLAccountsTypes.IndirectExpenses
	Or ExpensesGLAccount.TypeOfAccount = Enums.GLAccountsTypes.UnfinishedProduction) Then
	
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>39</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1100</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.Prepayment.Count() &gt; 0
	And Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>40</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>41</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property Disable="true">
							<Code>42</Code>
							<Description>CounterpartyPriceKind --&gt; ТипЦен</Description>
							<Order>1150</Order>
							<Source Name="CounterpartyPriceKind" Kind="Реквизит" Type="CatalogRef.CounterpartyPriceKind"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенКонтрагента                                </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПоступлениеТоваровУслугУдал</Code>
					<Description>Document: SupplierInvoice</Description>
					<Order>600</Order>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<Source>DocumentRef.SupplierInvoice</Source>
					<Receiver>DocumentRef.ПоступлениеТоваровУслуг</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>--&gt; DeletionMark</Description>
							<Order>150</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>--&gt; Posted</Description>
							<Order>200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПередачаТоваров</Code>
					<Description>Документ: Invoice</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CustomerInvoice</Source>
					<Receiver>DocumentRef.ПередачаТоваров</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsCustomerInvoice"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийПередачаТоваров"/>
							<ConversionRuleCode>ВидыОперацийПередачаТоваров                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>3</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>150</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>200</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>350</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>400</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>450</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>
Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>500</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Consignor --&gt; Грузоотправитель</Description>
							<Order>550</Order>
							<Source Name="Consignor" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузоотправитель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Consignee --&gt; Грузополучатель</Description>
							<Order>600</Order>
							<Source Name="Consignee" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузополучатель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>650</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>14</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>700</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>15</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ВозвратТоваровПоставщику</Code>
					<Description>Документ: Invoice</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CustomerInvoice</Source>
					<Receiver>DocumentRef.ВозвратТоваровПоставщику</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>100</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsCustomerInvoice"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийВозвратТоваровПоставщику"/>
							<ConversionRuleCode>ВидыОперацийВозвратТоваровПоставщику              </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>450</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>CounterpartyPriceKind --&gt; ТипЦен</Description>
							<Order>500</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
							<OnExport>ExportObject = True; </OnExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>550</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>650</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Ложь;</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>750</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>800</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>BasisDocument --&gt; Сделка</Description>
							<Order>850</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="Сделка" Kind="Реквизит" Type="DocumentRef.ПоступлениеТоваровУслуг"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Consignor --&gt; Грузоотправитель</Description>
							<Order>900</Order>
							<Source Name="Consignor" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузоотправитель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Consignee --&gt; Грузополучатель</Description>
							<Order>950</Order>
							<Source Name="Consignee" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Грузополучатель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>1000</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>22</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>1100</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>23</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>200</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>300</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>350</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>--&gt; Количество</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>--&gt; ТоварНаКомиссии</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>
If Source.OperationKind = Enums.OperationKindsCustomerInvoice.ReturnToPrincipal
	And ValueIsFilled(CollectionObject.Batch)
   And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ОтчетКомитентуОПродажах</Code>
					<Description>Документ: Report to principal</Description>
					<Order>250</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.ReportToPrincipal</Source>
					<Receiver>DocumentRef.ОтчетКомитентуОПродажах</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>CommissionFeePercent --&gt; ПроцентКомиссионногоВознаграждения</Description>
							<Order>400</Order>
							<Source Name="CommissionFeePercent" Kind="Реквизит" Type="Число"/>
							<Receiver Name="ПроцентКомиссионногоВознаграждения" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>BrokerageCalculationMethod --&gt; СпособРасчетаКомиссионногоВознаграждения</Description>
							<Order>450</Order>
							<Source Name="BrokerageCalculationMethod" Kind="Реквизит" Type="ПеречислениеСсылка.CommissionFeeCalculationMethods"/>
							<Receiver Name="СпособРасчетаКомиссионногоВознаграждения" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыРасчетаКомиссионногоВознаграждения"/>
							<ConversionRuleCode>СпособыРасчетаКомиссионногоВознаграждения         </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>VATCommissionFeePercent --&gt; СтавкаНДСВознаграждения</Description>
							<Order>500</Order>
							<Source Name="VATCommissionFeePercent" Kind="Реквизит" Type="CatalogRef.VATRates"/>
							<Receiver Name="СтавкаНДСВознаграждения" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
							<BeforeExport>Execute(Algorithms.FillVATCommissionFeePercent);
</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>550</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>600</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>650</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>700</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>KeepBackComissionFee --&gt; УдержатьВознаграждение</Description>
							<Order>750</Order>
							<Source Name="KeepBackComissionFee" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="УдержатьВознаграждение" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>800</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>850</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>18</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>900</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>19</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>200</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>Amount --&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>BrokerageAmount --&gt; СуммаВознаграждения</Description>
								<Order>300</Order>
								<Source Name="BrokerageAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВознаграждения" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>350</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>BrokerageVATAmount --&gt; СуммаНДСВознаграждения</Description>
								<Order>400</Order>
								<Source Name="BrokerageVATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДСВознаграждения" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>AmountReceipt --&gt; СуммаПоступления</Description>
								<Order>450</Order>
								<Source Name="AmountReceipt" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПоступления" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>Price --&gt; Цена</Description>
								<Order>500</Order>
								<Source Name="Price" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionPrice2);</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>ReceiptPrice --&gt; ЦенаПоступления</Description>
								<Order>550</Order>
								<Source Name="ReceiptPrice" Kind="Реквизит" Type="Число"/>
								<Receiver Name="ЦенаПоступления" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>--&gt; Количество</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>DateOfSale --&gt; ДатаРеализации</Description>
								<Order>700</Order>
								<Source Name="DateOfSale" Kind="Реквизит" Type="Дата"/>
								<Receiver Name="ДатаРеализации" Kind="Реквизит" Type="Дата"/>
							</Property>
							<Property>
								<Code>33</Code>
								<Description>Customer --&gt; Покупатель</Description>
								<Order>750</Order>
								<Source Name="Customer" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
								<Receiver Name="Покупатель" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
								<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							</Property>
						</Group>
						<Property>
							<Code>34</Code>
							<Description>--&gt; ВидОперации</Description>
							<Order>950</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийОтчетКомитентуОПродажах"/>
							<BeforeExport>Value = "ОтчетОПродажах";</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПоступлениеДопРасходов</Code>
					<Description>Документ: Additional expenses</Description>
					<Order>300</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.AdditionalCosts</Source>
					<Receiver>DocumentRef.ПоступлениеДопРасходов</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>400</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>450</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>500</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>550</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>600</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Ложь;</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>DocumentAmount --&gt; Сумма</Description>
							<Order>650</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; СтавкаНДС</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
							<BeforeExport>


IF Source.Inventory.Количество() &gt; 0 Then
	
	VATRate = Source.Inventory[0].VATRate;
	
	If Parameters.SettingVariant = "Accounting4" Then
		
		If VATRate.NotTaxable Then
			Expression = "Перечисления.СтавкиНДС.БезНДС";	
		ElsIf VATRate.Rate = 10
				И НЕ VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС10";
		ElsIf VATRate.Rate = 10
				И VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС10_110";
			
		ElsIf VATRate.Rate = 5 
			 И НЕ VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС5";
			
		ElsIf VATRate.Rate = 5 
				И VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС5_105";
			
		ElsIf VATRate.Rate = 0 Then
			Expression = "Перечисления.СтавкиНДС.НДС0"; 
		EndIf;

		
	Else
		If VATRate.NotTaxable Then
			Expression = "Перечисления.СтавкиНДС.БезНДС";	
		ElsIf VATRate.Rate = 18
			 And Not Source.Inventory[0].VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС18";
		ElsIf VATRate.Rate = 18
				And VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС18_118";
		ElsIf VATRate.Rate = 10 
			 And Not VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС18";
		ElsIf VATRate.Rate = 10 
				And VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС18_118";
		ElsIf VATRate.Rate = 0 Then
			Expression = "Перечисления.СтавкиНДС.НДС0"; 
		ElsIf VATRate.Rate = 20
			 And Not VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС20";
		ElsIf VATRate.Rate = 20
				And VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС20_120";
		ElsIf VATRate.Rate = 5
				And Not VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС10";
		ElsIf VATRate.Rate = 5
				And VATRate.Calculated Then
			Expression = "Перечисления.СтавкиНДС.НДС10_110";
		Else
			Expression = "Перечисления.СтавкиНДС.НДС18";
		EndIf;
	EndIf;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>750</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptSettlement = CommonUse.ObjectAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
							<Order>800</Order>
							<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
							<Order>850</Order>
							<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>900</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>19</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>950</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>20</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>AmountExpense --&gt; Сумма</Description>
								<Order>100</Order>
								<Source Name="AmountExpense" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Taxation		= Source.VATTaxation &lt;&gt; Enums.VATTaxationTypes.NotTaxableByVAT;
IncludeVATInPrice	= Source.IncludeVATInPrice;

If Source.Expenses.Count() > 0 Then	
	If Source.Expenses[0].VATRate.NotTaxable
		ИЛИ Source.Expenses[0].VATRate.Rate = 0 Then
		VATRate = 0;
	ElsIf Source.Expenses[0].VATRate.Rate = 18 Then
		VATRate = 18;
	ElsIf Source.Expenses[0].VATRate.Rate = 10 Then 
		VATRate = 10;
	ElsIf Source.Expenses[0].VATRate.Rate = 5 Then 
		VATRate = 5;
	ElsIf Source.Expenses[0].VATRate.Rate = 20 Then
		VATRate = 20;
	Else
		VATRate = 10;
	EndIf;
Else
	VATRate = 10;
EndIf;
	
If Taxation Then
	
	Amount = CollectionObject.AmountExpense;
Иначе
	Amount = CollectionObject.AmountExpense;
EndIf;

Value = Amount;</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>150</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<OnExport>Taxation		= Source.VATTaxation &lt;&gt; Enums.VATTaxationTypes.NotTaxableByVAT;
If Source.Expenses.Count() &gt; 0 Then	
	If Source.Expenses[0].VATRate.NotTaxable
		ИЛИ Source.Expenses[0].VATRate.Rate = 0 Then
		VATRate = 0;
	ElsIf Source.Expenses[0].VATRate.Rate = 18 Then
		VATRate = 18;
	ElsIf Source.Expenses[0].VATRate.Rate = 10 Then 
		VATRate = 10;
	ElsIf Source.Expenses[0].VATRate.Rate = 5 Then 
		VATRate = 5;
	ElsIf Source.Expenses[0].VATRate.Rate = 20 Then
		VATRate = 20;
	Else
		VATRate = 18;
	EndIf;
Else
	VATRate = 18;
EndIf;


If Taxation Then
	
	Amount = CollectionObject.AmountExpense * VATRate / 100;
	
Else
	Amount = 0;
EndIf;

Value = Amount;</OnExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>Amount --&gt; СуммаТовара</Description>
								<Order>200</Order>
								<Source Name="Amount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаТовара" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>ReceiptDocument --&gt; ДокументПартии</Description>
								<Order>250</Order>
								<Source Name="ReceiptDocument" Kind="Реквизит"/>
								<Receiver Name="ДокументПартии" Kind="Реквизит"/>
								<BeforeExport>IF TypeOf(CollectionObject.ReceiptDocument) = Type("DocumentRef.SupplierInvoice") Then
	
	OCRName = "ПоступлениеТоваровУслуг";
	
ElsIf TypeOf(CollectionObject.ReceiptDocument) = Тип("DocumentRef.ExpenseReport") Then
	
	OCRName = "АвансовыйОтчет";
	
EndIf;

DumpByRule(CollectionObject.ReceiptDocument,,,, OCRName);

</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>300</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>26</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1000</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>IF Source.Prepayment.Count() &gt; 0
	And Not ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>27</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПоступлениеИзПереработки</Code>
					<Description>Документ: Processor report</Description>
					<Order>350</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.SubcontractorReport</Source>
					<Receiver>DocumentRef.ПоступлениеИзПереработки</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>50</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>AmountIncludesVAT --&gt; СуммаВключаетНДС</Description>
							<Order>400</Order>
							<Source Name="AmountIncludesVAT" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="СуммаВключаетНДС" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>PriceKind --&gt; ТипЦен</Description>
							<Order>450</Order>
							<Source Name="PriceKind" Kind="Реквизит" Type="CatalogRef.PriceKinds"/>
							<Receiver Name="ТипЦен" Kind="Реквизит" Type="CatalogRef.ТипыЦенНоменклатуры"/>
							<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>500</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<BeforeExport>Execute(Algorithms.FormContractStructure);</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
							<Order>550</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
							<Order>600</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
							<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>--&gt; НДСВключенВСтоимость</Description>
							<Order>650</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>700</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>If Source.StructuralUnit.StructuralUnitType &lt;&gt; Enums.StructuralUnitsTypes.Warehouse Then
	Valur = "";
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>StructuralUnit --&gt; ПодразделениеЗатрат</Description>
							<Order>750</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
							<BeforeExport>If Source.StructuralUnit.StructuralUnitType = Enums.StructuralUnitsTypes.Warehouse Then
	Valur = "";
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Amount --&gt; СуммаДокумента</Description>
							<Order>800</Order>
							<Source Name="Amount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>--&gt; НоменклатурнаяГруппа</Description>
							<Order>850</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
							<BeforeExport>Value = Source.ProductsAndServices.ProductsAndServicesCategory;</BeforeExport>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>--&gt; СпособЗачетаАвансов</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СпособЗачетаАвансов" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыЗачетаАвансов"/>
							<BeforeExport>If Source.Prepayment.Count() &gt; 0 Then
	Expression = "Перечисления.СпособыЗачетаАвансов.ПоДокументу";
Else
	ReceiptSettlement = CommonUse.ObjectAttributeValue(Source.Counterparty, "DoOperationsByDocuments");
	If ReceiptSettlement = True Then
		Expression = "Перечисления.СпособыЗачетаАвансов.НеЗачитывать";
	Else
		Expression = "Перечисления.СпособыЗачетаАвансов.Автоматически";
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Group>
							<Code>19</Code>
							<Description>--&gt; Продукция</Description>
							<Order>950</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Продукция" Kind="TabularSection"/>
							<BeforeProcessExport>ObjectsCollection = New ValueTable;
ObjectsCollection.Columns.Add("Номенклатура");
ObjectsCollection.Columns.Add("Количество");
ObjectsCollection.Columns.Add("Спецификация");
ObjectsCollection.Columns.Add("ЕдиницаИзмерения");

NewRow = ObjectsCollection.Add();
NewRow.Номенклатура = Source.ProductsAndServices;
NewRow.Количество = Source.Quantity;
NewRow.Спецификация = Source.Specification;
NewRow.ЕдиницаИзмерения = Source.MeasurementUnit;</BeforeProcessExport>
							<Property>
								<Code>20</Code>
								<Description>--&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>--&gt; Спецификация</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Спецификация" Kind="Реквизит" Type="CatalogRef.СпецификацииНоменклатуры"/>
								<ConversionRuleCode>СпецификацииНоменклатуры                          </ConversionRuleCode>
							</Property>
						</Group>
						<Group>
							<Code>23</Code>
							<Description>Prepayment --&gt; ЗачетАвансов</Description>
							<Order>1000</Order>
							<Source Name="Prepayment" Kind="TabularSection"/>
							<Receiver Name="ЗачетАвансов" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.Prepayment.Count() &gt; 0
	and  Not  ValueIsFilled(Source.Prepayment[0].Document) Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
							<Property>
								<Code>24</Code>
								<Description>Document --&gt; ДокументАванса</Description>
								<Order>50</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="ДокументАванса" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>SettlementsAmount --&gt; СуммаЗачета</Description>
								<Order>100</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаЗачета" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Group>
							<Code>26</Code>
							<Description>Inventory --&gt; ИспользованныеМатериалы</Description>
							<Order>1050</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="ИспользованныеМатериалы" Kind="TabularSection"/>
							<Property>
								<Code>27</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
						<Group>
							<Code>30</Code>
							<Description>Disposals --&gt; ВозвращенныеМатериалы</Description>
							<Order>1150</Order>
							<Source Name="Disposals" Kind="TabularSection"/>
							<Receiver Name="ВозвращенныеМатериалы" Kind="TabularSection"/>
							<Property>
								<Code>31</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ГТДИмпорт</Code>
					<Description>Document: Expense report</Description>
					<Order>2450</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.ExpensesOnImport</Source>
					<Receiver>DocumentRef.ГТДИмпорт</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type=""/>
							<Receiver Name="Дата" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type=""/>
							<Receiver Name="Номер" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; ПометкаУдаления</Description>
							<Order>150</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type=""/>
							<Receiver Name="ПометкаУдаления" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Posted --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type=""/>
							<Receiver Name="Проведен" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>250</Order>
							<Source Name="Comment" Kind="Реквизит" Type=""/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>DocumentCurrency --&gt; ВалютаДокумента</Description>
							<Order>350</Order>
							<Source Name="DocumentCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>ExchangeRate --&gt; КурсДокумента</Description>
							<Order>400</Order>
							<Source Name="ExchangeRate" Kind="Реквизит" Type=""/>
							<Receiver Name="КурсДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>IncludeVATInPrice --&gt; НДСВключенВСтоимость</Description>
							<Order>450</Order>
							<Source Name="IncludeVATInPrice" Kind="Реквизит" Type=""/>
							<Receiver Name="НДСВключенВСтоимость" Kind="Реквизит" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Multiplicity --&gt; КратностьДокумента</Description>
							<Order>500</Order>
							<Source Name="Multiplicity" Kind="Реквизит" Type=""/>
							<Receiver Name="КратностьДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Group>
							<Code>11</Code>
							<Description>Sections --&gt; Разделы</Description>
							<Order>550</Order>
							<Source Name="Sections" Kind="TabularSection"/>
							<Receiver Name="Разделы" Kind="TabularSection"/>
							<Property>
								<Code>12</Code>
								<Description>CustomsCost --&gt; ТаможеннаяСтоимость</Description>
								<Order>50</Order>
								<Source Name="CustomsCost" Kind="Реквизит" Type=""/>
								<Receiver Name="ТаможеннаяСтоимость" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>DutyAmount --&gt; СуммаПошлины</Description>
								<Order>100</Order>
								<Source Name="DutyAmount" Kind="Реквизит" Type=""/>
								<Receiver Name="СуммаПошлины" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>RateFee --&gt; СтавкаПошлины</Description>
								<Order>150</Order>
								<Source Name="RateFee" Kind="Реквизит" Type=""/>
								<Receiver Name="СтавкаПошлины" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>Tax --&gt; Налог</Description>
								<Order>200</Order>
								<Source Name="Tax" Kind="Реквизит" Type="CatalogRef.TaxTypes"/>
								<Receiver Name="Налог" Kind="Реквизит" Type="CatalogRef.ВидыНалоговИПлатежейВБюджет"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>250</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>300</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionVATRate2);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>18</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>600</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>19</Code>
								<Description>CountryOfOrigin --&gt; СтранаПроисхождения</Description>
								<Order>50</Order>
								<Source Name="CountryOfOrigin" Kind="Реквизит" Type="CatalogRef.WorldCountries"/>
								<Receiver Name="СтранаПроисхождения" Kind="Реквизит" Type="CatalogRef.СтраныМира"/>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>DocumentBatch --&gt; ДокументПартии</Description>
								<Order>100</Order>
								<Source Name="DocumentBatch" Kind="Реквизит" Type="DocumentRef.SupplierInvoice"/>
								<Receiver Name="ДокументПартии" Kind="Реквизит" Type="DocumentRef.ПоступлениеТоваровУслуг"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>DutyAmount --&gt; СуммаПошлины</Description>
								<Order>150</Order>
								<Source Name="DutyAmount" Kind="Реквизит" Type=""/>
								<Receiver Name="СуммаПошлины" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>InvoiceCost --&gt; ФактурнаяСтоимость</Description>
								<Order>200</Order>
								<Source Name="InvoiceCost" Kind="Реквизит" Type=""/>
								<Receiver Name="ФактурнаяСтоимость" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>250</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>300</Order>
								<Source Name="Quantity" Kind="Реквизит" Type=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>SectionNumber --&gt; НомерРаздела</Description>
								<Order>350</Order>
								<Source Name="SectionNumber" Kind="Реквизит" Type=""/>
								<Receiver Name="НомерРаздела" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>400</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type=""/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property>
							<Code>28</Code>
							<Description>CCDNo --&gt; НомерГТД</Description>
							<Order>650</Order>
							<Source Name="CCDNo" Kind="Kind" Type="CatalogRef.CCDNumbers"/>
							<Receiver Name="НомерГТД" Kind="Kind" Type="CatalogRef.НомераГТД"/>
							<ConversionRuleCode>НомераГТД                                         </ConversionRuleCode>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>700</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>Contract --&gt; ДоговорКонтрагента</Description>
							<Order>750</Order>
							<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
							<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Group>
				<Code>Inventory</Code>
				<Description>Inventory                                         </Description>
				<Order>400</Order>
				<Rule>
					<Code>ИнвентаризацияТоваровНаСкладе</Code>
					<Description>Документ: Physical inventory</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryReconciliation</Source>
					<Receiver>DocumentRef.ИнвентаризацияТоваровНаСкладе</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>--&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = Not  Source.DeletionMark;</BeforeExport>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>350</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>--&gt; Товары</Description>
							<Order>400</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = New Query;
Query.SetParameter("Ref", Source.Ref);
Query.SetParameter("Date", Source.Date);
Query.SetParameter("NatCurr", Parameters.NationalCurrency);
Query.SetParameter("AccCurr", Parameters.AccountingCurrency);

Query.Text = 
"SELECT
|	Inventory.ProductsAndServices AS Номенклатура,
|	Inventory.ProductsAndServices.MeasurementUnit AS ЕдиницаИзмерения,
|	CASE
|		WHEN VALUETYPE(Inventory.MeasurementUnit) = TYPE(Справочник.UOM)
|				AND Inventory.MeasurementUnit.Factor &gt; 0
|			THEN Inventory.Quantity * Inventory.MeasurementUnit.Factor
|		ELSE Inventory.Quantity
|	END AS Количество,
|	CASE
|		WHEN VALUETYPE(Inventory.MeasurementUnit) = TYPE(Справочник.UOM)
|				AND Inventory.MeasurementUnit.Factor &gt; 0
|			THEN Inventory.QuantityAccounting * Inventory.MeasurementUnit.Factor
|		ELSE Inventory.QuantityAccounting
|	END AS КоличествоУчет,
|	Inventory.Amount * CASE
|		WHEN &amp;NatCurr &lt;&gt; &amp;AccCurr
|			THEN CASE
|					WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|							AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|						THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|					ELSE 0
|				END
|		ELSE 1
|	END / CASE
|		WHEN Inventory.Quantity = 0
|			THEN 1
|		WHEN VALUETYPE(Inventory.MeasurementUnit) = TYPE(Справочник.UOM)
|				AND Inventory.MeasurementUnit.Factor &gt; 0
|			THEN Inventory.Quantity * Inventory.MeasurementUnit.Factor
|		ELSE Inventory.Quantity
|	END AS Цена,
|	Inventory.Amount * CASE
|		WHEN &amp;NatCurr &lt;&gt; &amp;AccCurr
|			THEN CASE
|					WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|							AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|						THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|					ELSE 0
|				END
|		ELSE 1
|	END AS Сумма,
|	Inventory.AmountAccounting * CASE
|		WHEN &amp;NatCurr &lt;&gt; &amp;AccCurr
|			THEN CASE
|					WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|							AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|						THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|					ELSE 0
|				END
|		ELSE 1
|	END AS СуммаУчет
|FROM
|	Document.InventoryReconciliation.Inventory AS Inventory
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;NatCurr) AS CurrencyRatesPrice
|		ON (TRUE)
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;NatCurr) AS CurrencyRates
|		ON (TRUE)
|WHERE
|	Inventory.Ref = &amp;Ref";
				
ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>9</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>--&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>--&gt; КоличествоУчет</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоУчет" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; Цена</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Сумма</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; СуммаУчет</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаУчет" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ОприходованиеТоваров</Code>
					<Description>Документ: Inventory capitalization</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryReceipt</Source>
					<Receiver>DocumentRef.ОприходованиеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>BasisDocument --&gt; ИнвентаризацияТоваровНаСкладе</Description>
							<Order>350</Order>
							<Source Name="BasisDocument" Kind="Реквизит" Type="DocumentRef.InventoryReconciliation"/>
							<Receiver Name="ИнвентаризацияТоваровНаСкладе" Kind="Реквизит" Type="DocumentRef.ИнвентаризацияТоваровНаСкладе"/>
							<ConversionRuleCode>ИнвентаризацияТоваровНаСкладе                     </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>400</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>450</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>10</Code>
							<Description>--&gt; Товары</Description>
							<Order>500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = New Query;
Query.SetParameter("Ref", Source.Ref);
Query.SetParameter("Date", Source.Date);
Query.SetParameter("NatCurr", Parameters.NationalCurrency);
Query.SetParameter("AccCurr", Parameters.AccountingCurrency);

Query.Text = 
"SELECT
|	Inventory.ProductsAndServices AS Номенклатура,
|	Inventory.ProductsAndServices.MeasurementUnit AS ЕдиницаИзмерения,
|	1 AS Коэффициент,
|	CASE
|		WHEN VALUETYPE(Inventory.MeasurementUnit) = TYPE(Справочник.UOM)
|				AND Inventory.MeasurementUnit.Factor &gt; 0
|			THEN Inventory.Quantity * Inventory.MeasurementUnit.Factor
|		ELSE Inventory.Quantity
|	END AS Количество,
|	Inventory.Amount * CASE
|		WHEN &amp;NatCurr &lt;&gt; &amp;AccCurr
|			THEN CASE
|					WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|							AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|						THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|					ELSE 0
|				END
|		ELSE 1
|	END / CASE
|		WHEN Inventory.Quantity = 0
|			THEN 1
|		WHEN VALUETYPE(Inventory.MeasurementUnit) = TYPE(Справочник.UOM)
|				AND Inventory.MeasurementUnit.Factor &gt; 0
|			THEN Inventory.Quantity * Inventory.MeasurementUnit.Factor
|		ELSE Inventory.Quantity
|	END AS Цена,
|	Inventory.Amount * CASE
|		WHEN &amp;NatCurr &lt;&gt; &amp;AccCurr
|			THEN CASE
|					WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|							AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|							AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|						THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|					ELSE 0
|				END
|		ELSE 1
|	END AS Сумма
|FROM
|	Document.InventoryReceipt.Inventory AS Inventory
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;AccCurr) AS CurrencyRatesPrice
|		ON (TRUE)
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;NatCurr) AS CurrencyRates
|		ON (TRUE)
|WHERE
|	Inventory.Ref = &amp;Ref";
				
ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>11</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Количество</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; Цена</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Цена" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; Сумма</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>СписаниеТоваров</Code>
					<Description>Документ: Inventory write-off</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryWriteOff</Source>
					<Receiver>DocumentRef.СписаниеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>BasisDocument --&gt; ИнвентаризацияТоваровНаСкладе</Description>
							<Order>300</Order>
							<Source Name="BasisDocument" Kind="Реквизит" Type="DocumentRef.InventoryReconciliation"/>
							<Receiver Name="ИнвентаризацияТоваровНаСкладе" Kind="Реквизит" Type="DocumentRef.ИнвентаризацияТоваровНаСкладе"/>
							<ConversionRuleCode>ИнвентаризацияТоваровНаСкладе                     </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>350</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>400</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>9</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>450</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<Property>
								<Code>10</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПеремещениеТоваров</Code>
					<Description>Документ: Property sale</Description>
					<Order>200</Order>
					<OnExport>InventoryTable = Source.Inventory.UnloadColumns("ProductsAndServices,Quantity,MeasurementUnit");
ComissionTable = InventoryTable.Copy();

For Each TableRow Из Source.Inventory Do
	
	If TableRow.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
		NewRow = ComissionTable.Add();
	Else
		NewRow = InventoryTable.Add();
	EndIf;
	
	FillPropertyValues(NewRow, TableRow);
	
EndDo;

IncomingData = Новый Structure();
IncomingData.Insert("Inventory", InventoryTable);
IncomingData.Insert("Comission", ComissionTable);</OnExport>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryTransfer</Source>
					<Receiver>DocumentRef.ПеремещениеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; СкладОтправитель</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладОтправитель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
If Source.OperationKind = Enums.OperationKindsInventoryTransfer.Move Then
	
	StructuralUnit = Source.StructuralUnit;
	Execute(Algorithms.DefineOCRNameForStructuralUnit);
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnitPayee --&gt; СкладПолучатель</Description>
							<Order>350</Order>
							<Source Name="StructuralUnitPayee" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладПолучатель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsInventoryTransfer.Move Then
	
	StructuralUnit = Source.StructuralUnit;
	Execute(Algorithms.DefineOCRNameForStructuralUnit);
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>400</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>9</Code>
							<Description>Inventory --&gt; Товары</Description>
							<Order>450</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>ObjectsCollection = IncomingData.Inventory; </BeforeProcessExport>
							<Property>
								<Code>11</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>10</Code>
							<Description>Inventory --&gt; ТоварыНаКомиссии</Description>
							<Order>500</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="ТоварыНаКомиссии" Kind="TabularSection"/>
							<BeforeProcessExport>ObjectsCollection = IncomingData.Comission;</BeforeProcessExport>
							<Property>
								<Code>16</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>200</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Group>
				<Code>Cash</Code>
				<Description>Cash                                              </Description>
				<Order>450</Order>
				<Rule>
					<Code>ПоступлениеНаРасчетныйСчет</Code>
					<Description>Документ: Payment receipt</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.PaymentReceipt</Source>
					<Receiver>DocumentRef.ПоступлениеНаРасчетныйСчет</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsPaymentReceipt"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийПоступлениеДенежныхСредств"/>
							<ConversionRuleCode>ВидыОперацийПоступлениеДенежныхСредств            </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
							<Order>150</Order>
							<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
	
	Value = Source.AdvanceHolder;
	OCRName = "КонтрагентыСотрудник";
	
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>450</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>BankAccount --&gt; СчетОрганизации</Description>
							<Order>500</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>CashCurrency --&gt; ВалютаДокумента</Description>
							<Order>550</Order>
							<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
							<Order>600</Order>
							<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
							<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							<OnExport>ExportObject = True; </OnExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>--&gt; СчетБанк</Description>
							<Order>650</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетБанк" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
			
	If Source.CashCurrency = Constants.NationalCurrency.Get() Then
		Value = "1121";
	Else
		Value = "1122";
	EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>BasisDocument --&gt; ДокументОснование</Description>
							<Order>700</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							<BeforeExport> If TypeOf(Source.BasisDocument) = Type("DocumentRef.LoanContract") Then
	Cancel = True;
EndIf; </BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
							<Order>750</Order>
							<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>PaymentDestination --&gt; НазначенеиПлатежа</Description>
							<Order>800</Order>
							<Source Name="PaymentDestination" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НазначениеПлатежа" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>CounterpartyAccount --&gt; СчетКонтрагента</Description>
							<Order>850</Order>
							<Source Name="CounterpartyAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетКонтрагента" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	If Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
	
		AccCur = Constants.AccountingCurrency.Get();
		If Source.CashCurrency = AccCur Then
			Value = "3311";
		Else
			Value = "3313";
		EndIf;
	
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
		Value = "1411";
	
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
		
		Value = Source.Correspondence.Code;
		
	EndIf;
Else

	If Source.OperationKind = Enums.OperationKindsPaymentReceipt.CurrencyPurchase
		Or Source.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;

		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
		Value = "1411";
	Else
		Value = "";	
	EndIf;
EndIf;
</BeforeExport>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>--&gt; КурсНаДатуПриобретенияРеализацииВалюты</Description>
							<Order>950</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="КурсНаДатуПриобретенияРеализацииВалюты" Kind="Реквизит" Type="Число"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsPaymentReceipt.CurrencyPurchase Then
	
	CurencyValue = InformationRegisters.CurrencyRates.GetLast(Source.Date, New Structure("Currency", Source.CashCurrency));
	
	ExchangeRate = ?(
		CurencyValue.ExchangeRate = 0,
		1,
		CurencyValue.ExchangeRate
	);
	
	Value = ExchangeRate;
	
Else
	
	Value = 1;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>1000</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>21</Code>
							<Description>PaymentDetails --&gt; РасшифровкаПлатежа</Description>
							<Order>1050</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="РасшифровкаПлатежа" Kind="TabularSection"/>
							<BeforeProcessExport>
If Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.FromCustomer
	And Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.FromVendor
	And Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.FromAdvanceHolder
	And Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.LoanSettlements
	And Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.OtherSettlements
	And Source.OperationKind &lt;&gt; Enums.OperationKindsPaymentReceipt.CurrencyPurchase Then
	
	Cancel = True;

EndIf;

If Source.OperationKind = Enums.OperationKindsPaymentReceipt.CurrencyPurchase Then
	
	PaymentDetailsTable = Source.PaymentDetails.ВыгрузитьКолонки();
	
	NewRow = PaymentDetailsTable.Add();
	
	If Constants.AccountingCurrency.Get() = Constants.NationalCurrency.Get() Then
		
		NewRow.ExchangeRate = Source.ExchangeRate;
		NewRow.Multiplicity = Source.Multiplicity;
		NewRow.PaymentAmount = Source.DocumentAmount;
		
	Else
		
		CurrencyValue = InformationRegisters.CurrencyRates.GetLast(Source.Date, New Structure("Currency", Source.CashCurrency));
		
		ExchangeRate = ?(CurrencyValue.ExchangeRate = 0, 1, CurrencyValue.ExchangeRate);
		Multiplicity = ?(CurrencyValue.Multiplicity = 0, 1, CurrencyValue.Multiplicity);
		
		NewRow.ExchangeRate = ExchangeRate;
		NewRow.Multiplicity = Multiplicity;
		
		NewRow.PaymentAmount = SmallBusinessServer.RecalculateFromCurrencyToCurrency(Source.DocumentAmount,
			ExchangeRate,
			1,
			Multiplicity,
			1);
		
	EndIf;
	
	ObjectsCollection = PaymentDetailsTable;
	
EndIf;						</BeforeProcessExport>
							<Property>
								<Code>22</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>50</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = "БезНДС";	
Else
	Execute(Algorithms.FillTabularSectionVATRate2);
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>100</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = 0;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>PaymentAmount --&gt; СуммаПлатежа</Description>
								<Order>150</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПлатежа" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>200</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer
	Or Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
	
	Execute(Algorithms.FormContractStructure);
	
ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.LoanSettlements Then
	
	LoanContract = Source.LoanContract;
	Execute(Algorithms.FormLoanStructure);
	
ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.OtherSettlements Then
	
	Value = Source.PaymentDetails[0].Contract;
Else
	Empty = True;
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>SettlementsAmount --&gt; СуммаВзаиморасчетов</Description>
								<Order>350</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>Document --&gt; Сделка</Description>
								<Order>400</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; СпособПогашенияЗадолженности</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособПогашенияЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
Else
	If CollectionObject.AdvanceFlag Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.НеПогашать";
	ElsIf ValueIsFilled(CollectionObject.Document) Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.ПоДокументу";
	Else
		Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	EndIf;
EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	
	If Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
	
		If Source.CashCurrency = AccCur Then
			Value = "3311";
		Else
			Value = "3313";
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer Then
		
		If Source.CashCurrency = AccCur Then
			Value = "1311";
		Else
			Value = "1313";
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
		
		Value = Source.Correspondence.Code;
		
		
	Else
		
		If Source.CashCurrency = AccCur Then
			Value = "1311";
		Else
			Value = "3313";
		EndIf;
	EndIf;
	
Else

	If Source.OperationKind = Enums.OperationKindsPaymentReceipt.CurrencyPurchase
		Or Source.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.LoanSettlements Then
		Value = "3411";
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
		Value = "1331";

	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.OtherSettlements   Then	
		Value = Source.Correspondence.Code;
		
	Else
		Value = "";	
	EndIf;
EndIf;
							</BeforeExport>
							</Property>
							<Property>
								<Code>32</Code>
								<Description>--&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
								<OnExport>ExportObject = True; </OnExport>
								<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
	Value = Source.Item;
Else
	Cancel = True;
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>33</Code>
								<Description>--&gt; СчетУчетаРасчетовПоАвансам</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовПоАвансам" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	
	If Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
	
		If Source.CashCurrency = AccCur Then
			Value = "3312";
		Else
			Value = "3314";
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer Then
		
		If Source.CashCurrency = AccCur Then
			Value = "1312";
		Else
			Value = "1314";
		EndIf;
		
	Else
		
		If Source.CashCurrency = AccCur Then
			Value = "3312";
		Else
			Value = "3314";
		EndIf;
	EndIf;
	
Else
	Cancel = True;
EndIf;
								</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>34</Code>
							<Description>AdvanceHolder --&gt; ФизЛицо</Description>
							<Order>1100</Order>
							<Source Name="AdvanceHolder" Kind="Реквизит" Type="СправочникСсылка.Employees"/>
							<Receiver Name="ФизЛицо" Kind="Реквизит" Type="СправочникСсылка.ФизическиеЛица"/>
							<ConversionRuleCode>ФизическиеЛица                              </ConversionRuleCode>
							<BeforeExport>
							If Parameters.SettingVariant = "Accounting4" Then
								Cancel = True;
							EndIf;
							If Source.OperationKind = Enums.OperationKindsPaymentReceipt.LoanRepaymentByEmployee Then
								Value = Source.AdvanceHolder.Ind;
							Else
								Cancel = True;
							EndIf;
							</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>СписаниеСРасчетногоСчета</Code>
					<Description>Документ: Expense from account</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.PaymentExpense</Source>
					<Receiver>DocumentRef.СписаниеСРасчетногоСчета</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsPaymentExpense"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств"/>
							<ConversionRuleCode>ВидыОперацийСписаниеДенежныхСредств               </ConversionRuleCode>
							<BeforeExport>
	If Source.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
		AccType = CommonUse.ObjectAttributeValue(Source.Correspondence, "TypeOfAccount");
		If AccType = Enums.GLAccountsTypes.Loans
			Or AccType = Enums.GLAccountsTypes.LongtermObligations Then
			Value = "РасчетыПоКредитамИЗаймам";
			OCRName = "";
		EndIf;
	EndIf;
						</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type=""/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	If Source.OperationKind = Enums.OperationKindsPaymentExpense.ToAdvanceHolder Then
		
		Value = Source.AdvanceHolder.Ind;
		OCRName = "ФизическиеЛица";
	EndIf;

EndIf;

If (Source.OperationKind = Enums.OperationKindsPaymentExpense.Other
  Or Source.OperationKind = Enums.OperationKindsPaymentExpense.ToAdvanceHolder
  Or Source.OperationKind = Enums.OperationKindsPaymentExpense.Taxes)
   And (ValueIsFilled(Source.BasisDocument)
   And TypeOf(Source.BasisDocument) &lt;&gt; Type("DocumentRef.CashTransferPlan")
   And TypeOf(Source.BasisDocument) &lt;&gt; Type("DocumentRef.PayrollSheet")
   And TypeOf(Source.BasisDocument) &lt;&gt; Type("DocumentRef.CashOutflowPlan") 
   And TypeOf(Source.BasisDocument) &lt;&gt; Type("DocumentRef.TaxAccrual")) Then
   
   Value = CommonUse.ObjectAttributeValue(Source.BasisDocument, "Counterparty");
   
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>400</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>BankAccount --&gt; СчетОрганизации</Description>
							<Order>450</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>CashCurrency --&gt; ВалютаДокумента</Description>
							<Order>500</Order>
							<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>AdvanceHolder --&gt; ФизЛицо</Description>
							<Order>550</Order>
							<Source Name="AdvanceHolder" Kind="Реквизит" Type="CatalogRef.Employees"/>
							<Receiver Name="ФизЛицо" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
							<BeforeExport>

If Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIf;

If Source.OperationKind = Enums.OperationKindsPaymentExpense.ToAdvanceHolder
	Or Source.OperationKind = Enums.OperationKindsPaymentExpense.IssueLoanToEmployee
	И ValueIsFilled(Source.AdvanceHolder.Ind) Then
	
	Value = Source.AdvanceHolder.Ind;
Else
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
							<Order>600</Order>
							<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
							<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							<OnExport>ExportObject = True; </OnExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>--&gt; СчетБанк</Description>
							<Order>650</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетБанк" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
							If Source.OperationKind = Enums.OperationKindsPaymentExpense.LoanSettlements Then
	NationalCurrency	= Constants.NationalCurrency.Get();
	Value 			= ?(Source.CashCurrency = NationalCurrency, "1121", "1122");
	
Else

	NationalCurrency	= Constants.NationalCurrency.Get();
	Value 			= ?(Source.CashCurrency = NationalCurrency, "1121", "1122");
EndIf;
						</BeforeExport>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>BasisDocument --&gt; ДокументОснование</Description>
							<Order>700</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							<BeforeExport>If TypeOf(Source.BasisDocument) = Type("DocumentRef.LoanContract") Then
	Cancel = True;
EndIf; </BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>CounterpartyAccount --&gt; СчетКонтрагента</Description>
							<Order>750</Order>
							<Source Name="CounterpartyAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетКонтрагента" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
							<Order>800</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>IF  Source.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
	
	If ValueIsFilled(Source.Item.CorrespondingAccount) Then
		Value = Source.Item.CorrespondingAccount;
	Else
		Account = "";
		Operation =  Source.Correspondence;
		Document = Source;
		Execute(Algorithms.DefineAccountByOperation);
		Value = Account;
	EndIf;
Elsif Source.OperationKind = Enums.OperationKindsPaymentExpense.Taxes  Then
	
	  	Value = Source.TaxKind.GLAccount.Code;
Elsif Source.OperationKind = Enums.OperationKindsPaymentExpense.OtherSettlements  Then
	
	  	Value = "1361";
Else
	Value = "";	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>IncomingDocumentDate --&gt; ДатаВходящегоДокумента</Description>
							<Order>850</Order>
							<Source Name="IncomingDocumentDate" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ДатаВходящегоДокумента" Kind="Реквизит" Type="Дата"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>IncomingDocumentNumber --&gt; НомерВходящегоДокумента</Description>
							<Order>900</Order>
							<Source Name="IncomingDocumentNumber" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НомерВходящегоДокумента" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>PaymentDestination --&gt; НаЗначениеПлатежа</Description>
							<Order>950</Order>
							<Source Name="PaymentDestination" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НазначениеПлатежа" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>1000</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>21</Code>
							<Description>PaymentDetails --&gt; РасшифровкаПлатежа</Description>
							<Order>1050</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="РасшифровкаПлатежа" Kind="TabularSection"/>
							<BeforeProcessExport>If Not (Source.OperationKind = Enums.OperationKindsPaymentExpense.Vendor
	Or Source.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer 
	Or Source.OperationKind = Enums.OperationKindsPaymentExpense.LoanSettlements )  Then
	
	Cancel = True;
EndIf;						</BeforeProcessExport>
							<Property>
								<Code>22</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>50</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = "БезНДС";	
Else
	Execute(Algorithms.FillTabularSectionVATRate2);
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>100</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = 0;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>PaymentAmount --&gt; СуммаПлатежа</Description>
								<Order>150</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПлатежа" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>200</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer
	Or Source.OperationKind = Enums.OperationKindsPaymentExpense.Vendor Then
	
	Execute(Algorithms.FormContractStructure);
	
ElsIf Source.OperationKind = Enums.OperationKindsPaymentExpense.LoanSettlements Then
	
	LoanContract = Source.LoanContract;
	Execute(Algorithms.FormLoanStructure);
	
Else
	
	Empty = True;
	
EndIf;</BeforeExport>
							<OnExport>ExportObject = True; </OnExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Document --&gt; Сделка</Description>
								<Order>250</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>350</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>SettlementsAmount --&gt; СуммаВзаиморасчетов</Description>
								<Order>400</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; СпособПогашенияЗадолженности</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособПогашенияЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
Else
	If CollectionObject.AdvanceFlag Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.НеПогашать";
	ElsIf ValueIsFilled(CollectionObject.Document) Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.ПоДокументу";
	Else
		Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	EndIf;
EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	
	If Source.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer  Then
		
		If Source.CashCurrency = AccCur Then
			Value = "1311";
		Else
			Value = "1313";
		EndIf;
		
	Elsif Source.OperationKind = Enums.OperationKindsPaymentExpense.LoanSettlements  Then
		
		If CollectionObject.TypeOfAmount = Enums.LoanScheduleAmountTypes.Principal Then
			Value = "3411";
		ElsIf CollectionObject.TypeOfAmount = Enums.LoanScheduleAmountTypes.Interest Then
			Value = "635";
		Else
		    Value = "6421";
		EndIf;
		
	Else
	
		If Source.CashCurrency = AccCur Then
			Value = "3311";
		Else
			Value = "3313";
		EndIf;
		
	EndIf;
Else
	
	If Source.OperationKind = Enums.OperationKindsPaymentExpense.Taxes
		Or Source.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsPaymentExpense.OtherSettlements Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		EndIf;
		
	ElsIf  Source.OperationKind = Enums.OperationKindsPaymentExpense.LoanSettlements Then

		If CollectionObject.TypeOfAmount = Enums.LoanScheduleAmountTypes.Interest Then
			Value = "635";
		Else
			Value = "34111";
		EndIf;
	Else
		Value = "";	
	EndIf;
EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>34</Code>
								<Description>--&gt; СчетУчетаРасчетовПоАвансам</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовПоАвансам" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	AccCur = Constants.AccountingCurrency.Get();
	If Source.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer  Then
		
		If Source.CashCurrency = AccCur Then
			Value = "1312";
		Else
			Value = "1314";
		EndIf;
	Else
		If Source.CashCurrency = AccCur Then
			Value = "3312";
		Else
			Value = "3314";
		EndIf;
	EndIf;
Else
	Cancel = True;
EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>43</Code>
								<Description>--&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
								<BeforeExport>If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIf;

Value = Source.Item;			</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>32</Code>
							<Description>Counterparty --&gt; СубконтоДт1</Description>
							<Order>1100</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="СправочникСсылка.Counterparties"/>
							<Receiver Name="СубконтоДт1" Kind="Реквизит"/>
							<BeforeExport>If Not Source.OperationKind = Enums.OperationKindsPaymentExpense.OtherSettlements Then
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>33</Code>
							<Description>--&gt; СубконтоДт2</Description>
							<Order>1150</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СубконтоДт2" Kind="Реквизит"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsPaymentExpense.OtherSettlements Then
	Value = Source.PaymentDetails[0].Contract;
EndIf;</BeforeExport>
						</Property>
						<Group>
							<Code>35</Code>
							<Description>--&gt; КомиссияБанка</Description>
							<Order>1200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="КомиссияБанка" Kind="TabularSection"/>
							<BeforeProcessExport>If Not Parameters.SettingVariant = "Accounting4" Then
	
	Cancel = True;
	
EndIf;

If Not Source.UseBankCharges Then
	Cancel = True;
EndIf;

ObjectsCollection = New ValueTable;
ObjectsCollection.Columns.Add("УсловияКомиссии");
ObjectsCollection.Columns.Add("Сумма");
ObjectsCollection.Columns.Add("Контрагент");
ObjectsCollection.Columns.Add("ВалютаКомиссии");
ObjectsCollection.Columns.Add("КурсКомиссии");
ObjectsCollection.Columns.Add("КратностьКомиссии");
ObjectsCollection.Columns.Add("СчетЗатрат");

NewRow =  ObjectsCollection.Add();

NewRow.УсловияКомиссии = Source.BankCharge;
NewRow.Сумма = Source.BankChargeAmount;
NewRow.Контрагент = Source.CounterParty;
NewRow.ВалютаКомиссии = Source.CashCurrency;
If Source.PaymentDetails.Count() &gt; 0 Then 
	NewRow.КурсКомиссии = Source.PaymentDetails[0].ExchangeRate;
	NewRow.КратностьКомиссии = Source.PaymentDetails[0].Multiplicity;
Else
	NewRow.КурсКомиссии = 1;
	NewRow.КратностьКомиссии = 1;
EndIf;
NewRow.СчетЗатрат = "642";
</BeforeProcessExport>
							<Property>
								<Code>36</Code>
								<Description>--&gt; УсловияКомиссии</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="УсловияКомиссии" Kind="Реквизит" Type="СправочникСсылка.КомиссииБанков"/>
								<ConversionRuleCode>КомиссииБанков                                    </ConversionRuleCode>
								<BeforeExport>OutgoingData = New Structure();
OutgoingData.Insert("Контрагент", Source.CounterParty);
</BeforeExport>
								<OnExport>ExportObject = True; </OnExport>
							</Property>
							<Property>
								<Code>37</Code>
								<Description>--&gt; Сумма</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>39</Code>
								<Description>--&gt; ВалютаКомиссии</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ВалютаКомиссии" Kind="Реквизит" Type="СправочникСсылка.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>40</Code>
								<Description>--&gt; КратностьКомиссии</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КратностьКомиссии" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>41</Code>
								<Description>--&gt; КурсКомиссии</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КурсКомиссии" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>42</Code>
								<Description>--&gt; СчетЗатрат</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетЗатрат" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							</Property>
						</Group>
						<Property>
							<Code>44</Code>
							<Description>TaxKind --&gt; Налог</Description>
							<Order>1250</Order>
							<Source Name="TaxKind" Kind="Реквизит" Type="СправочникСсылка.TaxTypes"/>
							<Receiver Name="Налог" Kind="Реквизит" Type="СправочникСсылка.ВидыНалоговИПлатежейВБюджет"/>
							<OnExport>ExportObject = True; </OnExport>
							<BeforeExport>
If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIf;
							</BeforeExport>
							<ConversionRuleCode>ВидыНалоговИПлатежейВБюджет                       </ConversionRuleCode>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>РасходныйКассовыйОрдер</Code>
					<Description>Документ: Cash payment5</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CashPayment</Source>
					<Receiver>DocumentRef.РасходныйКассовыйОрдер</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsCashPayment"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийРКО"/>
							<ConversionRuleCode>ВидыОперацийРКО                                   </ConversionRuleCode>
							<BeforeExport>
	If Source.OperationKind = Enums.OperationKindsCashPayment.Other Then
		AccType = CommonUse.ObjectAttributeValue(Source.Correspondence, "TypeOfAccount");
		If AccType = Enums.GLAccountsTypes.Loans
			Or AccType = Enums.GLAccountsTypes.LongtermObligations Then
			Value = "РасчетыПоКредитамИЗаймам";
			OCRName = "";
		Endif;
	EndIf;
						</BeforeExport>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Issue --&gt; Выдать</Description>
							<Order>100</Order>
							<Source Name="Issue" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Выдать" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>32</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит"/>
							<BeforeExport>If (Source.OperationKind = Enums.OperationKindsCashPayment.ToAdvanceHolder
	Or Source.OperationKind = Enums.OperationKindsCashPayment.IssueLoanToEmployee
	Or Source.OperationKind = Enums.OperationKindsCashPayment.SalaryForEmployee) Then
	
	Value =CommonUse.ObjectAttributeValue(Source.AdvanceHolder, "Ind");
	OCRName = "ФизическиеЛица";
EndIf;</BeforeExport>
						</Property>
						<Property Disable="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Basis --&gt; Основание</Description>
							<Order>300</Order>
							<Source Name="Basis" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Основание" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Application --&gt; Приложение</Description>
							<Order>400</Order>
							<Source Name="Application" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Приложение" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>450</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>500</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
							<Order>550</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
						If Source.OperationKind = Enums.OperationKindsCashPayment.Other Then
	If Parameters.SettingVariant = "Accounting4" Then
		Value = Source.Correspondence.Code;
		
	Else
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;
	EndIf;
ElsIf Source.OperationKind = Enums.OperationKindsCashPayment.Taxes Then
	
	Value = Source.TaxKind.GLAccount.Code;
	
ElsIf Source.OperationKind = Enums.OperationKindsCashPayment.OtherSettlements Then
	
	Value = Source.Correspondence.Code;
	
Else	
	Value = "";	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>CashCurrency --&gt; ВалютаДокумента</Description>
							<Order>600</Order>
							<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
							<Order>650</Order>
							<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
							<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; СчетКасса</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетКасса" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
							
							If Source.CashCurrency = Parameters.NationalCurrency Then
							
								Expression = "ПланыСчетов.Хозрасчетный.TiềnMặt_TiềnViệtNam";
								If Parameters.SettingVariant = "Accounting4" Then
									Expression = "ПланыСчетов.Хозрасчетный.КассаОрганизации";
								EndIf;
							Else
								Expression = "ПланыСчетов.Хозрасчетный.TiềnMặt_NgoạiTệ";
								If Parameters.SettingVariant = "Accounting4" Then
									Expression = "ПланыСчетов.Хозрасчетный.КассаОрганизацииВал";
								EndIf;
								
							EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>ByDocument --&gt; ПоДокументу</Description>
							<Order>750</Order>
							<Source Name="ByDocument" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПоДокументу" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>BasisDocument --&gt; ДокументОснование</Description>
							<Order>800</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							<BeforeExport> If TypeOf(Source.BasisDocument) = Type("DocumentRef.LoanContract") Then
	Cancel = True;
EndIf; </BeforeExport>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>850</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>ReceiptCRNumber --&gt; НомерЧекаККМ</Description>
							<Order>900</Order>
							<Source Name="ReceiptCRNumber" Kind="Реквизит" Type="Число"/>
							<Receiver Name="НомерЧекаККМ" Kind="Реквизит" Type="Число"/>
						</Property>
						<Group>
							<Code>19</Code>
							<Description>PaymentDetails --&gt; РасшифровкаПлатежа</Description>
							<Order>950</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="РасшифровкаПлатежа" Kind="TabularSection"/>
							<BeforeProcessExport>IF Source.OperationKind &lt;&gt; Enums.OperationKindsCashPayment.ToCustomer
	And Source.OperationKind &lt;&gt; Enums.OperationKindsCashPayment.LoanSettlements
	And Source.OperationKind &lt;&gt; Enums.OperationKindsCashPayment.Vendor Then
	
	Cancel = True;
EndIf;</BeforeProcessExport>
							<Property>
								<Code>20</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>50</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = "БезНДС";	
Else
	Execute(Algorithms.FillTabularSectionVATRate2);
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>100</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = 0;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>PaymentAmount --&gt; СуммаПлатежа</Description>
								<Order>150</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПлатежа" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>200</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsCashPayment.ToCustomer
	Or Source.OperationKind = Enums.OperationKindsCashPayment.Vendor Then
	
	Execute(Algorithms.FormContractStructure);
	
ElsIf Source.OperationKind = Enums.OperationKindsCashPayment.LoanSettlements Then
	
	LoanContract = Source.LoanContract;
	Execute(Algorithms.FormLoanStructure);
Else
	
	Empty = True;
	
EndIf;</BeforeExport>
							<OnExport>ExportObject = True; </OnExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>SettlementsAmount --&gt; СуммаВзаиморасчетов</Description>
								<Order>350</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Document --&gt; Сделка</Description>
								<Order>400</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>--&gt; СпособПогашенияЗадолженности</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособПогашенияЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	
Else
		
	If CollectionObject.AdvanceFlag Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.НеПогашать";
	ElsIf ValueIsFilled(CollectionObject.Document) Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.ПоДокументу";
	Else
		Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
	EndIf;
EndIf;
</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
		
If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get(); 
	If Source.OperationKind = Enums.OperationKindsCashPayment.ToCustomer Then
		
		If Source.CashCurrency = AccCur Then
			Value = "1311";
		Else
			Value = "1312";
		EndIf;
		
	Else
		If Source.CashCurrency = AccCur Then
			Value = "3311";
		Else
			Value = "3313";
		EndIf;
	EndIf;
	
Else
	
	If Source.OperationKind = Enums.OperationKindsCashPayment.Taxes
		Or Source.OperationKind = Enums.OperationKindsCashPayment.Other Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;
		
	ElsIf	Source.OperationKind = Enums.OperationKindsCashPayment.LoanSettlements Then
		Value = "3411";
		
	Else
		Value = "";	
	EndIf;
EndIf;
</BeforeExport>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>--&gt; СчетУчетаРасчетовПоАвансам</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовПоАвансам" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
	If Parameters.SettingVariant = "Accounting4" Then
		
		AccCur = Constants.AccountingCurrency.Get(); 
		
		If Source.OperationKind = Enums.OperationKindsCashPayment.ToCustomer Then
			
			If Source.CashCurrency = AccCur Then
				Value = "1312";
			Else
				Value = "1314";
			EndIf;
			
		Else
			
			If Source.CashCurrency = AccCur Then
				Value = "3312";	
			Else
				Value = "3314";	
			EndIf;
		EndIf;
	Else
		Cancel = true;
	EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>--&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
								<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
	Value = Source.Item;
Else
	Cancel = True;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>30</Code>
							<Description>PayrollPayment --&gt; ВыплатаЗаработнойПлаты</Description>
							<Order>1000</Order>
							<Source Name="PayrollPayment" Kind="TabularSection"/>
							<Receiver Name="ВыплатаЗаработнойПлаты" Kind="TabularSection"/>
							<Property>
								<Code>31</Code>
								<Description>PaymentAmount --&gt; СуммаКВыплате</Description>
								<Order>50</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаКВыплате" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Property>
							<Code>34</Code>
							<Description>Counterparty --&gt; СубконтоДт1</Description>
							<Order>1150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="СправочникСсылка.Counterparties"/>
							<Receiver Name="СубконтоДт1" Kind="Реквизит"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Not Source.OperationKind = Enums.OperationKindsCashPayment.OtherSettlements Then
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>35</Code>
							<Description>--&gt; СубконтоДт2</Description>
							<Order>1200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СубконтоДт2" Kind="Реквизит"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>If Not Source.OperationKind = Enums.OperationKindsCashPayment.OtherSettlements Then
	Cancel = True;
EndIf;

If  Not Source.PaymentDetails.Count() = 1 Then
	Cancel = True;
Else
	Value = Source.PaymentDetails[0].Contract;
EndIf;
</BeforeExport>
						</Property>
						<Property>
							<Code>37</Code>
							<Description>Comment --&gt; Основание</Description>
							<Order>1250</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Основание" Kind="Реквизит" Type="Строка"/>
							<BeforeExport>If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIF</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПриходныйКассовыйОрдер</Code>
					<Description>Документ: Cash receipt</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CashReceipt</Source>
					<Receiver>DocumentRef.ПриходныйКассовыйОрдер</Receiver>
					<Properties>
						<Property>
							<Code>5</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsCashReceipt"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийПКО"/>
							<ConversionRuleCode>ВидыОперацийПКО                                   </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsCashReceipt.Other Then
	AccType = CommonUse.ObjectAttributeValue(Source.Correspondence, "TypeOfAccount");
	If AccType = Enums.GLAccountsTypes.Loans
		Or AccType = Enums.GLAccountsTypes.LongtermObligations Then
		Value = "РасчетыПоКредитамИЗаймам";
		OCRName = "";
	Endif;
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Disable="true" Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>150</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>31</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsCashReceipt.FromAdvanceHolder
	Or Source.OperationKind = Enums.OperationKindsCashReceipt.LoanRepaymentByEmployee Then
	Value = CommonUse.ObjectAttributeValue(Source.AdvanceHolder, "Ind");
	OCRName = "ФизическиеЛица";
ElsIf Source.OperationKind = Enums.OperationKindsCashReceipt.RetailIncome Then
	Value = CommonUse.ObjectAttributeValue(Source.CashCR, "StructuralUnit");
	OCRName = "Склады";
ElsIf Source.OperationKind = Enums.OperationKindsCashReceipt.RetailIncomeAccrualAccounting Then
	Value = Source.StructuralUnit;
	OCRName = "Склады";
ElsIf Source.OperationKind = Enums.OperationKindsCashReceipt.Other Then
	Empty = True;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>200</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Basis --&gt; Основание</Description>
							<Order>250</Order>
							<Source Name="Basis" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Основание" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Application --&gt; Приложение</Description>
							<Order>350</Order>
							<Source Name="Application" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Приложение" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>AcceptedFrom --&gt; ПринятоОт</Description>
							<Order>400</Order>
							<Source Name="AcceptedFrom" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПринятоОт" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>450</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>500</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
							<Order>550</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>IF Source.OperationKind = Enums.OperationKindsCashReceipt.CurrencyPurchase
	Or Source.OperationKind = Enums.OperationKindsCashReceipt.Other Then
	
	If ValueIsFilled(Source.Item.CorrespondingAccount) Then
		Value = Source.Item.CorrespondingAccount;
	Else
		Account = "";
		Operation =  Source.Correspondence;
		Document = Source;
		Execute(Algorithms.DefineAccountByOperation);
		Value = Account;
	EndIf;
Else
	If Source.OperationKind = Enums.OperationKindsCashReceipt.OtherSettlements Then
		Value = "1361";
	Else
		Value = "";
	EndIf;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>CashCurrency --&gt; ВалютаДокумента</Description>
							<Order>600</Order>
							<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
							<Order>650</Order>
							<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
							<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							<OnExport>ExportObject = True; </OnExport>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>--&gt; СчетКасса</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетКасса" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>
							If Parameters.SettingVariant = "Accounting4" Then
								Expression = "ПланыСчетов.Хозрасчетный.КассаОрганизации";
							Else
								If Source.OperationKind = Enums.OperationKindsCashReceipt.LoanRepaymentByEmployee Then
									Value = "1111";
								Else
									Cancel = True;
								EndIf;
							EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>BasisDocument --&gt; ДокументОснование</Description>
							<Order>750</Order>
							<Source Name="BasisDocument" Kind="Реквизит"/>
							<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							<BeforeExport> If TypeOf(Source.BasisDocument) = Type("DocumentRef.LoanContract") Then
	Cancel = True;
EndIf; </BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>800</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>ReceiptCRNumber --&gt; НомерЧекаККМ</Description>
							<Order>850</Order>
							<Source Name="ReceiptCRNumber" Kind="Реквизит" Type="Число"/>
							<Receiver Name="НомерЧекаККМ" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>--&gt; ВыручкаСНТТ</Description>
							<Order>900</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВыручкаСНТТ" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>If CommonUse.ObjectAttributeValue(Source.CashCR, "CashCRType") = Enums.CashCRTypes.FiscalRegister Then
	Value = False;
Else
	Value = True;
endIf;</BeforeExport>
						</Property>
						<Group>
							<Code>19</Code>
							<Description>PaymentDetails --&gt; РасшифровкаПлатежа</Description>
							<Order>950</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="РасшифровкаПлатежа" Kind="TabularSection"/>
							<BeforeProcessExport>Если Source.OperationKind &lt;&gt; Enums.OperationKindsCashReceipt.FromCustomer
	И Source.OperationKind &lt;&gt; Enums.OperationKindsCashReceipt.FromVendor
	И Source.OperationKind &lt;&gt; Enums.OperationKindsCashReceipt.RetailIncome
	И Source.OperationKind &lt;&gt; Enums.OperationKindsCashReceipt.LoanSettlements
	И Source.OperationKind &lt;&gt; Enums.OperationKindsCashReceipt.RetailIncomeAccrualAccounting Then
	             
	Cancel = True;
EndIf;</BeforeProcessExport>
							<Property>
								<Code>20</Code>
								<Description>VATRate --&gt; СтавкаНДС</Description>
								<Order>50</Order>
								<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
								<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = "БезНДС";	
Else
	Execute(Algorithms.FillTabularSectionVATRate2);
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>VATAmount --&gt; СуммаНДС</Description>
								<Order>100</Order>
								<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
								<BeforeExport>If Source.VATTaxation = Enums.VATTaxationTypes.NotTaxableByVAT
	And Source.PaymentDetails.Count() = 1 Then
	Value = 0;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>PaymentAmount --&gt; СуммаПлатежа</Description>
								<Order>150</Order>
								<Source Name="PaymentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаПлатежа" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>InvoiceForPayment --&gt; СчетНаОплату</Description>
								<Order>200</Order>
								<Source Name="InvoiceForPayment" Kind="Реквизит"/>
								<Receiver Name="СчетНаОплату" Kind="Реквизит" Type="DocumentRef.СчетНаОплатуПокупателю"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>Contract --&gt; ДоговорКонтрагента</Description>
								<Order>250</Order>
								<Source Name="Contract" Kind="Реквизит" Type="CatalogRef.CounterpartyContracts"/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer
		Or Source.OperationKind = Enums.OperationKindsCashReceipt.FromVendor Then
	
	Execute(Algorithms.FormContractStructure);
	
ElsIf Source.OperationKind = Enums.OperationKindsCashReceipt.LoanSettlements Then
	
	LoanContract = Source.LoanContract;
	Execute(Algorithms.FormLoanStructure);
	
Else
	
	Empty = True;
	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Document --&gt; Сделка</Description>
								<Order>300</Order>
								<Source Name="Document" Kind="Реквизит"/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>Multiplicity --&gt; КратностьВзаиморасчетов</Description>
								<Order>350</Order>
								<Source Name="Multiplicity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>ExchangeRate --&gt; КурсВзаиморасчетов</Description>
								<Order>400</Order>
								<Source Name="ExchangeRate" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>SettlementsAmount --&gt; СуммаВзаиморасчетов</Description>
								<Order>450</Order>
								<Source Name="SettlementsAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>--&gt; СпособПогашенияЗадолженности</Description>
								<Order>500</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СпособПогашенияЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.СпособыПогашенияЗадолженности"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
Else
If ValueIsFilled(CollectionObject.Document) Then
	If CollectionObject.AdvanceFlag Then
		Expression = "Перечисления.СпособыПогашенияЗадолженности.НеПогашать";
		
	Else
		Expression = "Перечисления.СпособыПогашенияЗадолженности.ПоДокументу";
	EndIf;
	
Else
	
	Expression = "Перечисления.СпособыПогашенияЗадолженности.Автоматически";
EndIf;
EndIf;
								</BeforeExport>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; СчетУчетаРасчетовСКонтрагентом</Description>
								<Order>550</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовСКонтрагентом" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	AccCur = Constants.AccountingCurrency.Get();
	If Source.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer Then
		If Source.CashCurrency = AccCur Then
			Value = "3311"; //1311
		Else
			Value = "3313"; //1313
		EndIf;
	Else
		If Source.CashCurrency = AccCur Then
			Value = "3311";
		Else
			Value = "3313";
		EndIf;
	EndIf;
Else
	If Source.OperationKind = Enums.OperationKindsCashReceipt.CurrencyPurchase
		Or Source.OperationKind = Enums.OperationKindsCashReceipt.Other Then
		
		If ValueIsFilled(Source.Item.CorrespondingAccount) Then
			Value = Source.Item.CorrespondingAccount;
		Else
			Account = "";
			Operation =  Source.Correspondence;
			Document = Source;
			Execute(Algorithms.DefineAccountByOperation);
			Value = Account;
		EndIf;
		
	ElsIf Source.OperationKind = Enums.OperationKindsCashReceipt.LoanSettlements Then
			Value = "3411";
	Else
		Value = "";	
	EndIf;
EndIf;
					</BeforeExport>
							</Property>
							<Property>
								<Code>34</Code>
								<Description>--&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="СправочникСсылка.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
								<OnExport>ExportObject = True; </OnExport>
								<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
	Value = Source.Item;
	Else
	Cancel = True;
EndIf;							</BeforeExport>
							</Property>
							<Property>
								<Code>36</Code>
								<Description>--&gt; СчетУчетаРасчетовПоАвансам</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетУчетаРасчетовПоАвансам" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>
If Parameters.SettingVariant = "Accounting4" Then
	
	AccCur = Constants.AccountingCurrency.Get();
	If Source.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer Then
		If Source.CashCurrency = AccCur Then
			Value = "3312"; //1312
		Else
			Value = "3314"; //1314
		EndIf;
	Else
		If Source.CashCurrency = AccCur Then
			Value = "3312";
		Else
			Value = "3314";
		EndIf;
	EndIf;
EndIf;
								</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>32</Code>
							<Description>Counterparty --&gt; СубконтоКт1</Description>
							<Order>1050</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="СправочникСсылка.Counterparties"/>
							<Receiver Name="СубконтоКт1" Kind="Реквизит"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Not Source.OperationKind = Enums.OperationKindsCashReceipt.OtherSettlements Then
	Cancel = True;	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>33</Code>
							<Description>--&gt; СубконтоКт2</Description>
							<Order>1100</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СубконтоКт2" Kind="Реквизит"/>
							<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
							<BeforeExport>If  Source.OperationKind = Enums.OperationKindsCashReceipt.OtherSettlements Then
	Value = Source.PaymentDetails[0].Contract; 
Else
	Cancel = True;	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>35</Code>
							<Description>Comment --&gt; Основание</Description>
							<Order>1150</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Основание" Kind="Реквизит" Type="Строка"/>
							<BeforeExport>If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIF</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПлатежноеПоручение</Code>
					<Description>Документ: Payment procedure</Description>
					<Order>250</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.PaymentOrder</Source>
					<Receiver>DocumentRef.ПлатежноеПоручение</Receiver>
					<Properties>
						<Property>
							<Code>4</Code>
							<Description>TransferToBudgetKind --&gt; ВидПеречисленияВБюджет</Description>
							<Order>50</Order>
							<Source Name="TransferToBudgetKind" Kind="Реквизит" Type="ПеречислениеСсылка.BudgetTransferKinds"/>
							<Receiver Name="ВидПеречисленияВБюджет" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыПеречисленийВБюджет"/>
							<ConversionRuleCode>ВидыПеречисленийВБюджет                           </ConversionRuleCode>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>PaymentKind --&gt; ВидПлатежа</Description>
							<Order>100</Order>
							<Source Name="PaymentKind" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ВидПлатежа" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>PayerTIN --&gt; ИННПлательщика</Description>
							<Order>200</Order>
							<Source Name="PayerTIN" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ИННПлательщика" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>PayeeTIN --&gt; КПППолучателя</Description>
							<Order>250</Order>
							<Source Name="PayeeTIN" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="КПППолучателя" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>300</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Counterparty --&gt; Контрагент</Description>
							<Order>350</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>PaymentDestination --&gt; НазначениеПлатежа</Description>
							<Order>400</Order>
							<Source Name="PaymentDestination" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="НазначениеПлатежа" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>450</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>500</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>PaymentPriority --&gt; ОчередностьПлатежа</Description>
							<Order>550</Order>
							<Source Name="PaymentPriority" Kind="Реквизит" Type="Число"/>
							<Receiver Name="ОчередностьПлатежа" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>DateIndicator --&gt; ПоказательДаты</Description>
							<Order>600</Order>
							<Source Name="DateIndicator" Kind="Реквизит" Type="Дата"/>
							<Receiver Name="ПоказательДаты" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>NumberIndicator --&gt; ПоказательНомера</Description>
							<Order>650</Order>
							<Source Name="NumberIndicator" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПоказательНомера" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>BasisIndicator --&gt; ПоказательОснования</Description>
							<Order>700</Order>
							<Source Name="BasisIndicator" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПоказательОснования" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>PeriodIndicator --&gt; ПоказательПериода</Description>
							<Order>750</Order>
							<Source Name="PeriodIndicator" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПоказательПериода" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>TypeIndicator --&gt; ПоказательТипа</Description>
							<Order>800</Order>
							<Source Name="TypeIndicator" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ПоказательТипа" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>850</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>VATRate --&gt; СтавкаНДС</Description>
							<Order>900</Order>
							<Source Name="VATRate" Kind="Реквизит" Type="CatalogRef.VATRates"/>
							<Receiver Name="СтавкаНДС" Kind="Реквизит" Type="ПеречислениеСсылка.СтавкиНДС"/>
							<BeforeExport>Execute(Algorithms.FillDocumentVATRate)</BeforeExport>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>AuthorStatus --&gt; СтатусСоставителя</Description>
							<Order>950</Order>
							<Source Name="AuthorStatus" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="СтатусСоставителя" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>DocumentAmount --&gt; СуммаДокумента</Description>
							<Order>1000</Order>
							<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>VATAmount --&gt; СуммаНДС</Description>
							<Order>1050</Order>
							<Source Name="VATAmount" Kind="Реквизит" Type="Число"/>
							<Receiver Name="СуммаНДС" Kind="Реквизит" Type="Число"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>CounterpartyAccount --&gt; СчетКонтрагента</Description>
							<Order>1100</Order>
							<Source Name="CounterpartyAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетКонтрагента" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>PayerText --&gt; ТекстПлательщика</Description>
							<Order>1150</Order>
							<Source Name="PayerText" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ТекстПлательщика" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>PayeeText --&gt; ТекстПолучателя</Description>
							<Order>1200</Order>
							<Source Name="PayeeText" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="ТекстПолучателя" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>BankAccount --&gt; СчетОрганизации</Description>
							<Order>1250</Order>
							<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="СчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
							<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>--&gt; ПеречислениеВБюджет</Description>
							<Order>1300</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ПеречислениеВБюджет" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Source.OperationKind = Enums.OperationKindsPaymentOrder.TaxTransfer;</BeforeExport>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>--&gt; ВалютаДокумента</Description>
							<Order>1350</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
							<BeforeExport>Value = Source.BankAccount.CashCurrency;</BeforeExport>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>Paid --&gt; Оплачено</Description>
							<Order>1400</Order>
							<Source Name="Paid" Kind="Реквизит" Type="Булево"/>
							<Receiver Name="Оплачено" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>If Parameters.SettingVariant = "Accounting4" Then
								Cancel = True;
							EndIf;
							</BeforeExport>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>--&gt; ВидОперации</Description>
							<Order>1450</Order>
							<Source Name="" Kind="" Type=""/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="EnumRef.ВидыОперацийСписаниеДенежныхСредств"/>
							<BeforeExport>If Not Parameters.SettingVariant = "Accounting4" Then
								Cancel = True;
							EndIf;
							Value = "ПрочееСписание";
							</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Group>
					<Code>CashTransfer</Code>
					<Description>CashTransfer                                      </Description>
					<Order>300</Order>
					<Rule>
						<Code>ПеремещениеДСРасходныйКассовыйОрдер</Code>
						<Description>Документ: Funds movement</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CashTransfer</Source>
						<Receiver>DocumentRef.РасходныйКассовыйОрдер</Receiver>
						<Properties>
							<Property>
								<Code>5</Code>
								<Description>--&gt; ВидОперации</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийРКО"/>
								<BeforeExport>Value = "ВзносНаличнымиВБанк";</BeforeExport>
							</Property>
							<Property Search="true">
								<Code>1</Code>
								<Description>Дата --&gt; Дата</Description>
								<Order>100</Order>
								<Source Name="Date" Kind="Свойство" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>150</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>BasisDocument --&gt; ДокументОснование</Description>
								<Order>200</Order>
								<Source Name="BasisDocument" Kind="Реквизит" Type="DocumentRef.CashTransferPlan"/>
								<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>250</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>300</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>350</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>400</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>DocumentAmount --&gt; СуммаДокумента</Description>
								<Order>450</Order>
								<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>CashCurrency --&gt; ВалютаДокумента</Description>
								<Order>500</Order>
								<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
								<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>BankAccountPayee --&gt; СчетОрганизации</Description>
								<Order>550</Order>
								<Source Name="BankAccountPayee" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="СчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
								<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>600</Order>
								<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							</Property>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>ПеремещениеДССписаниеСРасчетногоСчета</Code>
						<Description>Документ: Funds movement</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CashTransfer</Source>
						<Receiver>DocumentRef.СписаниеСРасчетногоСчета</Receiver>
						<Properties>
							<Property>
								<Code>5</Code>
								<Description>--&gt; ВидОперации</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийСписаниеДенежныхСредств"/>
								<BeforeExport>Value = "ПереводНаДругойСчет";</BeforeExport>
							</Property>
							<Property Search="true">
								<Code>1</Code>
								<Description>Дата --&gt; Дата</Description>
								<Order>100</Order>
								<Source Name="Date" Kind="Свойство" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property Disable="true" Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>150</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>BasisDocument --&gt; ДокументОснование</Description>
								<Order>200</Order>
								<Source Name="BasisDocument" Kind="Реквизит" Type="DocumentRef.CashTransferPlan"/>
								<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>250</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>300</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>350</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>400</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>CashCurrency --&gt; ВалютаДокумента</Description>
								<Order>450</Order>
								<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
								<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>DocumentAmount --&gt; СуммаДокумента</Description>
								<Order>500</Order>
								<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>550</Order>
								<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>BankAccount --&gt; СчетОрганизации</Description>
								<Order>600</Order>
								<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="СчетОрганизации" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
								<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>BankAccountPayee --&gt; СчетКонтрагента</Description>
								<Order>650</Order>
								<Source Name="BankAccountPayee" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="СчетКонтрагента" Kind="Реквизит" Type="CatalogRef.БанковскиеСчета"/>
								<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
							</Property>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>ПеремещениеДСПриходныйКассовыйОрдер</Code>
						<Description>Документ: Funds movement</Description>
						<Order>50</Order>
						<SynchronizeByID>true</SynchronizeByID>
						<Source>DocumentRef.CashTransfer</Source>
						<Receiver>DocumentRef.ПриходныйКассовыйОрдер</Receiver>
						<Properties>
							<Property>
								<Code>5</Code>
								<Description>--&gt; ВидОперации</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийПКО"/>
								<BeforeExport>Value = "ПолучениеНаличныхВБанке";</BeforeExport>
							</Property>
							<Property Search="true">
								<Code>1</Code>
								<Description>Дата --&gt; Дата</Description>
								<Order>100</Order>
								<Source Name="Date" Kind="Свойство" Type="Дата"/>
								<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
							</Property>
							<Property Disable="true" Search="true">
								<Code>2</Code>
								<Description>Номер --&gt; Номер</Description>
								<Order>150</Order>
								<Source Name="Number" Kind="Свойство" Type="Строка"/>
								<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>Company --&gt; Организация</Description>
								<Order>200</Order>
								<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
								<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
								<ConversionRuleCode>Организации                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>DocumentAmount --&gt; СуммаДокумента</Description>
								<Order>250</Order>
								<Source Name="DocumentAmount" Kind="Реквизит" Type="Число"/>
								<Receiver Name="СуммаДокумента" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>300</Order>
								<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
								<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>Проведен --&gt; Проведен</Description>
								<Order>350</Order>
								<Source Name="Posted" Kind="Свойство" Type="Булево"/>
								<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>Comment --&gt; Комментарий</Description>
								<Order>400</Order>
								<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
								<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>BasisDocument --&gt; ДокументОснование</Description>
								<Order>450</Order>
								<Source Name="BasisDocument" Kind="Реквизит" Type="DocumentRef.CashTransferPlan"/>
								<Receiver Name="ДокументОснование" Kind="Реквизит"/>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>CashCurrency --&gt; ВалютаДокумента</Description>
								<Order>500</Order>
								<Source Name="CashCurrency" Kind="Реквизит" Type="CatalogRef.Currencies"/>
								<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="CatalogRef.Валюты"/>
								<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>Item --&gt; СтатьяДвиженияДенежныхСредств</Description>
								<Order>550</Order>
								<Source Name="Item" Kind="Реквизит" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="СтатьяДвиженияДенежныхСредств" Kind="Реквизит" Type="CatalogRef.СтатьиДвиженияДенежныхСредств"/>
								<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>BankAccount --&gt; Контрагент</Description>
								<Order>600</Order>
								<Source Name="BankAccount" Kind="Реквизит" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="Контрагент" Kind="Реквизит"/>
							</Property>
						</Properties>
						<Values/>
					</Rule>
				</Group>
			</Group>
			<Group>
				<Code>Production</Code>
				<Description>Production                                        </Description>
				<Order>500</Order>
				<Rule>
					<Code>ТребованиеНакладная</Code>
					<Description>Документ: Inventory movement</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryTransfer</Source>
					<Receiver>DocumentRef.ТребованиеНакладная</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnitPayee --&gt; ПодразделениеЗатрат</Description>
							<Order>350</Order>
							<Source Name="StructuralUnitPayee" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>--&gt; СчетаУчетаЗатратВТаблице</Description>
							<Order>400</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетаУчетаЗатратВТаблице" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Истина;</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>--&gt; Контрагент</Description>
							<Order>450</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Контрагент" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If ValueIsFilled(Source.BasisDocument) 
	And TypeOf(Source.BasisDocument) = Type("DocumentRef.SupplierInvoice") Then
	
	Value = CommonUse.ObjectAttributeValue(Source.BasisDocument, "Counterparty");
	
Else
	
	Cancel = True;
	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>500</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>11</Code>
							<Description>Inventory --&gt; Материалы</Description>
							<Order>550</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Материалы" Kind="TabularSection"/>
							<BeforeProcessExport>InventoryTable = Source.Inventory.UnloadColumns();
SourceTable = Source.Inventory;

For Each TabRow In SourceTable Do	
	If Not ValueIsFilled(TabRow.Batch)
		Or (ValueIsFilled(TabRow.Batch)
		   And TabRow.Batch.Status &lt;&gt; Enums.BatchStatuses.CommissionMaterials) Then		
		NewRow = InventoryTable.Add();
		FillPropertyValues(NewRow, TabRow);	
	EndIf;	
EndDo;

ObjectsCollection = InventoryTable;</BeforeProcessExport>
							<Property>
								<Code>12</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Выполнить(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; Количество</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>Batch --&gt; ТоварНаКомиссии</Description>
								<Order>300</Order>
								<Source Name="Batch" Kind="Реквизит" Type="CatalogRef.ProductsAndServicesBatches"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварНаКомиссии</ParameterForTransferName>
								<BeforeExport>If ValueIsFilled(CollectionObject.Batch)
   And CollectionObject.Batch.Status = Enums.BatchStatuses.ProductsOnCommission Then
	Value = True;
Иначе
	Value = False;
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>Value = CollectionObject.ProductsAndServices.ProductsAndServicesCategory;</BeforeExport>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>--&gt; ПодразделениеЗатрат</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
								<BeforeExport>Value = Source.StructuralUnitPayee;</BeforeExport>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; СчетЗатрат</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СчетЗатрат" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
								<BeforeExport>Value = Source.GLExpenseAccount.Code;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>20</Code>
							<Description>Inventory --&gt; МатериалыЗаказчика</Description>
							<Order>600</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="МатериалыЗаказчика" Kind="TabularSection"/>
							<BeforeProcessExport>InventoryTable = Source.Inventory.UnloadColumns();
SourceTable = Source.Inventory;

For Each TabRow In SourceTable Do	
	If ValueIsFilled(TabRow.Batch)
		   And TabRow.Batch.Status = Enums.BatchStatuses.CommissionMaterials Then
		NewRow = InventoryTable.Add();
		FillPropertyValues(NewRow, TabRow);	
	EndIf;	
EndDo;

ObjectsCollection = InventoryTable;</BeforeProcessExport>
							<Property>
								<Code>21</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="MeasurementUnit" Kind="Реквизит"/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU2);</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>Quantity --&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>--&gt; Количество</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor2);</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>CustomerOrder --&gt; Контрагент</Description>
								<Order>300</Order>
								<Source Name="CustomerOrder" Kind="Реквизит" Type="DocumentRef.CustomerOrder"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>Контрагент</ParameterForTransferName>
								<BeforeExport>If ValueIsFilled(CollectionObject.Batch)
   And ValueIsFilled(CollectionObject.Batch.BatchOwner) Then
   Value = CollectionObject.Batch.BatchOwner;
ElsIf ValueIsFilled(Source.CustomerOrder) Then
   Value = Source.CustomerOrder.Counterparty;
ElsIf ValueIsFilled(CollectionObject.CustomerOrder) Then
   Value = CollectionObject.CustomerOrder.Counterparty;
Else
   Value = Undefined;
EndIf;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ОтчетПроизводстваЗаСмену</Code>
					<Description>Документ: Production</Description>
					<Order>100</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryAssembly</Source>
					<Receiver>DocumentRef.ОтчетПроизводстваЗаСмену</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; ПодразделениеЗатрат</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
							<BeforeExport>Cancel = Source.StructuralUnit.StructuralUnitType &lt;&gt; Enums.StructuralUnitsTypes.Department;</BeforeExport>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>ProductsStructuralUnit --&gt; Склад</Description>
							<Order>350</Order>
							<Source Name="ProductsStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>Value = Source.InventoryStructuralUnit;
StructuralUnit = Value;
Выполнить(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>InventoryStructuralUnit --&gt; Склад</Description>
							<Order>400</Order>
							<Source Name="InventoryStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = Source.InventoryStructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>450</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>10</Code>
							<Description>Products --&gt; Продукция</Description>
							<Order>500</Order>
							<Source Name="Products" Kind="TabularSection"/>
							<Receiver Name="Продукция" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = New Query;
Query.SetParameter("Document", Source.Ref);
Query.SetParameter("Data", Source.Date);
Query.SetParameter("NatCurrency", Parameters.NationalCurrency);
Query.SetParameter("AccCurrency", Parameters.AccountingCurrency);
Query.Text =
"SELECT
|	MAX(Products.LineNumber) AS НомерСтроки,
|	Products.Ref AS Документ,
|	Products.ProductsAndServices AS Номенклатура,
|	Products.ProductsAndServices.ProductsAndServicesCategory AS НоменклатурнаяГруппа,
|	Products.Specification AS Спецификация,
|	SUM(Products.Quantity) AS КоличествоМест,
|	SUM(CASE
|			WHEN VALUETYPE(Products.MeasurementUnit) = TYPE(Справочник.UOM)
|					AND Products.MeasurementUnit.Factor &gt; 0
|				THEN Products.Quantity * Products.MeasurementUnit.Factor
|			ELSE Products.Quantity
|		END) AS Количество,
|	CASE
|		WHEN Products.MeasurementUnit REFS Catalog.UOM
|			THEN Products.ProductsAndServices.MeasurementUnit
|		ELSE Products.MeasurementUnit
|	END AS ЕдиницаИзмерения,
|	CASE
|		WHEN Products.MeasurementUnit REFS Catalog.UOM
|			THEN Products.MeasurementUnit.Factor
|		ELSE 1
|	END AS Коэффициент
|INTO ВременнаяТаблицаПродукция
|FROM
|	Document.InventoryAssembly.Products AS Products
|WHERE
|Products.Ref = &amp;Document
|
|GROUP BY
|	Products.Specification,
|	Products.ProductsAndServices,
|	Products.Ref,
|	CASE
|		WHEN Products.MeasurementUnit REFS Catalog.UOM
|			THEN Products.MeasurementUnit.Factor
|		ELSE 1
|	END,
|	CASE
|		WHEN Products.MeasurementUnit REFS Catalog.UOM
|			THEN Products.ProductsAndServices.MeasurementUnit
|		ELSE Products.MeasurementUnit
|	END,
|	Products.ProductsAndServices.ProductsAndServicesCategory
|;
|
|////////////////////////////////////////////////////////////////////////////////
|SELECT ALLOWED
|	Inventory.Recorder AS Регистратор,
|	Inventory.ProductsAndServicesCorr AS Продукция,
|	Inventory.SpecificationCorr AS СпецификацияПродукции,
|	SUM(Inventory.Amount * CASE
|			WHEN &amp;NatCurrency &lt;&gt; &amp;AccCurrency
|				THEN CASE
|						WHEN ISNULL(CurrencyRatesPrice.Multiplicity, 0) &gt; 0
|								AND ISNULL(CurrencyRatesPrice.ExchangeRate, 0) &gt; 0
|								AND ISNULL(CurrencyRates.Multiplicity, 0) &gt; 0
|								AND ISNULL(CurrencyRates.ExchangeRate, 0) &gt; 0
|							THEN CurrencyRatesPrice.ExchangeRate * CurrencyRates.Multiplicity / (CurrencyRates.ExchangeRate * CurrencyRatesPrice.Multiplicity)
|						ELSE 0
|					END
|			ELSE 1
|		END) AS СуммаЗатрат
|INTO ВременнаяТаблицаЗатраты
|FROM
|	AccumulationRegister.Inventory AS Inventory
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Data, Currency = &amp;AccCurrency) AS CurrencyRatesPrice
|		ON (TRUE)
|		LEFT JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Data, Currency = &amp;NatCurrency) AS CurrencyRates
|		ON (TRUE)
|WHERE
|	Inventory.Recorder = &amp;Document
|	AND Inventory.ProductionExpenses
|	AND Inventory.RecordType = VALUE(AccumulationRecordType.Expense)
|
|GROUP BY
|	Inventory.ProductsAndServicesCorr,
|	Inventory.SpecificationCorr,
|	Inventory.Recorder
|;
|
|////////////////////////////////////////////////////////////////////////////////
|SELECT
|	ВременнаяТаблицаПродукция.Номенклатура AS Номенклатура,
|	ВременнаяТаблицаПродукция.Спецификация AS Спецификация,
|	ВременнаяТаблицаПродукция.КоличествоМест AS КоличествоМест,
|	ВременнаяТаблицаПродукция.Количество AS Количество,
|	CASE
|		WHEN ВременнаяТаблицаЗатраты.СуммаЗатрат IS NULL
|			THEN 0
|		ELSE ВременнаяТаблицаЗатраты.СуммаЗатрат / ВременнаяТаблицаПродукция.Количество
|	END AS ПлановаяСтоимость,
|	ВременнаяТаблицаЗатраты.СуммаЗатрат AS СуммаПлановая,
|	ВременнаяТаблицаПродукция.НоменклатурнаяГруппа AS НоменклатурнаяГруппа,
|	ВременнаяТаблицаПродукция.ЕдиницаИзмерения AS ЕдиницаИзмерения,
|	ВременнаяТаблицаПродукция.Коэффициент AS Коэффициент
|FROM
|	ВременнаяТаблицаПродукция AS ВременнаяТаблицаПродукция
|		LEFT JOIN ВременнаяТаблицаЗатраты AS ВременнаяТаблицаЗатраты
|		ON ВременнаяТаблицаПродукция.Документ = ВременнаяТаблицаЗатраты.Регистратор
|			AND ВременнаяТаблицаПродукция.Номенклатура = ВременнаяТаблицаЗатраты.Продукция
|			AND ВременнаяТаблицаПродукция.Спецификация = ВременнаяТаблицаЗатраты.СпецификацияПродукции
|
|ORDER BY
|	ВременнаяТаблицаПродукция.НомерСтроки";

IF Source.OperationKind = Enums.OperationKindsInventoryAssembly.Disassembly Then
	Query.Text = StrReplace(Query.Text, "Document.InventoryAssembly.Products", "Document.InventoryAssembly.Inventory");
EndIf;

ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>11</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; Спецификация</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Спецификация" Kind="Реквизит" Type="CatalogRef.СпецификацииНоменклатуры"/>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor);</BeforeExport>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>Value = CollectionObject.НоменклатурнаяГруппа;</BeforeExport>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>--&gt; ПлановаяСтоимость</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ПлановаяСтоимость" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>--&gt; СуммаПлановая</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаПлановая" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
						<Group>
							<Code>20</Code>
							<Description>Inventory --&gt; Материалы</Description>
							<Order>550</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Материалы" Kind="TabularSection"/>
							<BeforeProcessExport>
Execute(Algorithms.FormMaterialAllocationTable);</BeforeProcessExport>
							<Property>
								<Code>21</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>--&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor);</BeforeExport>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>If Not ValueIsFilled(CollectionObject.НоменклатурнаяГруппа) Then
	If Source.Products.Count() = 1 Then
		Value = CommonUse.ObjectAttributesValues(Source.Products[0].ProductsAndServices, "ProductsAndServicesCategory");
	Else
		Value = CommonUse.ObjectAttributesValues(CollectionObject.Номенклатура, "ProductsAndServicesCategory");
	EndIf;
EndIf;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>27</Code>
							<Description>Disposals --&gt; ВозвратныеОтходы</Description>
							<Order>600</Order>
							<Source Name="Disposals" Kind="TabularSection"/>
							<Receiver Name="ВозвратныеОтходы" Kind="TabularSection"/>
							<Property>
								<Code>28</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>30</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>If Not ValueIsFilled(Value) Then
	If Source.Products.Count() = 1 Then
		Value = CommonUse.ObjectAttributeValue(Source.Products[0].ProductsAndServices, "ProductsAndServicesCategory");
	Else
		Value = CommonUse.ObjectAttributeValue(CollectionObject.ProductsAndServices, "ProductsAndServicesCategory");
	EndIf;
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>31</Code>
								<Description>Batch --&gt; ТоварВПереработке</Description>
								<Order>200</Order>
								<Source Name="Batch" Kind="Реквизит" Type="CatalogRef.ProductsAndServicesBatches"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ТоварВПереработке</ParameterForTransferName>
								<BeforeExport>If ValueIsFilled(CollectionObject.Batch)                                                       
   And CollectionObject.Batch.Status= Enums.BatchStatuses.CommissionMaterials Then
	Value = True;
Else
	Value = False;
EndIf;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПеремещениеПродукции</Code>
					<Description>Документ: Production</Description>
					<Order>150</Order>
					<Source>DocumentRef.InventoryAssembly</Source>
					<Receiver>DocumentRef.ПеремещениеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<OnExport>Prefix = "PM";
Value = Left(Source.Number, 5) + Prefix+ Mid(Source.Number, 8);</OnExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>InventoryStructuralUnit --&gt; СкладОтправитель</Description>
							<Order>300</Order>
							<Source Name="InventoryStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладОтправитель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = Source.InventoryStructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>ProductsStructuralUnit --&gt; СкладПолучатель</Description>
							<Order>350</Order>
							<Source Name="ProductsStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладПолучатель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = Source.ProductsStructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>--&gt; Товары</Description>
							<Order>400</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = New Query;
Query.SetParameter("Ref", Source.Ref);

Query.Text =
"SELECT
|	СборкаЗапасовПродукция.ProductsAndServices AS Номенклатура,
|	СборкаЗапасовПродукция.MeasurementUnit AS ЕдиницаИзмерения,
|	SUM(СборкаЗапасовПродукция.Quantity) AS КоличествоМест,
|	CASE
|		WHEN VALUETYPE(СборкаЗапасовПродукция.MeasurementUnit) = TYPE(Справочник.UOM)
|			THEN СборкаЗапасовПродукция.MeasurementUnit.Factor
|		ELSE 1
|	END AS Коэффициент,
|	SUM(CASE
|			WHEN VALUETYPE(СборкаЗапасовПродукция.MeasurementUnit) = TYPE(Справочник.UOM)
|					AND СборкаЗапасовПродукция.MeasurementUnit.Factor &gt; 0
|				THEN СборкаЗапасовПродукция.Quantity * СборкаЗапасовПродукция.MeasurementUnit.Factor
|			ELSE СборкаЗапасовПродукция.Quantity
|		END) AS Количество,
|	MAX(СборкаЗапасовПродукция.LineNumber) AS НомерСтроки
|FROM
|	Document.InventoryAssembly.Products AS СборкаЗапасовПродукция
|WHERE
|	СборкаЗапасовПродукция.Ref = &amp;Ref
|
|GROUP BY
|	СборкаЗапасовПродукция.ProductsAndServices,
|	СборкаЗапасовПродукция.MeasurementUnit,
|	CASE
|		WHEN VALUETYPE(СборкаЗапасовПродукция.MeasurementUnit) = TYPE(Справочник.UOM)
|			THEN СборкаЗапасовПродукция.MeasurementUnit.Factor
|		ELSE 1
|	END
|
|ORDER BY
|	НомерСтроки";

ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>9</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПеремещениеОтходовУдал</Code>
					<Description>Документ: Production</Description>
					<Order>150</Order>
					<Source>DocumentRef.InventoryAssembly</Source>
					<Receiver>DocumentRef.ПеремещениеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<OnExport>Prefix = "WM";
Value = Left(Source.Number, 5) + Prefix+ Mid(Source.Number, 8);</OnExport>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>150</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПеремещениеПродукцииУдал</Code>
					<Description>Документ: Production</Description>
					<Order>150</Order>
					<Source>DocumentRef.InventoryAssembly</Source>
					<Receiver>DocumentRef.ПеремещениеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<OnExport>Prefix = "PM";
Value = Left(Source.Number, 5) + Prefix+ Mid(Source.Number, 8);</OnExport>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>--&gt; ПометкаУдаления</Description>
							<Order>150</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>--&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПеремещениеОтходов</Code>
					<Description>Документ: Production</Description>
					<Order>150</Order>
					<Source>DocumentRef.InventoryAssembly</Source>
					<Receiver>DocumentRef.ПеремещениеТоваров</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<OnExport>Prefix = "WM";
Value = Left(Source.Number, 5) + Prefix+ Mid(Source.Number, 8);</OnExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>InventoryStructuralUnit --&gt; СкладОтправитель</Description>
							<Order>300</Order>
							<Source Name="InventoryStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладОтправитель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = source.InventoryStructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>DisposalsStructuralUnit --&gt; СкладПолучатель</Description>
							<Order>350</Order>
							<Source Name="DisposalsStructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="СкладПолучатель" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = Source.DisposalsStructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>--&gt; Товары</Description>
							<Order>400</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Товары" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = Новый Query;
Query.SetParameter("Ref", Source.Ref);

Query.Text =
"SELECT
|	Products.ProductsAndServices AS Номенклатура,
|	Products.MeasurementUnit AS ЕдиницаИзмерения,
|	SUM(Products.Quantity) AS КоличествоМест,
|	CASE
|		WHEN VALUETYPE(Products.MeasurementUnit) = TYPE(Справочник.UOM)
|			THEN Products.MeasurementUnit.Factor
|		ELSE 1
|	END AS Коэффициент,
|	SUM(CASE
|			WHEN VALUETYPE(Products.MeasurementUnit) = TYPE(Справочник.UOM)
|					AND Products.MeasurementUnit.Factor &gt; 0
|				THEN Products.Quantity * Products.MeasurementUnit.Factor
|			ELSE Products.Quantity
|		END) AS Количество,
|	MAX(Products.LineNumber) AS НомерСтроки
|FROM
|	Document.InventoryAssembly.Disposals AS Products
|WHERE
|	Products.Ref = &amp;Ref
|
|GROUP BY
|	Products.LineNumber,
|	Products.ProductsAndServices,
|	Products.MeasurementUnit,
|	CASE
|		WHEN VALUETYPE(Products.MeasurementUnit) = TYPE(Справочник.UOM)
|			THEN Products.MeasurementUnit.Factor
|		ELSE 1
|	END
|
|ORDER BY
|	LineNumber";
			   
ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>9</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Количество</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ПередачаМатериаловВЭксплуатацию</Code>
					<Description>Документ: Inventory movement</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryTransfer</Source>
					<Receiver>DocumentRef.ПередачаМатериаловВЭксплуатацию</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnitPayee --&gt; Местонахождение</Description>
							<Order>300</Order>
							<Source Name="StructuralUnitPayee" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Местонахождение" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>350</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>400</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>9</Code>
							<Description>Inventory --&gt; Спецодежда</Description>
							<Order>450</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Спецоснастка" Kind="TabularSection"/>
							<BeforeExport>
								If Parameters.SettingVariant = "Accounting4" Then
									Cancel = True;
								EndIf;
							</BeforeExport>
							<Property>
								<Code>10</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
						<Group>
							<Code>13</Code>
							<Description>Inventory --&gt; ИнвентарьИХозяйственныеПринадлежности</Description>
							<Order>500</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="ИнвентарьИХозяйственныеПринадлежности" Kind="TabularSection"/>
							<BeforeExport>If Not Parameters.SettingVariant = "Accounting4" Then
	Cancel = True;
EndIf;</BeforeExport>
							<Property>
								<Code>14</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="СправочникСсылка.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="СправочникСсылка.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; ФизЛицо</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ФизЛицо" Kind="Реквизит" Type="СправочникСсылка.ФизическиеЛица"/>
								<BeforeExport>Value = Source.StructuralUnit.FRP;</BeforeExport>
								<ConversionRuleCode>ФизическиеЛица                                      </ConversionRuleCode>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>СписаниеМатериаловИзЭксплуатации</Code>
					<Description>Документ: Inventory write-off</Description>
					<Order>250</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryWriteOff</Source>
					<Receiver>DocumentRef.СписаниеМатериаловИзЭксплуатации</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>100</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>150</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>200</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>300</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnit --&gt; ПодразделениеОрганизации</Description>
							<Order>350</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>Inventory --&gt; Спецодежда</Description>
							<Order>400</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Спецодежда" Kind="TabularSection"/>
							<Property>
								<Code>9</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>--&gt; ФизЛицо</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ФизЛицо" Kind="Реквизит" Type="CatalogRef.ФизическиеЛица"/>
								<BeforeExport>Value = Source.StructuralUnit.FRP;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ВозвратМатериаловИзЭксплуатации</Code>
					<Description>Документ: Inventory movement</Description>
					<Order>300</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.InventoryTransfer</Source>
					<Receiver>DocumentRef.ВозвратМатериаловИзЭксплуатации</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; ПодразделениеОрганизации</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="CatalogRef.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnitPayee --&gt; Склад</Description>
							<Order>350</Order>
							<Source Name="StructuralUnitPayee" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>400</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Group>
							<Code>9</Code>
							<Description>Inventory --&gt; Спецодежда</Description>
							<Order>450</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Спецоснастка" Kind="TabularSection"/>
							<Property>
								<Code>10</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>50</Order>
								<Source Name="Quantity" Kind="Реквизит" Type="Число"/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity2);</BeforeExport>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>100</Order>
								<Source Name="ProductsAndServices" Kind="Реквизит" Type="CatalogRef.ProductsAndServices"/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>РаспределениеМатериальныхЗатрат</Code>
					<Description>Документ: Cost allocation</Description>
					<Order>350</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.CostAllocation</Source>
					<Receiver>DocumentRef.ТребованиеНакладная</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<OnExport>Prefix = "CA";
Value = Left(Source.Number, 5) + Prefix + Mid(Source.Number, 8);</OnExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>250</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>StructuralUnit --&gt; Склад</Description>
							<Order>300</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="CatalogRef.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="CatalogRef.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
							<BeforeExport>
StructuralUnit = Source.StructuralUnit;
Execute(Algorithms.DefineOCRNameForStructuralUnit);</BeforeExport>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>350</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>--&gt; СчетаУчетаЗатратВТаблице</Description>
							<Order>400</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетаУчетаЗатратВТаблице" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Истина;</BeforeExport>
						</Property>
						<Group>
							<Code>9</Code>
							<Description>Inventory --&gt; Материалы</Description>
							<Order>450</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Материалы" Kind="TabularSection"/>
							<BeforeProcessExport>
Query = New Query;
Query.Text =
"SELECT
|	Inventory.ProductsAndServices AS Номенклатура,
|	SUM(InventoryDistribution.Quantity) AS Количество,
|	SUM(InventoryDistribution.Quantity) AS КоличествоМест,
|	Inventory.MeasurementUnit AS ЕдиницаИзмерения,
|	MAX(ISNULL(Inventory.MeasurementUnit.Factor, 1)) AS Коэффициент,
|	InventoryDistribution.ProductsAndServices.ProductsAndServicesCategory AS НоменклатурнаяГруппа,
|	MAX(InventoryDistribution.LineNumber) AS НомерСтроки
|FROM
|	Document.CostAllocation.Inventory AS Inventory
|		INNER JOIN Document.CostAllocation.InventoryDistribution AS InventoryDistribution
|		ON (Inventory.ConnectionKey = InventoryDistribution.ConnectionKey)
|			AND (Inventory.Ref = InventoryDistribution.Ref)
|WHERE
|	Inventory.Ref = &amp;Ref
|	AND InventoryDistribution.Ref = &amp;Ref
|
|GROUP BY
|	Inventory.ProductsAndServices,
|	Inventory.MeasurementUnit,
|	InventoryDistribution.ProductsAndServices.ProductsAndServicesCategory
|
|ORDER BY
|	НомерСтроки";

Query.SetParameter("Ref", Source.Ref);
ObjectsCollection = Query.Execute().Unload();</BeforeProcessExport>
							<Property>
								<Code>10</Code>
								<Description>--&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="CatalogRef.Номенклатура"/>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>--&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>
Execute(Algorithms.FillTabularSectionQuantity);</BeforeExport>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>--&gt; КоличествоМест</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КоличествоМест" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; ЕдиницаИзмерения</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="CatalogRef.КлассификаторЕдиницИзмерения"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionMU);</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; Коэффициент</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Коэффициент" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Execute(Algorithms.FillTabularSectionFactor);</BeforeExport>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="CatalogRef.НоменклатурныеГруппы"/>
								<BeforeExport>If Not ValueIsFilled(CollectionObject.НоменклатурнаяГруппа) Then
	Value = CommonUse.ObjectAttributeValue(CollectionObject.Номенклатура, "ProductsAndServicesCategory");
EndIF;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ТребованиеНакладнаяПроизводство</Code>
					<Description>Документ: Production</Description>
					<Order>400</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>ДокументСсылка.InventoryAssembly</Source>
					<Receiver>ДокументСсылка.ТребованиеНакладная</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Date"/>
							<Receiver Name="Дата" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Номер" Kind="Свойство" Type="Строка"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>ПометкаУдаления --&gt; ПометкаУдаления</Description>
							<Order>150</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="ПометкаУдаления" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Проведен" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Реквизит" Type="СправочникСсылка.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="СправочникСсылка.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>InventoryStructuralUnit --&gt; Склад</Description>
							<Order>300</Order>
							<Source Name="InventoryStructuralUnit" Kind="Реквизит" Type="СправочникСсылка.StructuralUnits"/>
							<Receiver Name="Склад" Kind="Реквизит" Type="СправочникСсылка.Склады"/>
							<ConversionRuleCode>Склады                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>StructuralUnit --&gt; ПодразделениеОрганизации</Description>
							<Order>350</Order>
							<Source Name="StructuralUnit" Kind="Реквизит" Type="СправочникСсылка.StructuralUnits"/>
							<Receiver Name="ПодразделениеОрганизации" Kind="Реквизит" Type="СправочникСсылка.ПодразделенияОрганизаций"/>
							<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
						</Property>
						<Group>
							<Code>8</Code>
							<Description>Inventory --&gt; Материалы</Description>
							<Order>400</Order>
							<Source Name="Inventory" Kind="TabularSection"/>
							<Receiver Name="Материалы" Kind="TabularSection"/>
							<BeforeProcessExport>Query = New Query;
Query.Text = 
"SELECT
|	InventoryAssemblyInventoryDistribution.ProductsAndServices AS ProductsAndServices,
|	InventoryAssemblyInventoryDistribution.MeasurementUnit AS MeasurementUnit,
|	InventoryAssemblyInventoryDistribution.Quantity AS Quantity,
|	InventoryAssemblyProducts.ProductsAndServices.ProductsAndServicesCategory AS ProductsAndServicesCategory
|FROM
|	Document.InventoryAssembly.InventoryDistribution AS InventoryAssemblyInventoryDistribution
|		LEFT JOIN Document.InventoryAssembly.Products AS InventoryAssemblyProducts
|		ON (InventoryAssemblyInventoryDistribution.ConnectionKeyProduct = InventoryAssemblyProducts.ConnectionKey)
|WHERE
|	InventoryAssemblyInventoryDistribution.Ref = &amp;Ref
|	AND InventoryAssemblyProducts.Ref = &amp;Ref";
Query.SetParameter("Ref", Source.Ref);
QueryResult = Query.Execute();
ObjectsCollection = QueryResult.Unload();
							</BeforeProcessExport>
							<Property>
								<Code>9</Code>
								<Description>ProductsAndServices --&gt; Номенклатура</Description>
								<Order>50</Order>
								<Source Name="" Kind="" Type=""/>
								<Receiver Name="Номенклатура" Kind="Реквизит" Type="СправочникСсылка.Номенклатура"/>
								<BeforeExport> Value = CollectionObject.ProductsAndServices; </BeforeExport>
								<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>Quantity --&gt; Количество</Description>
								<Order>100</Order>
								<Source Name="" Kind="" Type=""/>
								<Receiver Name="Количество" Kind="Реквизит" Type="Число"/>
								<BeforeExport>Value = CollectionObject.Quantity;</BeforeExport>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>MeasurementUnit --&gt; ЕдиницаИзмерения</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ЕдиницаИзмерения" Kind="Реквизит" Type="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
								<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
								<BeforeExport>Value = CollectionObject.MeasurementUnit;</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; ПодразделениеЗатрат</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ПодразделениеЗатрат" Kind="Реквизит" Type="СправочникСсылка.ПодразделенияОрганизаций"/>
								<ConversionRuleCode>ПодразделенияОрганизаций                          </ConversionRuleCode>
								<BeforeExport>Value = Source.StructuralUnit; </BeforeExport>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; НоменклатурнаяГруппа</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="НоменклатурнаяГруппа" Kind="Реквизит" Type="СправочникСсылка.НоменклатурныеГруппы"/>
								<ConversionRuleCode>НоменклатурныеГруппы                              </ConversionRuleCode>
								<BeforeExport>
Value = CollectionObject.ProductsAndServicesCategory;
</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>12</Code>
							<Description>--&gt; СчетаУчетаЗатратВТаблице</Description>
							<Order>450</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетаУчетаЗатратВТаблице" Kind="Реквизит" Type="Булево"/>
							<BeforeExport>Value = Истина;</BeforeExport>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>--&gt; СчетЗатрат</Description>
							<Order>500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="СчетЗатрат" Kind="Реквизит" Type="ПланСчетовСсылка.Хозрасчетный"/>
							<BeforeExport>Value = 1541;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Group>
				<Code>Settlements</Code>
				<Description>Settlements                                       </Description>
				<Order>550</Order>
				<Rule>
					<Code>КорректировкаДолга</Code>
					<Description>Документ: Debt adjustment</Description>
					<Order>50</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.Netting</Source>
					<Receiver>DocumentRef.КорректировкаДолга</Receiver>
					<Properties>
						<Property>
							<Code>30</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>40</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="Enums.OperationKindsNetting"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийКорректировкаДолга"/>
							<ConversionRuleCode>ВидыОперацийКорректировкаДолга                    </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<BeforeExport>Value = 	Лев(Source.Номер, 5) + "D" + Mid(Source.Номер, 7);</BeforeExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>300</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>CounterpartySource --&gt; КонтрагентДебитор</Description>
							<Order>350</Order>
							<Source Name="CounterpartySource" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="КонтрагентДебитор" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment Then
	Value = Source.Counterparty;	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Counterparty --&gt; КонтрагентКредитор</Description>
							<Order>400</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="КонтрагентКредитор" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAdjustment 
	Or Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment Then
	
	Empty = True;	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>--&gt; ВидАвансаЗадолженности</Description>
							<Order>450</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВидАвансаЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыАвансаЗадолженности"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAdjustment
	Or Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	Value = "ЗадолженностьПокупателя";	
ElsIf Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment
	Or Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	Value = "ЗадолженностьПоставщику";	
Else
	Value = "";	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>--&gt; ТипАвансаЗадолженности</Description>
							<Order>500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ТипАвансаЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыЗадолженности"/>
							<BeforeExport>Value = "СамогоКонтрагента";</BeforeExport>
						</Property>
						<Group>
							<Code>12</Code>
							<Description>Debitor --&gt; ДебиторскаяЗадолженность</Description>
							<Order>600</Order>
							<Source Name="Debitor" Kind="TabularSection"/>
							<Receiver Name="ДебиторскаяЗадолженность" Kind="TabularSection"/>
							<BeforeProcessExport>
If Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	Cancel = True;
Else
	AdvanceFlag = False;
	Execute(Algorithms.FormDebtTabSection);
EndIf;
							</BeforeProcessExport>
							<Property>
								<Code>13</Code>
								<Description>--&gt; ДоговорКонтрагента</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								
								<BeforeExport>
TabSecDesc = "Дебитор";
Execute(Algorithms.FormNettingContract);</BeforeExport>
<OnExport>ExportObject = True; </OnExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; Сделка</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; СуммаВзаиморасчетов</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>--&gt; КурсВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>--&gt; КратностьВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>--&gt; КорДоговорКонтрагента</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КорДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	TabSecDesc = "";
	Execute(Algorithms.FormNettingContract);
Else
	Empty = True;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>--&gt; ПризнакАванса</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПризнакАванса</ParameterForTransferName>
								<BeforeExport>Value = Ложь;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>21</Code>
							<Description>Creditor --&gt; КредиторскаяЗадолженность</Description>
							<Order>650</Order>
							<Source Name="Creditor" Kind="TabularSection"/>
							<Receiver Name="КредиторскаяЗадолженность" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	Cancel = True;
Else
	AdvanceFlag = False;
	Execute(Algorithms.FormCredTabSection);
EndIf;</BeforeProcessExport>
							<Property>
								<Code>22</Code>
								<Description>--&gt; ДоговорКонтрагента</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>
TabSecDesc = "Кредитор";
Execute(Algorithms.FormNettingContract);
</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>--&gt; Сделка</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>--&gt; СуммаВзаиморасчетов</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>--&gt; КурсВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; КратностьВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>--&gt; КорДоговорКонтрагента</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КорДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	TabSecDesc = "";
	Execute(Algorithms.FormNettingContract);
Else
	Empty = True;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>--&gt; ПризнакАванса</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПризнакАванса</ParameterForTransferName>
								<BeforeExport>Value = False;</BeforeExport>
							</Property>
						</Group>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>КорректировкаДолгаАванс</Code>
					<Description>Документ: Debt adjustment</Description>
					<Order>100</Order>
					<Source>DocumentRef.Netting</Source>
					<Receiver>DocumentRef.КорректировкаДолга</Receiver>
					<Properties>
						<Property>
							<Code>29</Code>
							<Description>OperationKind --&gt; ВидОперации</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Реквизит" Type="ПеречислениеСсылка.OperationKindsNetting"/>
							<Receiver Name="ВидОперации" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыОперацийКорректировкаДолга"/>
							<ConversionRuleCode>ВидыОперацийКорректировкаДолга                    </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<BeforeExport>Value = 	Лев(Source.Номер, 5) + "A" + Mid(Source.Номер, 7);</BeforeExport>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Company --&gt; Организация</Description>
							<Order>150</Order>
							<Source Name="Company" Kind="Реквизит" Type="CatalogRef.Companies"/>
							<Receiver Name="Организация" Kind="Реквизит" Type="CatalogRef.Организации"/>
							<ConversionRuleCode>Организации                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Comment --&gt; Комментарий</Description>
							<Order>300</Order>
							<Source Name="Comment" Kind="Реквизит" Type="Строка"/>
							<Receiver Name="Комментарий" Kind="Реквизит" Type="Строка"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>CounterpartySource --&gt; КонтрагентКредитор</Description>
							<Order>350</Order>
							<Source Name="CounterpartySource" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="КонтрагентКредитор" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>
							If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAdjustment 
	Or Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment Then
	
		Empty = True;
	
	ElsIf  Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
		Value = Source.Counterparty;
	
	ElsIf Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
		Value = Source.Counterparty;
		
EndIf;					</BeforeExport>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Counterparty --&gt; КонтрагентДебитор</Description>
							<Order>400</Order>
							<Source Name="Counterparty" Kind="Реквизит" Type="CatalogRef.Counterparties"/>
							<Receiver Name="КонтрагентДебитор" Kind="Реквизит" Type="CatalogRef.Контрагенты"/>
							<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment Then
		Value = Source.Counterparty;
	ElsIf  Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
		Value = Source.CounterpartySource;
	ElsIf  Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAdjustment Then
		Value = Source.CounterpartySource;
		
	ElsIf Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
		  Value = Source.CounterpartySource;
		
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>--&gt; ВидАвансаЗадолженности</Description>
							<Order>450</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВидАвансаЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.ВидыАвансаЗадолженности"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAdjustment
	Or Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	Value = "АвансыПокупателя";	
ElsIf Source.OperationKind = Enums.OperationKindsNetting.VendorDebtAdjustment
	Or Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	Value = "АвансыПоставщику";	
Else
	Value = "";	
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>--&gt; ТипАвансаЗадолженности</Description>
							<Order>500</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ТипАвансаЗадолженности" Kind="Реквизит" Type="ПеречислениеСсылка.ТипыЗадолженности"/>
							<BeforeExport>Value = "СамогоКонтрагента";</BeforeExport>
						</Property>
						<Group>
							<Code>11</Code>
							<Description>Debitor --&gt; КредиторскаяЗадолженность</Description>
							<Order>550</Order>
							<Source Name="Debitor" Kind="TabularSection"/>
							<Receiver Name="КредиторскаяЗадолженность" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	Cancel = True;
Иначе
	AdvanceFlag = True;
	Execute(Algorithms.FormDebtTabSection);
КонецЕсли;</BeforeProcessExport>
							<Property>
								<Code>12</Code>
								<Description>--&gt; ДоговорКонтрагента</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>
TabSecDesc = "Дебитор";
Execute(Algorithms.FormNettingContract);</BeforeExport>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>--&gt; Сделка</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>--&gt; СуммаВзаиморасчетов</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>15</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>--&gt; КурсВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>--&gt; КратностьВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>--&gt; КорДоговорКонтрагента</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КорДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	TabSecDesc = "";
	Execute(Algorithms.FormNettingContract);
Else
	Empty = True;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>--&gt; ПризнакАванса</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПризнакАванса</ParameterForTransferName>
								<BeforeExport>Value = True;</BeforeExport>
							</Property>
						</Group>
						<Group>
							<Code>20</Code>
							<Description>Creditor --&gt; ДебиторскаяЗадолженность</Description>
							<Order>600</Order>
							<Source Name="Creditor" Kind="TabularSection"/>
							<Receiver Name="ДебиторскаяЗадолженность" Kind="TabularSection"/>
							<BeforeProcessExport>If Source.OperationKind = Enums.OperationKindsNetting.CustomerDebtAssignment Then
	Cancel = True;
Else
	AdvanceFlag = True;
	Execute(Algorithms.FormCredTabSection);
EndIf;</BeforeProcessExport>
							<Property>
								<Code>21</Code>
								<Description>--&gt; ДоговорКонтрагента</Description>
								<Order>50</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="ДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>
TabSecDesc = "Кредитор";
Execute(Algorithms.FormNettingContract);</BeforeExport>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>--&gt; Сделка</Description>
								<Order>100</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сделка" Kind="Реквизит"/>
								<BeforeExport>Execute(Algorithms.DefineOCRNameForSettlementDocument);</BeforeExport>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>--&gt; СуммаВзаиморасчетов</Description>
								<Order>150</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="СуммаВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>--&gt; Сумма</Description>
								<Order>200</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="Сумма" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>--&gt; КурсВзаиморасчетов</Description>
								<Order>250</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КурсВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>--&gt; КратностьВзаиморасчетов</Description>
								<Order>300</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КратностьВзаиморасчетов" Kind="Реквизит" Type="Число"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>--&gt; КорДоговорКонтрагента</Description>
								<Order>350</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="КорДоговорКонтрагента" Kind="Реквизит" Type="CatalogRef.ДоговорыКонтрагентов"/>
								<BeforeExport>If Source.OperationKind = Enums.OperationKindsNetting.DebtAssignmentToVendor Then
	TabSecDesc = "";
	Execute(Algorithms.FormNettingContract);
Else
	Empty = True;	
EndIf;</BeforeExport>
							</Property>
							<Property>
								<Code>28</Code>
								<Description>--&gt; ПризнакАванса</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>ПризнакАванса</ParameterForTransferName>
								<BeforeExport>Value = Истина;</BeforeExport>
							</Property>
						</Group>
						<Property>
							<Code>30</Code>
							<Description>--&gt; ВалютаДокумента</Description>
							<Order>700</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ВалютаДокумента" Kind="Реквизит" Type="СправочникСсылка.Валюты"/>
							<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
							<BeforeExport>If Source.Debitor.Count() &gt; 0  Then
	Value = Source.Debitor[0].Contract.SettlementsCurrency;
Else
	If Source.Creditor.Count() &gt; 0  Then
		Value = Source.Creditor[0].Contract.SettlementsCurrency;
	EndIf;
EndIf;
							</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>КорректировкаДолгаАвансыУдал</Code>
					<Description>Документ: Debt adjustment</Description>
					<Order>100</Order>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<Source>DocumentRef.Netting</Source>
					<Receiver>DocumentRef.КорректировкаДолга</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Дата --&gt; Дата</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Свойство" Type="Дата"/>
							<Receiver Name="Date" Kind="Свойство" Type="Дата"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Номер --&gt; Номер</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Свойство" Type="Строка"/>
							<Receiver Name="Number" Kind="Свойство" Type="Строка"/>
							<BeforeExport>Value = 	Лев(Source.Номер, 5) + "A" + Mid(Source.Номер, 7);</BeforeExport>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>150</Order>
							<Source Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<Receiver Name="DeletionMark" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = True;</BeforeExport>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Проведен --&gt; Проведен</Description>
							<Order>200</Order>
							<Source Name="Posted" Kind="Свойство" Type="Булево"/>
							<Receiver Name="Posted" Kind="Свойство" Type="Булево"/>
							<BeforeExport>Value = False;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
		</Group>
		<Group>
			<Code>ChartsOfCharacteristicTypes</Code>
			<Description>ChartsOfCharacteristicTypes                       </Description>
			<Order>1150</Order>
			<Rule>
				<Code>ДополнительныеРеквизитыИСведения</Code>
				<Description>План видов характеристик: Additional information and attributes</Description>
				<Order>50</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>ПланВидовХарактеристикСсылка.AdditionalAttributesAndInformation</Source>
				<Receiver>ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Свойство" Type="Строка"/>
						<Receiver Name="Description" Kind="Свойство" Type="Строка"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
	</ObjectConversionRules>
	<DataUnloadRules>
		<Group Disable="false">
			<Code>Catalogs</Code>
			<Description>Catalogs                                          </Description>
			<Order>50</Order>
			<Rule Disable="false">
				<Code>Currencies</Code>
				<Description>Currencies</Description>
				<Order>50</Order>
				<ConversionRuleCode>Валюты                                            </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Currencies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>CounterpartyContracts</Code>
				<Description>Contracts</Description>
				<Order>100</Order>
				<ConversionRuleCode>ДоговорыКонтрагентов                              </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.CounterpartyContracts</SelectionObject>
				<BeforeObjectExport>If Object.Owner.DoOperationsByContracts &lt;&gt; True Then
	OCRName = "ДоговорыКонтрагентов";
Else
	OCRName = "ДоговорыКонтрагентовПоискПоИдентификатору";
EndIF;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>Counterparties</Code>
				<Description>Counterparties</Description>
				<Order>150</Order>
				<ConversionRuleCode>Контрагенты                                       </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Counterparties</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Companies</Code>
				<Description>Companies</Description>
				<Order>200</Order>
				<ConversionRuleCode>Организации                                       </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Companies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>UOMClassifier</Code>
				<Description>UOM classifier</Description>
				<Order>250</Order>
				<ConversionRuleCode>КлассификаторЕдиницИзмерения                      </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.UOMClassifier</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServices</Code>
				<Description>Products and services</Description>
				<Order>300</Order>
				<ConversionRuleCode>Номенклатура                                      </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServices</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServicesCategories</Code>
				<Description>Products and services groups</Description>
				<Order>350</Order>
				<ConversionRuleCode>НоменклатурныеГруппы                              </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServicesCategories</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>CCDNumbers</Code>
				<Description>CCD numbers</Description>
				<Order>400</Order>
				<ConversionRuleCode>НомераГТД                                         </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.CCDNumbers</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>CashFlowItems</Code>
				<Description>Cash flow items</Description>
				<Order>450</Order>
				<ConversionRuleCode>СтатьиДвиженияДенежныхСредств                     </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.CashFlowItems</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Individuals</Code>
				<Description>Individuals</Description>
				<Order>500</Order>
				<ConversionRuleCode>ФизическиеЛица                                    </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Individuals</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Banks</Code>
				<Description>Banks</Description>
				<Order>550</Order>
				<ConversionRuleCode>Banks                                             </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Banks</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>BankAccounts</Code>
				<Description>Bank accounts</Description>
				<Order>600</Order>
				<ConversionRuleCode>БанковскиеСчета                                   </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.BankAccounts</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>StructuralUnits</Code>
				<Description>Business units</Description>
				<Order>650</Order>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.StructuralUnits</SelectionObject>
				<BeforeObjectExport>If Object.StructuralUnitType = Enums.StructuralUnitsTypes.Warehouse
 Or Object.StructuralUnitType = Enums.StructuralUnitsTypes.Retail
 Or Object.StructuralUnitType = Enums.StructuralUnitsTypes.RetailAccrualAccounting Then
	OCRName = "Склады";
Else
	OCRName = "ПодразделенияОрганизаций";
EndIf;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>Specifications</Code>
				<Description>Bills of materials</Description>
				<Order>700</Order>
				<ConversionRuleCode>СпецификацииНоменклатуры                          </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.Specifications</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>PriceKinds</Code>
				<Description>Price kinds</Description>
				<Order>750</Order>
				<ConversionRuleCode>ТипыЦенНоменклатуры                               </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.PriceKinds</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ContactInformationKinds</Code>
				<Description>Contact information kinds</Description>
				<Order>800</Order>
				<ConversionRuleCode>ВидыКонтактнойИнформации                          </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.ContactInformationKinds</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>IndividualsDocumentsKinds</Code>
				<Description>Document kinds of individuals</Description>
				<Order>850</Order>
				<ConversionRuleCode>ВидыДокументовФизическихЛиц                       </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>CatalogRef.IndividualsDocumentsKinds</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>InforrmationRegisters</Code>
			<Description>InforrmationRegisters                             </Description>
			<Order>100</Order>
			<Rule Disable="false">
				<Code>IndividualsDocuments</Code>
				<Description>Individuals' documents</Description>
				<Order>50</Order>
				<ConversionRuleCode>ДокументыФизическихЛиц                            </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.IndividualsDocuments</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>IndividualsDescriptionFull</Code>
				<Description>Last name, name, patronymic of individuals</Description>
				<Order>100</Order>
				<ConversionRuleCode>ФИОФизическихЛиц                                  </ConversionRuleCode>
				<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.IndividualsDescriptionFull</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>Documents</Code>
			<Description>Documents                                         </Description>
			<Order>150</Order>
			<Group Disable="false">
				<Code>Marketing</Code>
				<Description>Marketing                                         </Description>
				<Order>50</Order>
				<Rule Disable="false">
					<Code>AcceptanceCertificate</Code>
					<Description>Acceptance certificate</Description>
					<Order>50</Order>
					<ConversionRuleCode>АктОбОказанииПроизводственныхУслуг                </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.AcceptanceCertificate</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>CustomerInvoice</Code>
					<Description>Invoice</Description>
					<Order>100</Order>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CustomerInvoice</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OperationKindsCustomerInvoice.SaleToCustomer
 Or Object.OperationKind = Enums.OperationKindsCustomerInvoice.TransferForCommission Then
	OCRName = "РеализацияТоваровУслуг";
ElsIf Object.OperationKind = Enums.OperationKindsCustomerInvoice.TransferToProcessing Then
	OCRName = "ПередачаТоваров";
ElsIf Object.OperationKind = Enums.OperationKindsCustomerInvoice.ReturnToPrincipal
	  Or Object.OperationKind = Enums.OperationKindsCustomerInvoice.ReturnFromProcessing
	  Or Object.OperationKind = Enums.OperationKindsCustomerInvoice.ReturnToVendor Then
	OCRName = "ВозвратТоваровПоставщику";
	DumpByRule(Object,,,, "РеализацияТоваровУслугУдал");

EndIf;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>AgentReport</Code>
					<Description>Agent report</Description>
					<Order>150</Order>
					<ConversionRuleCode>ОтчетКомиссионераОПродажах                        </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.AgentReport</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>InvoiceForPayment</Code>
					<Description>Proforma invoice</Description>
					<Order>200</Order>
					<ConversionRuleCode>СчетНаОплатуПокупателю                            </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InvoiceForPayment</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>ProcessingReport</Code>
					<Description>Processing report</Description>
					<Order>250</Order>
					<ConversionRuleCode>РеализацияУслугПоПереработке                      </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.ProcessingReport</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>CustomerOrder</Code>
					<Description>Customer order</Description>
					<Order>300</Order>
					<ConversionRuleCode>ЗаказНарядАктОбОказанииПроизводственныхУслуг      </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CustomerOrder</SelectionObject>
					<BeforeObjectExport>
If Object.OperationKind = Enums.OperationKindsCustomerOrder.OrderForSale Then
	DumpByRule(
		Object,
		,
		,
		,
		"ЗаказПокупателяСчетНаОплату"
	);

ElsIf Object.OperationKind = Enums.OperationKindsCustomerOrder.OrderForProcessing Then
	DumpByRule(
		Object,
		,
		,
		,
		"ЗаказНарядТребованиеНакладная"
	);
EndIf;
				</BeforeObjectExport>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Purchase</Code>
				<Description>Purchase                                          </Description>
				<Order>100</Order>
				<Rule Disable="false">
					<Code>ExpenseReport</Code>
					<Description>Expense report</Description>
					<Order>150</Order>
					<ConversionRuleCode>АвансовыйОтчет                                    </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.ExpenseReport</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>SupplierInvoice</Code>
					<Description>Supplier invoice</Description>
					<Order>200</Order>
					<ConversionRuleCode>ПоступлениеТоваровУслуг                           </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.SupplierInvoice</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OperationKindsSupplierInvoice.ReturnFromCustomer
	Or Object.OperationKind = Enums.OperationKindsSupplierInvoice.ReturnFromAgent Then

	OCRName = "ВозвратТоваровОтПокупателя";
	
	DumpByRule(Object,,,, "ПоступлениеТоваровУслугУдал");

	
ElsIf Object.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionForCommission
	Or Object.OperationKind = Enums.OperationKindsSupplierInvoice.ReceiptFromVendor 
	Or Object.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionIntoProcessing Then
	
	OCRName = "ПоступлениеТоваровУслуг";
	
EndIf;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>ReportToPrincipal</Code>
					<Description>ReportToPrincipal                                 </Description>
					<Order>250</Order>
					<ConversionRuleCode>ОтчетКомитентуОПродажах                           </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.ReportToPrincipal</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>AdditionalCosts</Code>
					<Description>Additional expenses</Description>
					<Order>300</Order>
					<ConversionRuleCode>ПоступлениеДопРасходов                            </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.AdditionalCosts</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>SubcontractorReport</Code>
					<Description>Processor report</Description>
					<Order>350</Order>
					<ConversionRuleCode>ПоступлениеИзПереработки                          </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.SubcontractorReport</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>ExpensesOnImport</Code>
					<Description>Expenses on import</Description>
					<Order>360</Order>
					<ConversionRuleCode>ГТДИмпорт                          </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.ExpensesOnImport</SelectionObject>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Inventory</Code>
				<Description>Inventory                                         </Description>
				<Order>150</Order>
				<Rule Disable="false">
					<Code>InventoryTransfer</Code>
					<Description>Inventory transfer</Description>
					<Order>50</Order>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InventoryTransfer</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OperationKindsInventoryTransfer.Move Then
			
	OCRName = "ПеремещениеТоваров";
	
	// Удаляем документы, которые могли быть выгружены ранее
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ТребованиеНакладная", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПередачаМатериаловВЭксплуатацию", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ВозвратМатериаловИзЭксплуатации", "DocumentRef.ПеремещениеЗапасов");
	
ElsIf Object.OperationKind = Enums.OperationKindsInventoryTransfer.WriteOffToExpenses
	And Object.StructuralUnit.StructuralUnitType = Enums.StructuralUnitsTypes.Warehouse
	And Object.StructuralUnitPayee.StructuralUnitType = Enums.StructuralUnitsTypes.Department Then
	
	OCRName = "ТребованиеНакладная";
	
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПеремещениеТоваров", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПередачаМатериаловВЭксплуатацию", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ВозвратМатериаловИзЭксплуатации", "DocumentRef.ПеремещениеЗапасов");
	
ElsIf Object.OperationKind = Enums.OperationKindsInventoryTransfer.TransferToOperation Then
	
	OCRName = "ПередачаМатериаловВЭксплуатацию";
	
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПеремещениеТоваров", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ТребованиеНакладная", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ВозвратМатериаловИзЭксплуатации", "DocumentRef.ПеремещениеЗапасов");
	
ElsIf Object.OperationKind = Enums.OperationKindsInventoryTransfer.ReturnFromExploitation Then
		
	OCRName = "ВозвратМатериаловИзЭксплуатации";
	
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПеремещениеТоваров", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ТребованиеНакладная", "DocumentRef.ПеремещениеЗапасов");
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.ПередачаМатериаловВЭксплуатацию", "DocumentRef.ПеремещениеЗапасов");
	
EndIF;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>InventoryReconciliation</Code>
					<Description>Inventory reconciliation</Description>
					<Order>100</Order>
					<ConversionRuleCode>ИнвентаризацияТоваровНаСкладе                     </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InventoryReconciliation</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>InventoryReceipt</Code>
					<Description>Inventory receip</Description>
					<Order>150</Order>
					<ConversionRuleCode>ОприходованиеТоваров                              </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InventoryReceipt</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>InventoryWriteOff</Code>
					<Description>Inventory write-off</Description>
					<Order>200</Order>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InventoryWriteOff</SelectionObject>
					<BeforeObjectExport>
IF (Object.StructuralUnit.StructuralUnitType = Enums.StructuralUnitsTypes.Warehouse
	Or Object.StructuralUnit.StructuralUnitType = Enums.StructuralUnitsTypes.Retail)
	and Not Object.RetireInventoryFromOperation Then
	
	OCRName = "СписаниеТоваров";
	
ElsIf Object.StructuralUnit.StructuralUnitType = Enums.StructuralUnitsTypes.Department
	And Object.RetireInventoryFromOperation Then
	
	OCRName = "СписаниеМатериаловИзЭксплуатации";
Else 
	Cancel = True;
	
EndIf;</BeforeObjectExport>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Production</Code>
				<Description>Production                                        </Description>
				<Order>200</Order>
				<Rule Disable="false">
					<Code>InventoryAssembly</Code>
					<Description>Production</Description>
					<Order>50</Order>
					<ConversionRuleCode>ОтчетПроизводстваЗаСмену                          </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.InventoryAssembly</SelectionObject>
					<BeforeObjectExport>
If GetFunctionalOption("UseProductionStages") Then

	If Not Documents.InventoryAssembly.ProductionCompleteStage(Object.Ref) Then
		
		DumpByRule(Object,,,, "ТребованиеНакладнаяПроизводство");
		
	EndIf;
	
Else
	If Object.ProductsStructuralUnit &lt;&gt; Object.InventoryStructuralUnit
		And Object.Products.Count() &gt; 0
		And Not Object.DeletionMark Then
		
		DumpByRule(Object,,,, "ПеремещениеПродукции");
	Else
		DumpByRule(Object,,,, "ПеремещениеПродукцииУдал");
	EndIf;

	If Object.DisposalsStructuralUnit &lt;&gt; Object.InventoryStructuralUnit
		And Object.Disposals.Count() &gt; 0
		And Not Object.DeletionMark Then
		
		DumpByRule(Object,,,, "ПеремещениеОтходов");
	Else
		DumpByRule(Object,,,, "ПеремещениеОтходовУдал");
	EndIf;
EndIf;			</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>CostAllocation</Code>
					<Description>Cost allocation</Description>
					<Order>100</Order>
					<ConversionRuleCode>РаспределениеМатериальныхЗатрат                   </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CostAllocation</SelectionObject>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Cash</Code>
				<Description>Cash                                              </Description>
				<Order>250</Order>
				<Rule Disable="false">
					<Code>PaymentReceipt</Code>
					<Description>Payment receipt</Description>
					<Order>50</Order>
					<ConversionRuleCode>ПоступлениеНаРасчетныйСчет                        </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.PaymentReceipt</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>PaymentExpense</Code>
					<Description>Expense from account</Description>
					<Order>100</Order>
					<ConversionRuleCode>СписаниеСРасчетногоСчета                          </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.PaymentExpense</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>CashReceipt</Code>
					<Description>Cash receipt</Description>
					<Order>150</Order>
					<ConversionRuleCode>ПриходныйКассовыйОрдер                            </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CashReceipt</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>CashPayment</Code>
					<Description>Cash payment</Description>
					<Order>200</Order>
					<ConversionRuleCode>РасходныйКассовыйОрдер                            </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CashPayment</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>PaymentOrder</Code>
					<Description>Payment procedure</Description>
					<Order>250</Order>
					<ConversionRuleCode>ПлатежноеПоручение                                </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.PaymentOrder</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>CashTransfer</Code>
					<Description>Funds movement</Description>
					<Order>300</Order>
					<ConversionRuleCode>ПеремещениеДСПриходныйКассовыйОрдер               </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.CashTransfer</SelectionObject>
					<BeforeObjectExport> If Object.CashAssetsType = Enums.CashAssetTypes.Noncash
	 And Object.CashAssetsTypePayee = Enums.CashAssetTypes.Cash Then
	 
	 OCRName = "ПеремещениеДСПриходныйКассовыйОрдер";
	 
 ElsIf Object.CashAssetsType = Enums.CashAssetTypes.Cash
	 And Object.CashAssetsTypePayee = Enums.CashAssetTypes.Noncash Then
	 
	 OCRName = "ПеремещениеДСРасходныйКассовыйОрдер";
	 	 
 ElsIf Object.CashAssetsType = Enums.CashAssetTypes.Noncash
	And Object.CashAssetsTypePayee = Enums.CashAssetTypes.Noncash Then
	 
	 OCRName = "ПеремещениеДССписаниеСРасчетногоСчета";
	 
 Else
	 Cencel = True;
	 
 EndIf;</BeforeObjectExport>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Retail</Code>
				<Description>Retail                                            </Description>
				<Order>300</Order>
				<Rule Disable="false">
					<Code>RetailReport</Code>
					<Description>Retail sales report</Description>
					<Order>50</Order>
					<ConversionRuleCode>ОтчетОРозничныхПродажах                           </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.RetailReport</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>RetailRevaluation</Code>
					<Description>Retail revaluation (value accounting)</Description>
					<Order>100</Order>
					<ConversionRuleCode>ПереоценкаТоваровВРознице                         </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.RetailRevaluation</SelectionObject>
				</Rule>
			</Group>
			<Group Disable="false">
				<Code>Settlement</Code>
				<Description>Settlement                                        </Description>
				<Order>350</Order>
				<Rule Disable="false">
					<Code>Netting</Code>
					<Description>Debt adjustment</Description>
					<Order>50</Order>
					<ConversionRuleCode>КорректировкаДолга                                </ConversionRuleCode>
					<DataSelectionVariant>СтандартнаяВыборка</DataSelectionVariant>
					<SelectionObject>DocumentRef.Netting</SelectionObject>
					<BeforeObjectExport>
Debt = Object.Debitor.Find(False, "AdvanceFlag") &lt;&gt; Undefined
	Or Object.Creditor.Find(False, "AdvanceFlag") &lt;&gt; Undefined; 

Advance = Object.Debitor.Find(True, "AdvanceFlag") &lt;&gt; Undefined
	Or Object.Creditor.Find(True, "AdvanceFlag") &lt;&gt; Undefined;
	
IncomingData = New Structure;
IncomingData.Insert("Debt", Debt);
IncomingData.Insert("Advance", Advance);

Если Debt Тогда
	DumpByRule(Object,,,, "КорректировкаДолга");
Иначе
	WriteToFileObjectDeletion(Object.Ссылка, "DocumentRef.КорректировкаДолга", "DocumentRef.Взаимозачет");
КонецЕсли;

Если Advance Тогда
	DumpByRule(Object,,,, "КорректировкаДолгаАванс");
Иначе
	DumpByRule(Object,,,, "КорректировкаДолгаАвансыУдал");
КонецЕсли;

Cancel = True;</BeforeObjectExport>
				</Rule>
			</Group>
		</Group>
	</DataUnloadRules>
	<DataClearingRules/>
	<Algorithms>
		<Group Name="Export">
			<Algorithm Name="DefineAccountByOperation" UsedOnImport="false">
				<Text>Account = "";

If ValueIsFilled(Operation)
	И TypeOf(Operation) = Type("ChartOfAccountsRef.Managerial") Then
	
	AccountValues = CommonUse.ObjectAttributesValues(Operation, "TypeOfAccount, Currency");
	
	CurrensyDoc = False;
	If 	AccountValues.Currency = True Then
		
		DocumentMetadata = Document.Metadata();
		If DocumentMetadata.Attributes.Find("DocumentCurensy") &lt;&gt; Undefined Then 
			If Document.DocumentCurensy &lt;&gt; Constants.NationalCurrency.Get() Then
				CurrensyDoc = True;
			EndIf;
		EndIf;
	EndIf;
	
	AccType = AccountValues.TypeOfAccount;
	If AccType = Enums.GLAccountsTypes.OtherIncome Then
		Account = "711";
	ElsIf AccType = Enums.GLAccountsTypes.OtherExpenses Then
		Account = "811";
	ElsIf AccType = Enums.GLAccountsTypes.CashAssets Then
		If Operation = ChartsOfAccounts.Managerial.FinancialInvestments Then
			Account = "128";
		ElsIf CurrensyDoc = True Then
			Account = "1132";
		Else
			Account = "1131";
		EndIf;
	ElsIf AccType = Enums.GLAccountsTypes.Loans Then
		If CurrensyDoc = True Then
			Account = "34113"; 	// ??
		Else
			Account = "34111";
		EndIf;
	ElsIf AccType = Enums.GLAccountsTypes.LongtermObligations Then
		If CurrensyDoc = True Then
			Account = "34123";
		Else
			Account = "34121";
		EndIf;
	ElsIf AccType = Enums.GLAccountsTypes.Debitors Then
		If CurrensyDoc = True Then
			Account = "13882";
		Else
			Account = "13881";
		EndIf;	
	ElsIf AccType = Enums.GLAccountsTypes.Creditors Then
		If CurrensyDoc = True Then
			Account = "33882";
		Else
			Account = "33881";
		EndIf;	
	ElsIf AccType = Enums.GLAccountsTypes.Capital Then
		Account = "4111";
		
	ElsIf AccType = Enums.GLAccountsTypes.Expenses Then
		If Operation = ChartsOfAccounts.Managerial.CommercialExpenses Then
			If GetFunctionalOption("UseSubsystemProduction") = True Then
				Account = "641";
			Else
				Account = "641";
			EndIf;
		Else
			Account = "642";
		EndIf;
	EndIf;
	// 1VS	
EndIf;</Text>
				<Parameters>Account, Operation, Document</Parameters>
			</Algorithm>
			<Algorithm Name="DefineOCRNameForSettlementDocument" UsedOnImport="false">
				<Text>
	If TypeOf(CollectionObject) = Type("ValueTableRow") Then
		If Not CollectionObject.Owner().Columns.Find("Сделка") = Undefined Then
			DocumentRowName = "Сделка";
		Else
			DocumentRowName = "Document";
		EndIf;
	Else
		DocumentRowName = "Document";
	EndIf;
	
	If TypeOf(CollectionObject[DocumentRowName]) = Type("DocumentRef.CustomerOrder") 
	And CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerOrder.WorkOrder Then
	
	If CollectionObject[DocumentRowName].Works.Count() &gt; 0 Then
		OCRName = "АктОбОказанииПроизводственныхУслуг";
	Else
		OCRName = "РеализацияТоваровУслуг";
	EndIf;

ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.CustomerInvoice") Then
	If CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.SaleToCustomer
	 Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.TransferForCommission Then
		OCRName = "РеализацияТоваровУслуг";
	ElsIf CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.TransferToProcessing Then
		OCRName = "ПередачаТоваров";
	ElsIf CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.ReturnToPrincipal
		  Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.ReturnFromProcessing
		  Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsCustomerInvoice.ReturnToVendor Then
		OCRName = "ВозвратТоваровПоставщику";
	EndIf;
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.SupplierInvoice") Then
	Если CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsSupplierInvoice.ReturnFromCustomer
	 Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsSupplierInvoice.ReturnFromAgent Then
		OCRName = "ВозвратТоваровОтПокупателя";
	ElsIf CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionForCommission
		  Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionIntoProcessing
		  Or CollectionObject[DocumentRowName].OperationKind = Enums.OperationKindsSupplierInvoice.ReceiptFromVendor Then
		OCRName = "ПоступлениеТоваровУслуг";
	EndIf;
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.AcceptanceCertificate") Then
	OCRName = "АктОбОказанииПроизводственныхУслуг";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.AgentReport") Then
	OCRName = "ОтчетКомиссионераОПродажах";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.PaymentExpense") Then
	OCRName = "СписаниеСРасчетногоСчета";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.ProcessingReport") Then
	OCRName = "РеализацияУслугПоПереработке";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.ExpenseReport") Then
	OCRName = "АвансовыйОтчет";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.CustomerOrder") Then
	OCRName = "РеализацияТоваровУслуг";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.SubcontractorReport") Then
	OCRName = "ПоступлениеИзПереработки";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.ReportToPrincipal") Then
	OCRName = "ОтчетКомитентуОПродажах";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.CashPayment") Then
	OCRName = "РасходныйКассовыйОрдер";
ElsIf TypeOf(CollectionObject[DocumentRowName]) = Тип("DocumentRef.AdditionalCosts") Then
	OCRName = "ПоступлениеДопРасходов";
EndIf;</Text>
				<Parameters>OCRName, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="DefineOCRNameForStructuralUnit" UsedOnImport="false">
				<Text>
If StructuralUnit.StructuralUnitType &lt;&gt; Enums.StructuralUnitsTypes.Department Then
	OCRName = "Склады";
Else
	OCRName = "ПроизводственныеСклады";
	DumpByRule(StructuralUnit,,,, OCRName);
EndIf;</Text>
				<Parameters>StructuralUnit, OCRName</Parameters>
			</Algorithm>
			<Algorithm Name="FillDocumentVATRate" UsedOnImport="false">
				<Text>Если Source.VATRate.NotTaxable Then
	Expression = "Перечисления.СтавкиНДС.БезНДС";	
ИначеЕсли Source.VATRate.Rate = 10
	 И НЕ Source.VATRate.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС18";
ИначеЕсли Source.VATRate.Rate = 10
		И Source.VATRate.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС18_118";
ИначеЕсли Source.VATRate.Rate = 5 
	 И НЕ Source.VATRate.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС10";
ИначеЕсли Source.VATRate.Rate = 5 
		И Source.VATRate.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС10_110";
ИначеЕсли Source.VATRate.Rate = 0 Then
	Expression = "Перечисления.СтавкиНДС.НДС0"; 
Иначе
	Expression = "Перечисления.СтавкиНДС.НДС18";
EndIf;
</Text>
				<Parameters>Expression, Source</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionFactor" UsedOnImport="false">
				<Text>Value = ?(TypeOf(CollectionObject.ЕдиницаИзмерения) = Type("CatalogRef.UOM"), CommonUse.ObjectAttributeValue(CollectionObject.ЕдиницаИзмерения, "Factor"), 1);</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionFactor2" UsedOnImport="false">
				<Text>Value = ?(TypeOf(CollectionObject.MeasurementUnit) = Type("CatalogRef.UOM"), CommonUse.ObjectAttributeValue(CollectionObject.MeasurementUnit, "Factor"), 1);</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionMU" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.ЕдиницаИзмерения) = Type("CatalogRef.UOM") Then
	Value = CommonUse.GetAttributeValue(CollectionObject.Номенклатура, "MeasurementUnit");
Else
	Value = CollectionObject.ЕдиницаИзмерения;
EndIf;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionMU2" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.MeasurementUnit) = Type("CatalogRef.UOM") Then
	Value = CommonUse.GetAttributeValue(CollectionObject.ProductsAndServices, "MeasurementUnit");	
Else
	Value = CollectionObject.MeasurementUnit;
EndIf;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionPrice" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.ЕдиницаИзмерения) = Тип("CatalogRef.UOM") Then
	Factor = CollectionObject.ЕдиницаИзмерения.Factor;	
	If Factor &gt; 0 Then
		Value = CollectionObject.Цена / Factor;
	EndIF;
Else
	Value = CollectionObject.Цена;
EndIf;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionPrice2" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.MeasurementUnit) = Тип("CatalogRef.UOM") Then
	Factor = CollectionObject.MeasurementUnit.Factor;	
	If Factor &gt; 0 Then
		Value = CollectionObject.Price / Factor;
	EndIF;
Else
	Value = CollectionObject.Price;
EndIf;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionQuantity" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.ЕдиницаИзмерения) = Тип("CatalogRef.UOM") Тогда
	Factor = CollectionObject.ЕдиницаИзмерения.Factor;	
	Если Factor &gt; 0 Тогда
		Value = CollectionObject.Количество * Factor;
	КонецЕсли;
Иначе
	Value = CollectionObject.Количество;
КонецЕсли;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionQuantity2" UsedOnImport="false">
				<Text>If TypeOf(CollectionObject.MeasurementUnit) = Тип("CatalogRef.UOM") Тогда
	Factor = CollectionObject.MeasurementUnit.Factor;	
	Если Factor &gt; 0 Тогда
		Value = CollectionObject.Quantity * Factor;
	КонецЕсли;
Иначе
	Value = CollectionObject.Quantity;
КонецЕсли;</Text>
				<Parameters>Value, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionVatRate" UsedOnImport="false">
				<Text>

If Parameters.SettingVariant = "Accounting4" Then
	
	If CollectionObject.СтавкаНДС.NotTaxable Then
		Expression = "Перечисления.СтавкиНДС.БезНДС";	
	ElsIf CollectionObject.СтавкаНДС.Rate = 10
			И НЕ CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10";
	ElsIf CollectionObject.СтавкаНДС.Rate = 10
			И CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10_110";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 5 
		 И НЕ CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС5";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 5 
			И CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС5_105";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 0 Then
		Expression = "Перечисления.СтавкиНДС.НДС0"; 
	EndIf;
	
Else
	
	If CollectionObject.СтавкаНДС.NotTaxable Then
		Expression = "Перечисления.СтавкиНДС.БезНДС";	
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 10
			И НЕ CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС18";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 10
			И CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС18_118";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 5 
		 И НЕ CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 5 
			И CollectionObject.СтавкаНДС.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10_110";
		
	ElsIf CollectionObject.СтавкаНДС.Rate = 0 Then
		Expression = "Перечисления.СтавкиНДС.НДС0"; 
		
	Else
		Expression = "Перечисления.СтавкиНДС.НДС18";
	EndIf;
EndIf;
</Text>
				<Parameters>Expression, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillTabularSectionVatRate2" UsedOnImport="false">
				<Text>
If Parameters.SettingVariant = "Accounting4" Then

	If CollectionObject.VATRate.NotTaxable Then
		Expression = "Перечисления.СтавкиНДС.БезНДС";	
	ElsIf CollectionObject.VATRate.Rate = 10
			И НЕ CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10";
	ElsIf CollectionObject.VATRate.Rate = 10
			И CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10_110";
		
	ElsIf CollectionObject.VATRate.Rate = 5 
		 И НЕ CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС5";
		
	ElsIf CollectionObject.VATRate.Rate = 5 
			И CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС5_105";
		
	ElsIf CollectionObject.VATRate.Rate = 0 Then
		Expression = "Перечисления.СтавкиНДС.НДС0"; 
	EndIf;

Else
	If CollectionObject.VATRate.NotTaxable Then
		Expression = "Перечисления.СтавкиНДС.БезНДС";	
		
	ElsIf CollectionObject.VATRate.Rate = 10
			И НЕ CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС18";
		
	ElsIf CollectionObject.VATRate.Rate = 10
			И CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС18_118";
		
	ElsIf CollectionObject.VATRate.Rate = 5 
		 И НЕ CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10";
		
	ElsIf CollectionObject.VATRate.Rate = 5 
			И CollectionObject.VATRate.Calculated Then
		Expression = "Перечисления.СтавкиНДС.НДС10_110";
		
	ElsIf CollectionObject.VATRate.Rate = 0 Then
		Expression = "Перечисления.СтавкиНДС.НДС0"; 
		
	Else
		Expression = "Перечисления.СтавкиНДС.НДС18";
	EndIf;
EndIf;
</Text>
				<Parameters>Expression, CollectionObject</Parameters>
			</Algorithm>
			<Algorithm Name="FillVATCommissionFeePercent" UsedOnImport="false">
				<Text>If Source.VATCommissionFeePercent.NotTaxable Then
	Expression = "Перечисления.СтавкиНДС.БезНДС";	
ElsIf Source.VATCommissionFeePercent.Rate = 10
	 And Not Source.VATCommissionFeePercent.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС18";
ElsIf Source.VATCommissionFeePercent.Rate = 10
		And Source.VATCommissionFeePercent.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС18_118";
ElsIf Source.VATCommissionFeePercent.Rate = 5 
	 And Not Source.VATCommissionFeePercent.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС10";
ElsIf Source.VATCommissionFeePercent.Rate = 5 
		And Source.VATCommissionFeePercent.Calculated Then
	Expression = "Перечисления.СтавкиНДС.НДС10_110";
ElsIf Source.VATCommissionFeePercent.Rate = 0 Then
	Expression = "Перечисления.СтавкиНДС.НДС0"; 
Else
	Expression = "Перечисления.СтавкиНДС.НДС18";
EndIf;</Text>
				<Parameters>Expression, Source</Parameters>
			</Algorithm>
			<Algorithm Name="FormContractStructure" UsedOnImport="false">
				<Text>
If Not Source.Counterparty.DoOperationsByContracts = True  Then
	
	OCRName = "ДоговорыКонтрагентов";
	
	Document = Source.Ref;
		
	If TypeOf(Document) = Type("DocumentRef.AcceptanceCertificate")
		Or TypeOf(Document) = Type("DocumentRef.ExpenseReport")
		Or TypeOf(Document) = Type("DocumentRef.AdditionalCosts")
		Or TypeOf(Document) = Type("DocumentRef.AgentReport") 
		Or TypeOf(Document) = Type("DocumentRef.ReportToPrincipal")
		Or TypeOf(Document) = Type("DocumentRef.ProcessingReport")
		Or TypeOf(Document) = Type("DocumentRef.SubcontractorReport")
		Or TypeOf(Document) = Type("DocumentRef.JobSheet") Then
			
		 ContractKindList = Catalogs.CounterpartyContracts.GetContractKindsListForDocument(Document);
	Else
		ContractKindList = Catalogs.CounterpartyContracts.GetContractKindsListForDocument(Document, Document.OperationKind);
	EndIf;
		
	Contract = ?(ValueIsFilled(CollectionObject), CollectionObject.Contract, Source.Contract);
		
	If Contract.Company &lt;&gt; Source.Company
		Or ContractKindList.FindByValue(Contract.ContractKind) = Undefined Then 
			
		ContractAttrib = New Structure;
		ContractAttrib.Insert("Description");
		ContractAttrib.Insert("Owner");
		ContractAttrib.Insert("Code");
		ContractAttrib.Insert("Company");
		ContractAttrib.Insert("DeletionMark");
		ContractAttrib.Insert("SettlementsInStandardUnits");
		ContractAttrib.Insert("SettlementsCurrency");
		ContractAttrib.Insert("ЭтоГруппа");
		ContractAttrib.Insert("ContractKind");
		ContractAttrib.Insert("PriceKind");
		ContractAttrib.Insert("ContractDate");
		ContractAttrib.Insert("ContractNo");
		
		ContractAttrib.Insert("Parent");
		ContractAttrib.Insert("CustomerPaymentDueDate");
		ContractAttrib.Insert("VendorPaymentDueDate");

		
		ContractAttrib.Description = Contract.Description;
		ContractAttrib.Owner = Contract.Owner;
		ContractAttrib.Company = Contract.Company;
		ContractAttrib.DeletionMark = Contract.DeletionMark;
		ContractAttrib.SettlementsInStandardUnits = Contract.SettlementsInStandardUnits;
		ContractAttrib.SettlementsCurrency = Contract.SettlementsCurrency;
		ContractAttrib.ЭтоГруппа = Contract.IsFolder;
		ContractAttrib.ContractKind = Contract.ContractKind;
		ContractAttrib.PriceKind = Contract.PriceKind;
		ContractAttrib.ContractDate = Contract.ContractDate;
		ContractAttrib.ContractNo = Contract.ContractNo;
		
		ContractAttrib.Parent = Contract.Parent;
		ContractAttrib.CustomerPaymentDueDate = Contract.CustomerPaymentDueDate;
		ContractAttrib.VendorPaymentDueDate = Contract.VendorPaymentDueDate;
		
		//FillPropertyValues(ContractAttrib, Contract);
		
		ContractAttrib.Code = "";
		ContractAttrib.Company = Source.Company;
		
		If ContractKindList.Count() &gt; 0 Then
			ContractAttrib.ContractKind = ContractKindList[0].Value;
		EndIf;
			
		If TypeOf(Source) = Type("DocumentObject.AdditionalCosts") Then
				
			For Each TableRow In Source.Inventory Do
				If TypeOf(TableRow.ReceiptDocument) = Type("DocumentRef.SupplierInvoice")
					And TableRow.ReceiptDocument.OperationKind = Enums.OperationKindsSupplierInvoice.ReceptionForCommission Then
						
					ContractAttrib.ContractKind = Enums.ContractKinds.FromPrincipal;
					Break;
				EndIf;
			EndDo;
				
		EndIf;
			
		Value = ContractAttrib;
			
	EndIf;
	
Else
	
	OCRName = "ДоговорыКонтрагентовПоискПоИдентификатору";

EndIf;</Text>
				<Parameters>Source, CollectionObject, Value, OCRName</Parameters>
			</Algorithm>
			<Algorithm Name="FormCredTabSection" UsedOnImport="false">
				<Text>// Algorithm предназначен формирования типовой табличной части Кредитор документа Взаимозачет
// Вызывается из обработчика события "перед обработкой" ПКГС

SourceTab = Source.Creditor;
CredTab = New ValueTable;

CredTab.Columns.Add("ДоговорКонтрагента");
CredTab.Columns.Add("Сделка");
CredTab.Columns.Add("СуммаВзаиморасчетов");
CredTab.Columns.Add("Сумма");

CredTab.Columns.Add("КурсВзаиморасчетов");
CredTab.Columns.Add("КратностьВзаиморасчетов");

For Each TabRow In SourceTab Do
	
	If TabRow.AdvanceFlag = AdvanceFlag Then
		
		NewRow = CredTab.Add();
		
		NewRow.ДоговорКонтрагента = TabRow.Contract;
		NewRow.Сделка = TabRow.Document;
		NewRow.СуммаВзаиморасчетов =  TabRow.SettlementsAmount;

		
		ContractCurr = TabRow.Contract.SettlementsCurrency;
		Если ContractCurr = Parameters.NationalCurrency Then
			NewRow.КурсВзаиморасчетов	   = 1;
			NewRow.КратностьВзаиморасчетов  = 1;
			NewRow.Сумма = NewRow.СуммаВзаиморасчетов;
		Else
			Rates = WorkWithCurrencyRates.GetCurrencyRate(ContractCurr, Source.Date);
			NewRow.КурсВзаиморасчетов	   = Rates.ExchangeRate;
			NewRow.КратностьВзаиморасчетов  = Rates.Multiplicity;
			
			If TabRow.Contract.SettlementsInStandardUnits Then
				NewRow.Сумма = WorkWithCurrencyRatesClientServer.RecalculateFromCurrencyToCurrency(NewRow.СуммаВзаиморасчетов,
					ContractCurr, Parameters.NationalCurrency,
					NewRow.КурсВзаиморасчетов, 1,
					NewRow.КратностьВзаиморасчетов, 1
				);
			Else
				NewRow.Сумма = NewRow.СуммаВзаиморасчетов;
			EndIf;
		EndIf;
		
	EndIf;
	
EndDo;

ObjectsCollection = CredTab;</Text>
				<Parameters>ObjectsCollection, Source, AdvanceFlag</Parameters>
			</Algorithm>
			<Algorithm Name="FormDebtTabSection" UsedOnImport="false">
				<Text>// Algorithm предназначен формирования типовой табличной части Дебитор документа Взаимозачет
// Вызывается из обработчика события "перед обработкой" ПКГС

SourceTab = Source.Debitor;
//TabDeb = SourceTab.UnloadColumns();
TabDeb = New ValueTable;
TabDeb.Columns.Add("ДоговорКонтрагента");
TabDeb.Columns.Add("Сделка");
TabDeb.Columns.Add("СуммаВзаиморасчетов");

TabDeb.Columns.Add("КурсВзаиморасчетов");
TabDeb.Columns.Add("КратностьВзаиморасчетов");
TabDeb.Columns.Add("Сумма");

For Each TabRow In SourceTab Do
	
	If TabRow.AdvanceFlag = AdvanceFlag Then
		
		NewRow = TabDeb.Add();
		//FillPropertyValue(NewRow, TabRow);
		
		NewRow.ДоговорКонтрагента = TabRow.Contract;
		NewRow.Сделка = TabRow.Document;
		NewRow.СуммаВзаиморасчетов =  TabRow.SettlementsAmount;
		
		//NewRow.КурсВзаиморасчетов
		//NewRow.КратностьВзаиморасчетов
		//NewRow.Сумма

		
		CotractCurrency = TabRow.Contract.SettlementsCurrency;
		If CotractCurrency = Parameters.NationalCurrency Then
			NewRow.КурсВзаиморасчетов	   = 1;
			NewRow.КратностьВзаиморасчетов  = 1;
			NewRow.Сумма = NewRow.СуммаВзаиморасчетов;
		Else
			Rates = WorkWithCurrencyRates.GetCurrencyRate(CotractCurrency, Source.Date);
			NewRow.КурсВзаиморасчетов	   = Rates.ExchangeRate;
			NewRow.КратностьВзаиморасчетов  = Rates.Multiplicity;
			
			If TabRow.Contract.SettlementsInStandardUnits Then
				NewRow.Сумма = WorkWithCurrencyRatesClientServer.RecalculateFromCurrencyToCurrency(NewRow.СуммаВзаиморасчетов,
					CotractCurrency, Parameters.NationalCurrency,
					NewRow.КурсВзаиморасчетов, 1,
					NewRow.КратностьВзаиморасчетов, 1);
			Else
				NewRow.Сумма = NewRow.СуммаВзаиморасчетов;
			EndIf;
		EndIF;
		
	EndIf;
	
EndDo;

ObjectsCollection = TabDeb;</Text>
				<Parameters>ObjectsCollection, Source, AdvanceFlag</Parameters>
			</Algorithm>
			<Algorithm Name="FormLoanStructure" UsedOnImport="false">
				<Text>
		
		UUID = LoanContract.UUID();
		
		ContractAttrib = New Structure;
		
		ContractAttrib.Insert("Company");
		ContractAttrib.Insert("Counterparty");
		ContractAttrib.Insert("Company");
		ContractAttrib.Insert("Number");
		ContractAttrib.Insert("Date");
		
		OCRName = "ДоговорыКонтрагентовЗаймы";
		
		FillPropertyValues(ContractAttrib, LoanContract);
		
		ContractAttrib.Insert("UUID", UUID);
		
		Value = ContractAttrib;
			
		</Text>
				<Parameters>LoanContract</Parameters>
			</Algorithm>
			<Algorithm Name="FormMaterialAllocationTable" UsedOnImport="false">
				<Text>
ObjectsCollection = New ValueTable;
ObjectsCollection.Columns.Add("Номенклатура");
ObjectsCollection.Columns.Add("Количество");
ObjectsCollection.Columns.Add("КоличествоМест");
ObjectsCollection.Columns.Add("ЕдиницаИзмерения");
ObjectsCollection.Columns.Add("Коэффициент");
ObjectsCollection.Columns.Add("НоменклатурнаяГруппа");

If Source.OperationKind = Enums.OperationKindsInventoryAssembly.Assembly Then
	
	If Source.Products.Count() = 1 Then
		
		For Each TabRow In Source.Inventory Do
			ProductType = CommonUse.ObjectAttributeValue(TabRow.ProductsAndServices, "ProductsAndServicesType");
			If ProductType = Enums.ProductsAndServicesTypes.InventoryItem Then
				NewRow = ObjectsCollection.Add();
				FillPropertyValues(NewRow, TabRow);
				
				NewRow.Номенклатура = TabRow.ProductsAndServices;
				NewRow.Количество = TabRow.Quantity;
				NewRow.КоличествоМест = TabRow.Quantity;
				NewRow.НоменклатурнаяГруппа = CommonUse.ObjectAttributeValue(Source.Products[0].ProductsAndServices, "ProductsAndServicesCategory"); 
			EndIF;
		EndDo;
		
	Else
		
		InventoryAssemblyDocument = Source.Ref;
		
		AdditionalProperties = New Structure;
		SmallBusinessServer.InitializeAdditionalPropertiesForPosting(InventoryAssemblyDocument, AdditionalProperties);
		
		Query = New Query;
		Query.TempTablesManager = AdditionalProperties.ForPosting.StructureTemporaryTables.TempTablesManager;
		Query.Text =
		
		"SELECT
		|	СompletedStages.ConnectionKey AS ConnectionKey,
		|	СompletedStages.Stage AS Stage
		|INTO TemporaryTableСompletedStages
		|FROM
		|	Document.InventoryAssembly.CompletedStages AS СompletedStages
		|WHERE
		|	&amp;UseProductionStages
		|	AND СompletedStages.Ref = &amp;Ref
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|SELECT
		|	InventoryAssemblyProducts.LineNumber AS LineNumber,
		|	InventoryAssemblyProducts.Ref.Date AS Period,
		|	InventoryAssemblyProducts.ConnectionKey AS ConnectionKey,
		|	InventoryAssemblyProducts.Ref AS Ref,
		|	&amp;Company AS Company,
		|	InventoryAssemblyProducts.Ref.StructuralUnit AS StructuralUnit,
		|	CASE
		|		WHEN &amp;AccountingByCells
		|			THEN InventoryAssemblyProducts.Ref.Cell
		|		ELSE VALUE(Catalog.Cells.EmptyRef)
		|	END AS Cell,
		|	InventoryAssemblyProducts.Ref.StructuralUnit.OrderWarehouse AS OrderWarehouse,
		|	InventoryAssemblyProducts.Ref.ProductsStructuralUnit AS ProductsStructuralUnit,
		|	InventoryAssemblyProducts.Ref.ProductsStructuralUnit.OrderWarehouse AS OrderWarehouseProducts,
		|	CASE
		|		WHEN &amp;AccountingByCells
		|			THEN InventoryAssemblyProducts.Ref.ProductsCell
		|		ELSE VALUE(Catalog.Cells.EmptyRef)
		|	END AS ProductsCell,
		|	InventoryAssemblyProducts.ProductsAndServices AS ProductsAndServices,
		|	CASE
		|		WHEN &amp;UseCharacteristics
		|			THEN InventoryAssemblyProducts.Characteristic
		|		ELSE VALUE(Catalog.ProductsAndServicesCharacteristics.EmptyRef)
		|	END AS Characteristic,
		|	CASE
		|		WHEN &amp;UseBatches
		|			THEN InventoryAssemblyProducts.Batch
		|		ELSE VALUE(Catalog.ProductsAndServicesBatches.EmptyRef)
		|	END AS Batch,
		|	InventoryAssemblyProducts.Specification AS Specification,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Ref.StructuralUnit.StructuralUnitType = VALUE(Enum.StructuralUnitsTypes.Warehouse)
		|			THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|		ELSE InventoryAssemblyProducts.ProductsAndServices.ExpensesGLAccount
		|	END AS GLAccount,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Ref.ProductsStructuralUnit.StructuralUnitType = VALUE(Enum.StructuralUnitsTypes.Warehouse)
		|			THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|		ELSE InventoryAssemblyProducts.ProductsAndServices.ExpensesGLAccount
		|	END AS ProductsGLAccount,
		|	InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount AS InventoryGLAccount,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Ref.StructuralUnit.StructuralUnitType = VALUE(Enum.StructuralUnitsTypes.Warehouse)
		|			THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|		ELSE InventoryAssemblyProducts.ProductsAndServices.ExpensesGLAccount
		|	END AS AccountDr,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Ref.ProductsStructuralUnit.StructuralUnitType = VALUE(Enum.StructuralUnitsTypes.Warehouse)
		|			THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|		ELSE InventoryAssemblyProducts.ProductsAndServices.ExpensesGLAccount
		|	END AS ProductsAccountDr,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Batch.Status = VALUE(Enum.BatchStatuses.SafeCustody)
		|				OR InventoryAssemblyProducts.Batch.Status = VALUE(Enum.BatchStatuses.ProductsOnCommission)
		|				OR InventoryAssemblyProducts.Batch.Status = VALUE(Enum.BatchStatuses.CommissionMaterials)
		|			THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|		ELSE CASE
		|				WHEN InventoryAssemblyProducts.Ref.StructuralUnit.StructuralUnitType = VALUE(Enum.StructuralUnitsTypes.Warehouse)
		|					THEN InventoryAssemblyProducts.ProductsAndServices.InventoryGLAccount
		|				ELSE InventoryAssemblyProducts.ProductsAndServices.ExpensesGLAccount
		|			END
		|	END AS ProductsAccountCr,
		|	CASE
		|		WHEN FunctionalOptionInventoryReservation.Value
		|			THEN InventoryAssemblyProducts.CustomerOrder
		|		ELSE VALUE(Документ.CustomerOrder.ПустаяСсылка)
		|	END AS CustomerOrder,
		|	VALUE(Document.CustomerOrder.EmptyRef) AS CustomerCorrOrder,
		|	InventoryAssemblyProducts.Ref.ProductionOrder AS ProductionOrder,
		|	VALUE(Document.ProductionOrder.EmptyRef) AS ProductionCorrOrder,
		|	CASE
		|		WHEN InventoryAssemblyProducts.Ref.ProductionOrder = VALUE(Document.ProductionOrder.EmptyRef)
		|			THEN UNDEFINED
		|		ELSE InventoryAssemblyProducts.Ref.BasisDocument
		|	END AS SupplySource,
		|	CASE
		|		WHEN VALUETYPE(InventoryAssemblyProducts.MeasurementUnit) = TYPE(Catalog.UOMClassifier)
		|			THEN InventoryAssemblyProducts.Quantity
		|		ELSE InventoryAssemblyProducts.Quantity * InventoryAssemblyProducts.MeasurementUnit.Factor
		|	END AS Quantity,
		|	0 AS Amount,
		|	CAST(&amp;InventoryAssembly AS STRING(100)) AS ContentOfAccountingRecord,
		|	CAST(&amp;InventoryAssembly AS STRING(100)) AS Content,
		|	&amp;UpdateDateToRelease_1_2_1 AS UpdateDateToRelease_1_2_1,
		|	CASE
		|		WHEN СompletedByStages.ConnectionKey IS NULL
		|			THEN FALSE
		|		ELSE TRUE
		|	END AS UseStages,
		|	InventoryAssemblyProducts.CompletiveStageDepartment AS CompletiveStageDepartment,
		|	CASE
		|		WHEN NOT СompletedStages.Stage IS NULL
		|			THEN TRUE
		|		ELSE FALSE
		|	END AS CompletiveStage
		|INTO TemporaryTableProduction
		|FROM
		|	Document.InventoryAssembly.Products AS InventoryAssemblyProducts
		|		LEFT JOIN (SELECT
		|			СompletedStages.ConnectionKey AS ConnectionKey
		|		FROM
		|			TemporaryTableСompletedStages AS СompletedStages
		|		
		|		GROUP BY
		|			СompletedStages.ConnectionKey) AS СompletedByStages
		|		ON InventoryAssemblyProducts.ConnectionKey = СompletedByStages.ConnectionKey
		|		LEFT JOIN (SELECT
		|			InventoryAssemblyProducts.ConnectionKey AS ConnectionKey,
		|			ISNULL(TemporaryTableСompletedStages.Stage, VALUE(Справочник.ProductionStages.ProductionComplete)) AS Stage
		|		FROM
		|			Document.InventoryAssembly.Products AS InventoryAssemblyProducts
		|				LEFT JOIN TemporaryTableСompletedStages AS TemporaryTableСompletedStages
		|				ON InventoryAssemblyProducts.ConnectionKey = TemporaryTableСompletedStages.ConnectionKey
		|		WHERE
		|			InventoryAssemblyProducts.Ref = &amp;Ref
		|			AND ISNULL(TemporaryTableСompletedStages.Stage, VALUE(Справочник.ProductionStages.ProductionComplete)) = VALUE(Справочник.ProductionStages.ProductionComplete)) AS СompletedStages
		|		ON InventoryAssemblyProducts.ConnectionKey = СompletedStages.ConnectionKey,
		|	Constant.FunctionalOptionInventoryReservation AS FunctionalOptionInventoryReservation
		|WHERE
		|	InventoryAssemblyProducts.Ref = &amp;Ref";
		
		Query.SetParameter("Ref", InventoryAssemblyDocument);
		Query.SetParameter("UseCharacteristics", AdditionalProperties.AccountingPolicy.UseCharacteristics);
		Query.SetParameter("UseBatches",  AdditionalProperties.AccountingPolicy.UseBatches);
		Query.SetParameter("UseProductionStages", AdditionalProperties.AccountingPolicy.UseProductionStages);
		Query.SetParameter("AccountingByCells", AdditionalProperties.AccountingPolicy.AccountingByCells);
		Query.SetParameter("Company", AdditionalProperties.ForPosting.Company);
		// Temporarily: change motions by the order warehouse.
		UpdateDateToRelease_1_2_1 = Constants.UpdateDateToRelease_1_2_1.Get();
		Query.SetParameter("UpdateDateToRelease_1_2_1", UpdateDateToRelease_1_2_1);
		Query.SetParameter("InventoryAssembly", NStr("ru = 'Производство';
			|vi = 'Sản xuất';
			|en = 'Production'"));
		
		Query.Execute();
		
		Documents.InventoryAssembly.GenerateMaterialsDistributionTableAssembly(InventoryAssemblyDocument, AdditionalProperties);
		
		MaterialAllocationTableAssembly = AdditionalProperties.TableForRegisterRecords.TableMaterialsDistributionAssembly;
		
		Query = New Query;
		Query.Text = 
		"ВЫБРАТЬ
		|	ТаблицаРаспределенияМатериаловСборка.LineNumber КАК НомерСтроки,
		|	ТаблицаРаспределенияМатериаловСборка.ProductsAndServices КАК Номенклатура,
		|	ТаблицаРаспределенияМатериаловСборка.Quantity КАК Количество,
		|	ТаблицаРаспределенияМатериаловСборка.ProductsAndServicesCorr КАК Продукция
		|ПОМЕСТИТЬ ВТ_ТаблицаРаспределенияМатериаловСборка
		|ИЗ
		|	&amp;ТаблицаРаспределенияМатериаловСборка КАК ТаблицаРаспределенияМатериаловСборка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_ТаблицаРаспределенияМатериаловСборка.НомерСтроки) КАК НомерСтроки,
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_ТаблицаРаспределенияМатериаловСборка.Количество) КАК Количество,
		|	СУММА(ВТ_ТаблицаРаспределенияМатериаловСборка.Количество) КАК КоличествоМест,
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Продукция.ProductsAndServicesCategory КАК НоменклатурнаяГруппа,
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Номенклатура.MeasurementUnit КАК ЕдиницаИзмерения,
		|	МАКСИМУМ(1) КАК Коэффициент
		|ИЗ
		|	ВТ_ТаблицаРаспределенияМатериаловСборка КАК ВТ_ТаблицаРаспределенияМатериаловСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Номенклатура,
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Продукция.ProductsAndServicesCategory,
		|	ВТ_ТаблицаРаспределенияМатериаловСборка.Номенклатура.MeasurementUnit
		|
		|УПОРЯДОЧИТЬ ПО
		|	МАКСИМУМ(ВТ_ТаблицаРаспределенияМатериаловСборка.НомерСтроки)";
		
		Query.УстановитьПараметр("ТаблицаРаспределенияМатериаловСборка", MaterialAllocationTableAssembly);
		
		Selection = Query.Execute().Select();
		While Selection.Next() Do
			NewRow = ObjectsCollection.Add();
			FillPropertyValues(NewRow, Selection);
		EndDo;
		
	EndIf;
	
Else
	
	If Source.Inventory.Count() = 1 Then
		
		For Each TableRow In  Source.Products  Do
			ProductsType = CommonUse.ObjectAttributeValue(TableRow.ProductsAndServices, "ProductsAndServicesType");
			If ProductsType = Enums.ProductsAndServicesTypes.InventoryItem Then
				NewRow = ObjectsCollection.Add();
				FillPropertyValues(NewRow, TableRow);
				
				NewRow.Номенклатура = TableRow.ProductsAndServices;
				NewRow.Количество = TableRow.Quantity;
				NewRow.КоличествоМест = TableRow.Quantity;
				NewRow.НоменклатурнаяГруппа = CommonUse.ObjectAttributeValue(Source.Inventory[0].ProductsAndServices, "ProductsAndServicesCategory"); 
			EndIf;
		EndDo;
		
	Else
		
		InventoryAssemblyDocument = Source.Ref;
		
		AdditionalProperties = New Structure;
		SmallBusinessServer.InitializeAdditionalPropertiesForPosting(InventoryAssemblyDocument, AdditionalProperties);
		
		ResultsArray = New Array;
		Documents.InventoryAssembly.GenerateTemporaryTableProductionDiassembly(InventoryAssemblyDocument, AdditionalProperties, ResultsArray);
		ProductTable = ResultsArray[7].Unload();
		Documents.InventoryAssembly.GenerateMaterialsDistributionTableDisassembly(InventoryAssemblyDocument, AdditionalProperties, ProductTable);
		
		MaterialAllocationTableDisassembly = AdditionalProperties.TableForRegisterRecords.TableOfMaterialsDistributionDisassembling;
		
		Query = Новый Query;
		Query.Text = 
		"ВЫБРАТЬ
		|	ТаблицаРаспределенияМатериаловРазборка.LineNumber As НомерСтроки,
		|	ТаблицаРаспределенияМатериаловРазборка.ProductsAndServices As Номенклатура,
		|	ТаблицаРаспределенияМатериаловРазборка.Quantity As Количество,
		|	ТаблицаРаспределенияМатериаловРазборка.ProductsAndServicesCorr As Продукция
		|ПОМЕСТИТЬ Вт_ТаблицаРаспределенияМатериаловРазборка
		|ИЗ
		|	&amp;ТаблицаРаспределенияМатериаловРазборка КАК ТаблицаРаспределенияМатериаловРазборка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(Вт_ТаблицаРаспределенияМатериаловРазборка.НомерСтроки) КАК НомерСтроки,
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Номенклатура КАК Номенклатура,
		|	СУММА(Вт_ТаблицаРаспределенияМатериаловРазборка.Количество) КАК Количество,
		|	СУММА(Вт_ТаблицаРаспределенияМатериаловРазборка.Количество) КАК КоличествоМест,
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Продукция.ProductsAndServicesCategory КАК НоменклатурнаяГруппа,
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Номенклатура.MeasurementUnit КАК ЕдиницаИзмерения,
		|	МАКСИМУМ(1) КАК Коэффициент
		|ИЗ
		|	Вт_ТаблицаРаспределенияМатериаловРазборка КАК Вт_ТаблицаРаспределенияМатериаловРазборка
		|
		|СГРУППИРОВАТЬ ПО
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Номенклатура,
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Продукция.ProductsAndServicesCategory,
		|	Вт_ТаблицаРаспределенияМатериаловРазборка.Номенклатура.MeasurementUnit
		|
		|УПОРЯДОЧИТЬ ПО
		|	МАКСИМУМ(Вт_ТаблицаРаспределенияМатериаловРазборка.НомерСтроки)";
		
		Query.SetParameter("ТаблицаРаспределенияМатериаловРазборка", MaterialAllocationTableDisassembly);
		
		Selection = Query.Execute().Select();
		While Selection.Next() Do
			NewRow = ObjectsCollection.Add();
			FillPropertyValues(NewRow, Selection);
		КонецЦикла;
		
	КонецЕсли;
	
КонецЕсли;</Text>
				<Parameters>Source, ObjectsCollection</Parameters>
			</Algorithm>
			<Algorithm Name="FormNettingContract" UsedOnImport="false">
				<Text>
Contract = ?(TabSecDesc = "", Source.Contract, CollectionObject.ДоговорКонтрагента);
Counterparty = ?(TabSecDesc = "Дебитор", Source.CounterpartySource, Source.Counterparty);
	
If ValueIsFilled(Counterparty) Then
	
	
If Counterparty.DoOperationsByContracts &lt;&gt; True Then
	
	OCRName = "ДоговорыКонтрагентов";
	
	ContractKindsList = Catalogs.CounterpartyContracts.GetContractKindsListForDocument(Source, Source.OperationKind);
		
	If Contract.Company &lt;&gt; Source.Company
		Or ContractKindsList.FindByValue(Contract.ContractKind) = Undefined Then
			
		ContractProp = New Structure;
		ContractProp.Insert("Description", Contract.Description);
		ContractProp.Insert("Owner", Contract.Owner);
		ContractProp.Insert("Code","");
		ContractProp.Insert("Company", Source.Company);
		ContractProp.Insert("DeletionMark", Contract.DeletionMark);
		ContractProp.Insert("РасчетыВУсловныхЕдиницах", Contract.SettlementsInStandardUnits);
		ContractProp.Insert("SettlementsCurrency", Contract.SettlementsCurrency);
		ContractProp.Insert("ЭтоГруппа", Contract.IsFolder);
		ContractProp.Insert("ContractKind", Contract.ContractKind);
		ContractProp.Insert("ВидЦен", Contract.PriceKind);
		ContractProp.Insert("ContractDate", Contract.ContractDate);
		ContractProp.Insert("ContractNo", Contract.ContractNo);
		ContractProp.Insert("Parent", Неопределено);
		
		If ContractKindsList.Count() &gt; 0 Then
			ContractProp.ВидДоговора = ContractKindsList[0].Value;
		EndIf;
			
		Value = ContractProp;
			
	EndIf;
	
Else
	
	Value = Contract;
	OCRName = "ДоговорыКонтрагентовПоискПоИдентификатору";

EndIF;
EndIf;</Text>
				<Parameters>Source, CollectionObject, TabSecDesc, Value, OCRName</Parameters>
			</Algorithm>
			<Algorithm Name="FormTabularSectionInventory" UsedOnImport="false">
				<Text>// Algorithm предназначен формирования типовой табличной части Товары товарных документов
// Вызывается из обработчика события "перед обработкой" ПКГС

// Сформируем пустую таблицу для хранения товаров на основе типовой табличной части Товары

InvetoryTable = New ValueTable;
InvetoryTable.Columns.Add("Номенклатура");
InvetoryTable.Columns.Add("КоличествоМест");
InvetoryTable.Columns.Add("ЕдиницаИзмерения");
InvetoryTable.Columns.Add("Партия");
InvetoryTable.Columns.Add("Коэффициент");
InvetoryTable.Columns.Add("Количество");         
InvetoryTable.Columns.Add("Цена");
InvetoryTable.Columns.Add("Сумма");
InvetoryTable.Columns.Add("СтавкаНДС");
InvetoryTable.Columns.Add("СуммаНДС");
InvetoryTable.Columns.Add("КлючСтроки");

InvetoryTable.Columns.Add("СуммаВознаграждения");
InvetoryTable.Columns.Add("СуммаНДСВознаграждения");
InvetoryTable.Columns.Add("СуммаПередачи");
InvetoryTable.Columns.Add("ЦенаПередачи");

SourceTable = Source.Inventory.Unload();

n = 1;

// Заполним результирующую таблицу из табличной части Товары номенклатурой, отличной от услуг 
For Each TableRow In SourceTable Do
	If Parameters.SettingVariant = "Accounting4" Then
	
		NewRow = InvetoryTable.Add();
		NewRow.Номенклатура 		 = TableRow.ProductsAndServices;
		NewRow.КоличествоМест 		 = TableRow.Quantity;
		NewRow.ЕдиницаИзмерения	 = TableRow.MeasurementUnit;
		NewRow.Партия                   =  TableRow.Batch;
		NewRow.Коэффициент 			 = 1;
		NewRow.Количество 			 = TableRow.Quantity;
		NewRow.Цена 						 = TableRow.Price;
		NewRow.Сумма 					 = TableRow.Amount;
		NewRow.СтавкаНДС 			 = TableRow.VATRate;
		NewRow.СуммаНДС 				 = TableRow.VATAmount;
		
		If Not SourceTable.Columns.Find("BrokerageAmount") = Undefined Then 
			NewRow.СуммаВознаграждения 		= TableRow.BrokerageAmount;
			NewRow.СуммаНДСВознаграждения 	= TableRow.BrokerageVATAmount;
			NewRow.СуммаПередачи 					= TableRow.TransmissionAmount;
			NewRow.ЦенаПередачи 					= TableRow.TransmissionPrice;	
		EndIf;

	Else

		Если TableRow.ProductsAndServices.ProductsAndServicesType = Enums.ProductsAndServicesTypes.InventoryItem Then
			NewRow = InvetoryTable.Add();
			
		//	FillPropertyValues(NewRow, TableRow);
			
			NewRow.Номенклатура 		 = TableRow.ProductsAndServices;
			NewRow.КоличествоМест 		 = TableRow.Quantity;
			NewRow.ЕдиницаИзмерения	 = TableRow.MeasurementUnit;
			NewRow.Партия                   =  TableRow.Batch;
			NewRow.Коэффициент 			 = 1;
			NewRow.Количество 			 = TableRow.Quantity;
			NewRow.Цена 						 = TableRow.Price;
			NewRow.Сумма 					 = TableRow.Amount;
			NewRow.СтавкаНДС 			 = TableRow.VATRate;
			NewRow.СуммаНДС 				 = TableRow.VATAmount;
			
			If n = 1 Then
				NewRow.КлючСтроки = 1;
			Else
				NewRow.КлючСтроки = NewRow.КлючСтроки + 1;
			EndIf;
			
			If Not SourceTable.Columns.Find("BrokerageAmount") = Undefined Then 
				NewRow.СуммаВознаграждения 		= TableRow.BrokerageAmount;
				NewRow.СуммаНДСВознаграждения 	= TableRow.BrokerageVATAmount;
				NewRow.СуммаПередачи 					= TableRow.TransmissionAmount;
				NewRow.ЦенаПередачи 					= TableRow.TransmissionPrice;
			EndIf;

			
		EndIf;
	EndIf;

EndDo;

// Инициализируем коллекцию заполненной таблицей, чтобы не выполнялось стандартного получения коллекции. 
ObjectsCollection = InvetoryTable;</Text>
				<Parameters>ObjectsCollection, Source</Parameters>
			</Algorithm>
			<Algorithm Name="FormTabularSectionServices" UsedOnImport="false">
				<Text>// Algorithm предназначен формирования типовой табличной части Услуги товарных документов
// Вызывается из обработчика события "перед обработкой" ПКГС

// Сформируем пустую таблицу для хранения услуг на основе типовой табличной части Товары
ServiceTable = New ValueTable;
ServiceTable.Columns.Add("Количество");
ServiceTable.Columns.Add("Номенклатура");
ServiceTable.Columns.Add("ЕдиницаИзмерения");
ServiceTable.Columns.Add("Сумма");
ServiceTable.Columns.Add("Цена");
ServiceTable.Columns.Add("СтавкаНДС");
ServiceTable.Columns.Add("СуммаНДС");
ServiceTable.Columns.Add("Содержание");

//= Source.Запасы.ВыгрузитьКолонки();
TableSource = Source.Inventory;

// Заполним результирующую таблицу из табличной части Товары только услугами 
For Each TableRow In TableSource Do
	If TableRow.ProductsAndServices.ProductsAndServicesType = Enums.ProductsAndServicesTypes.Service 
		Or TableRow.ProductsAndServices.ProductsAndServicesType = Enums.ProductsAndServicesTypes.Work Then
	
		NewRow = ServiceTable.Add();
	//	FillPropertyValues(NewRow, TableRow);
		
		NewRow.Количество = TableRow.Quantity;
		NewRow.Номенклатура = TableRow.ProductsAndServices;
		NewRow.ЕдиницаИзмерения = TableRow.ProductsAndServices.MeasurementUnit;
		NewRow.Сумма = TableRow.Amount;
		NewRow.Цена = TableRow.Price;
		NewRow.СтавкаНДС = TableRow.VATRate;
		NewRow.СуммаНДС = TableRow.VATAmount;
		NewRow.Содержание = TableRow.Content;
		
	EndIf;
EndDo;

// Инициализируем коллекцию заполненной таблицей, чтобы не выполнялось стандартного получения коллекции
ObjectsCollection = ServiceTable;</Text>
				<Parameters>ObjectsCollection, Source</Parameters>
			</Algorithm>
		</Group>
		<Group Name="Import">
			<Group Name="_DocumetFilling">
			<Algorithm Name="ЗаполнениеОтражениеВУСН" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ТабличнаяЧасть

Если УчетнаяПолитика.Существует(Объект.Организация, Объект.Дата, Истина, Объект.Ссылка) Тогда
	
	ВариантОтраженияУСН = ?(УчетнаяПолитика.ПрименяетсяУСН(Объект.Организация, Объект.Дата) И
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, Объект.Дата),
		Перечисления.ОтражениеВУСН.Принимаются, Перечисления.ОтражениеВУСН.ПустаяСсылка());
	
	// Заполняем отражение в УСН для ТЧ
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОтражениеВУСН) Или ВариантОтраженияУСН = Перечисления.ОтражениеВУСН.ПустаяСсылка() Тогда
			СтрокаТаблицы.ОтражениеВУСН = ВариантОтраженияУСН;
		КонецЕсли;
	КонецЦикла;
	
КонецЕсли;</Text>
					<Параметры>Объект, ТабличнаяЧасть</Параметры>
				</Algorithm>
				<Algorithm Name="ОбработатьАвансовыйОтчет" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
	
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																						СтрокаТаблицы.Номенклатура,
																						Объект.Склад);
																						
		Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
			СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) Тогда
			СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
		КонецЕсли;
		
		Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
			СтрокаТаблицы.СпособУчетаНДС = ?(СтрокаТаблицы.ПредъявленСФ,
				СчетаУчета.СпособУчетаНДС, Перечисления.СпособыУчетаНДС.Списывается);
		ИначеЕсли Не СтрокаТаблицы.ПредъявленСФ Тогда 
			СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Списывается;	
		ИначеЕсли СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Списывается Тогда
			СтрокаТаблицы.СпособУчетаНДС = Неопределено;	
		КонецЕсли;
		
КонецЦикла;

Для Каждого СтрокаТаблицы Из Объект.Прочее Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																					СтрокаТаблицы.Номенклатура,
																					Объект.Склад);
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатрат) Тогда
		СтрокаТаблицы.СчетЗатрат = СчетаУчета.СчетУчета;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.Субконто1) Тогда
		СтрокаТаблицы.Субконто1 = СчетаУчета.Субконто1;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.Субконто2) Тогда
		СтрокаТаблицы.Субконто2 = СчетаУчета.Субконто2;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.Субконто3) Тогда
		СтрокаТаблицы.Субконто3 = СчетаУчета.Субконто3;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатратНУ) Тогда
		СтрокаТаблицы.СчетЗатратНУ = СчетаУчета.СчетУчета;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ1) Тогда
		СтрокаТаблицы.СубконтоНУ1 = СчетаУчета.Субконто1;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ2) Тогда
		СтрокаТаблицы.СубконтоНУ2 = СчетаУчета.Субконто2;
	КонецЕсли;
	Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ3) Тогда
		СтрокаТаблицы.СубконтоНУ3 = СчетаУчета.Субконто3;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) 
		И СтрокаТаблицы.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда
		СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
	КонецЕсли;
	
	Для каждого СтрокаВидыСубконто Из СчетаУчета.СчетУчета.ВидыСубконто Цикл
		
		Если ValueIsFilled(СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки]) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеТиповВидаСубконто = СтрокаВидыСубконто.ВидСубконто.ТипValues;
		Если ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.СтатьиЗатрат")) Тогда
			СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
		ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.ПрочиеДоходыИРасходы")) Тогда
			СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ПрочиеВнереализационныеДоходыРасходы");
		ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.НоменклатурныеГруппы")) Тогда
			СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "НоменклатурнаяГруппа");
		КонецЕсли;
		
		СтрокаТаблицы["СубконтоНУ" + СтрокаВидыСубконто.НомерСтроки] = СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки];
	КонецЦикла;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
		СтрокаТаблицы.СпособУчетаНДС = ?(СтрокаТаблицы.ПредъявленСФ,
		СчетаУчета.СпособУчетаНДС, Перечисления.СпособыУчетаНДС.Списывается);
	ИначеЕсли Не СтрокаТаблицы.ПредъявленСФ Тогда 
		СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Списывается;	
	ИначеЕсли СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.Списывается Тогда
		СтрокаТаблицы.СпособУчетаНДС = Неопределено;	
	КонецЕсли;
	
КонецЦикла;	

ПараметрыТЧ = Неопределено;
Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ПрочееТабличнаяЧасть");
	Если ПараметрыТЧ &lt;&gt; Неопределено 
		И ПараметрыТЧ.Колонки.Найти("ПроизводственныйРасход") &lt;&gt; Неопределено Тогда
		
		Для каждого СтрокаТаблицы Из Объект.Прочее Цикл	
			
			Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатрат) Тогда
				Если ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ПроизводственныйРасход Тогда
				////	СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы;
				////Иначе
				////	СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
				// 1VS - Thay
					СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíQuảnLýDoanhNghiệp;
				Иначе
					СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíBánHàng;
				// 1VS				
				КонецЕсли;
				СтрокаТаблицы.Субконто1 = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "СтатьяЗатрат");
				
				СтрокаТаблицы.СчетЗатратНУ = СтрокаТаблицы.СчетЗатрат;
				СтрокаТаблицы.СубконтоНУ1 = СтрокаТаблицы.Субконто1;
				
				Если Не ValueIsFilled(СтрокаТаблицы.Субконто1) Тогда
					СтрокаТаблицы.Субконто1 = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
					СтрокаТаблицы.СубконтоНУ1 = СтрокаТаблицы.Субконто1;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) 
				И СтрокаТаблицы.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда
				
				СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
				СтрокаТаблицы.Номенклатура,
				Объект.Склад);
				СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецЕсли;
	
Для Каждого СтрокаТаблицы Из Объект.ОплатаПоставщикам Цикл
	
	РеквизитыДоговораКонтрагента = ОщегоНазначения.ПолучитьValuesРеквизитов(СтрокаТаблицы.ДоговорКонтрагента, "Владелец,ВалютаВзаиморасчетов");
	
	Если ValueIsFilled(СтрокаТаблицы.ДоговорКонтрагента) И Не ValueIsFilled(СтрокаТаблицы.Контрагент) Тогда
		СтрокаТаблицы.Контрагент = РеквизитыДоговораКонтрагента.Владелец;
	КонецЕсли;
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация,
		СтрокаТаблицы.Контрагент,
		СтрокаТаблицы.ДоговорКонтрагента);
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаРасчетовПоАвансам) Тогда
		СтрокаТаблицы.СчетУчетаРасчетовПоАвансам   = СчетаУчета.СчетАвансов;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаРасчетовСКонтрагентом) Тогда
		Если СтрокаТаблицы.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаТаблицы.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
		Иначе
			СтрокаТаблицы.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.Сделка) Тогда
		СтрокаТаблицы.Сделка = Неопределено;
	КонецЕсли;
	
КонецЦикла;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);

ТабличнаяЧасть = Объект.Товары;
Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);

ТабличнаяЧасть = Объект.Прочее;
Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьАктОбОказанииПроизводственныхУслуг" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

// Заполним счета учета затрат
Если Не ValueIsFilled(Объект.СчетЗатрат) Тогда
	////Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
	Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíSảnXuấtKinhDoanh_Chính;	// 1VS
КонецЕсли;

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);
Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
КонецЕсли;

Если Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически
	ИЛИ Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
	
	Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;
	
Иначе
	Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
КонецЕсли;

ТабличнаяЧасть = Объект.Услуги;
ЭтоУслуги      = Истина;
ЕстьКомиссия   = Ложь;
Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);

Для каждого СтрокаТаблицы Из Объект.Услуги Цикл
	
	Если Не ValueIsFilled(СтрокаТаблицы.СуммаПлановая) Тогда
		Ценообразование.ЗаполнитьПлановуюСебестоимость(СтрокаТаблицы, Объект.Дата);
		ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьПлановуюСумму(СтрокаТаблицы, 1);
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СуммаПлановая) Тогда
		СтрокаТаблицы.ПлановаяСтоимость = СтрокаТаблицы.Цена;
		СтрокаТаблицы.СуммаПлановая = СтрокаТаблицы.Сумма;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.Спецификация) Тогда
		СтрокаТаблицы.Спецификация = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "ОсновнаяСпецификацияНоменклатуры");
	КонецЕсли;
	
КонецЦикла;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьВозвратТоваровОтПокупателя" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);
Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда	
	Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
КонецЕсли;	

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоТаре) Тогда	
	Объект.СчетУчетаРасчетовПоТаре = СчетаУчета.СчетУчетаТарыПокупателя;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаНДС) Тогда
	////Объект.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымМПЗ;
	Объект.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.ThuếGTGTĐượcKhấuTrừ_HàngHóaDịchVụ;	// 1VS
КонецЕсли;

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ТоварыТабличнаяЧасть");
	Если ПараметрыТЧ &lt;&gt; Неопределено И ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено Тогда
		
		Для каждого СтрокаТаблицы Из Объект.Товары Цикл	
			
			Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета)
				И ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ТоварНаКомиссии Тогда
				////СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
				СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.HàngHóaNhậnBánHộNhậnGiữHộKýCược_TrongKho;	// 1VS
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
	
	Если Не ValueIsFilled(СтрокаТаблицы.Номенклатура) Тогда
		Продолжить;
	КонецЕсли; 
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																					СтрокаТаблицы.Номенклатура,
																					Объект.Склад);
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
		СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.ПереданныеСчетУчета) Тогда
		СтрокаТаблицы.ПереданныеСчетУчета = СчетаУчета.СчетПередачи;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетДоходов) Тогда
		СтрокаТаблицы.СчетДоходов = СчетаУчета.СчетДоходов;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетРасходов) Тогда
		СтрокаТаблицы.СчетРасходов = СчетаУчета.СчетРасходов;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДСПоРеализации) Тогда
		СтрокаТаблицы.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;
	
	Если ValueIsFilled(СтрокаТаблицы.СчетДоходов) Тогда
		PropertiesСчетаДоходов = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьPropertiesСчета(СтрокаТаблицы.СчетДоходов);
		Если PropertiesСчетаДоходов.КоличествоСубконто &gt; 0 Тогда
			СтрокаТаблицы.Субконто = PropertiesСчетаДоходов.ВидСубконто1ТипValues.ПривестиValue(СтрокаТаблицы.Субконто);
			Если ТипЗнч(СтрокаТаблицы.Субконто) = Тип("CatalogRef.НоменклатурныеГруппы") Тогда
				СтрокаТаблицы.Субконто = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "НоменклатурнаяГруппа");
			КонецЕсли;
		Иначе
			СтрокаТаблицы.Субконто = Неопределено;
		КонецЕсли;
	Иначе
		СтрокаТаблицы.Субконто = Неопределено;
	КонецЕсли;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
		СтрокаТаблицы.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
	КонецЕсли;

КонецЦикла;

ТабличнаяЧасть = Объект.Товары;
Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);

Выполнить(Algorithms.ЗаполнитьСчетаУчетаВозвратнойТары);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьВозвратТоваровПоставщику" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоПретензиям) Тогда
	Объект.СчетУчетаРасчетовПоПретензиям = СчетаУчета.СчетРасчетовПоПретензиям;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоТаре) Тогда
	Объект.СчетУчетаРасчетовПоТаре = СчетаУчета.СчетУчетаТары;
КонецЕсли;

ТоварыНаКомиссии = Неопределено;

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ТоварыТабличнаяЧасть");
	Если ПараметрыТЧ &lt;&gt; Неопределено 
		И ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено Тогда
		
		ТоварыНаКомиссии = ПараметрыТЧ;
	КонецЕсли;
КонецЕсли;
	
Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
	
	Если ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
		Продолжить;
	КонецЕсли;
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																					СтрокаТаблицы.Номенклатура,
																					Объект.Склад);
	
	ЭтоКомиссия = Ложь;
	Если Объект.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ПокупкаКомиссия Тогда
		
		Если ТоварыНаКомиссии &lt;&gt; Неопределено
			И ТоварыНаКомиссии[СтрокаТаблицы.НомерСтроки - 1].ТоварНаКомиссии Тогда
			
			ЭтоКомиссия = Истина;
		КонецЕсли;
		
		Если СчетаУчета.СчетУчетаЯвляетсяЗабалансовым = ЭтоКомиссия Тогда
			СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
		КонецЕсли;
		
		Если ЭтоКомиссия И НЕ СчетаУчета.СчетУчетаЯвляетсяЗабалансовым Тогда
			СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Иначе
			СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
		КонецЕсли;
		
		Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
			////СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
			СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.HàngHóaNhậnBánHộNhậnGiữHộKýCược_TrongKho;		// 1VS
		КонецЕсли;
		
		СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ИзПереработки Тогда
		
		СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчетаДавСырья;
		
	Иначе
		
		Если НЕ СчетаУчета.СчетУчетаЯвляетсяЗабалансовым Тогда
			СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
		КонецЕсли;
		
		СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
		
	КонецЕсли;
	
КонецЦикла;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);

Выполнить(Algorithms.ЗаполнитьСчетаУчетаВозвратнойТары);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьЗаполнениеДокументаПослеЗагрузки" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ИмяПКО
// - ПараметрыОбъекта

Попытка
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.АвансовыйОтчет") Тогда

		Выполнить(Algorithms.ОбработатьАвансовыйОтчет);
					
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда

		Выполнить(Algorithms.ОбработатьПоступлениеТоваров);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеДопРасходов") Тогда

		Выполнить(Algorithms.ОбработатьПоступлениеДопРасходов);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		
		Выполнить(Algorithms.ОбработатьВозвратТоваровПоставщику);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		Выполнить(Algorithms.ОбработатьРеализацияТоваров);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг") Тогда
		
		Выполнить(Algorithms.ОбработатьАктОбОказанииПроизводственныхУслуг);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ТребованиеНакладная") Тогда
		
		Выполнить(Algorithms.ОбработатьТребованиеНакладная);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ОтчетПроизводстваЗаСмену") Тогда
		
		Выполнить(Algorithms.ОбработатьОтчетПроизводстваЗаСмену);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ОтчетКомиссионераОПродажах") Тогда
		
		Выполнить(Algorithms.ОбработатьОтчетКомиссионераОПродажах);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ОтчетКомитентуОПродажах") Тогда
		
		Выполнить(Algorithms.ОбработатьОтчетКомитентуОПродажах);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
		
		Выполнить(Algorithms.ОбработатьВозвратТоваровОтПокупателя);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеИзПереработки") Тогда
		
		Выполнить(Algorithms.ОбработатьПоступлениеИзПереработки);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.РеализацияУслугПоПереработке") Тогда
		
		Выполнить(Algorithms.ОбработатьРеализацияУслугПоПереработке);
		                                                                      
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПередачаТоваров") Тогда
		
		Выполнить(Algorithms.ОбработатьПередачаТоваров);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ОприходованиеТоваров") Тогда
		
		Выполнить(Algorithms.ОбработатьОприходованиеТоваров);
		                                                                                         
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СписаниеТоваров") Тогда
		
		Выполнить(Algorithms.ОбработатьСписаниеТоваров);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		Выполнить(Algorithms.ОбработатьОтчетОРозничныхПродажах);

	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.КорректировкаДолга") Тогда
		
		Выполнить(Algorithms.ОбработатьКорректировкаДолга);
		
	КонецЕсли;
	
Исключение
	ЗарегистрироватьПредупреждение(НСтр("ru='Ошибка при выполнении отложенного заполнения. Правила конвертации: ';vi='Lỗi khi thực hiện hoãn điền. Quy tắc chuyển đổi:'")+Объект);
КонецПопытки</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьКорректировкаДолга" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

Если Объект.ДебиторскаяЗадолженность.Количество()&gt;0 Тогда
	
	ИмяТЧ = "ДебиторскаяЗадолженность";
	Выполнить(Algorithms.ОбработатьТабличнуюЧастьДокументКорректировкаДолга);
	
КонецЕсли;

Если Объект.КредиторскаяЗадолженность.Количество()&gt;0 Тогда
	
	ИмяТЧ = "КредиторскаяЗадолженность";
	Выполнить(Algorithms.ОбработатьТабличнуюЧастьДокументКорректировкаДолга);
	
КонецЕсли;

Если Объект.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности Тогда
	
	Если Объект.ДебиторскаяЗадолженность.Количество() &gt; 0
		И Объект.КредиторскаяЗадолженность.Количество() = 0
		И Не ValueIsFilled(Объект.СчетДт) Тогда
		
		////Объект.СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
		Объект.СчетДт = ПланыСчетов.Хозрасчетный.ChiPhíKhác;		// 1VS
		
	ИначеЕсли Объект.ДебиторскаяЗадолженность.Количество() = 0
		И Объект.КредиторскаяЗадолженность.Количество() &gt; 0
		И Не ValueIsFilled(Объект.СчетКт) Тогда
		
		////Объект.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		Объект.СчетКт = ПланыСчетов.Хозрасчетный.ThuNhậpKhác; 		// 1VS
		
	КонецЕсли
	
КонецЕсли;

Если Объект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
	Объект.СуммаДтЗадолженности = Объект.ДебиторскаяЗадолженность.Итог("Сумма");
	Объект.СуммаКтЗадолженности = Объект.КредиторскаяЗадолженность.Итог("Сумма");
Иначе
	Объект.СуммаДтЗадолженности = Объект.ДебиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
	Объект.СуммаКтЗадолженности = Объект.КредиторскаяЗадолженность.Итог("СуммаВзаиморасчетов");
	
	Если Объект.ДебиторскаяЗадолженность.Количество() &gt; 0
		И ValueIsFilled(Объект.ДебиторскаяЗадолженность[0].ДоговорКонтрагента) Тогда
		
		Объект.ВалютаДокумента = Объект.ДебиторскаяЗадолженность[0].ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Объект.КурсДокумента	   = Объект.ДебиторскаяЗадолженность[0].КурсВзаиморасчетов;
		Объект.КратностьДокумента  = Объект.ДебиторскаяЗадолженность[0].КратностьВзаиморасчетов;
		
	ИначеЕсли Объект.КредиторскаяЗадолженность.Количество() &gt; 0
		И ValueIsFilled(Объект.КредиторскаяЗадолженность[0].ДоговорКонтрагента) Тогда
		
		Объект.ВалютаДокумента = Объект.КредиторскаяЗадолженность[0].ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Объект.КурсДокумента	   = Объект.КредиторскаяЗадолженность[0].КурсВзаиморасчетов;
		Объект.КратностьДокумента  = Объект.КредиторскаяЗадолженность[0].КратностьВзаиморасчетов;
		
	КонецЕсли;	
	
КонецЕсли;

Если Не ValueIsFilled(Объект.ВидОперации) Тогда
	Объект.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.Прочее;
КонецЕсли;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьОприходованиеТоваров" UsedOnImport="true">
					<Text>
// Параметры:
// - Объект
// - ПараметрыОбъекта

Если Не ValueIsFilled(Объект.СтатьяПрочихДоходовРасходов) Тогда
	Объект.СтатьяПрочихДоходовРасходов = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ОприходованиеИзлишков");
КонецЕсли;

Если Не ValueIsFilled(Объект.СтатьяПрочихДоходовРасходов) Тогда
	Объект.СтатьяПрочихДоходовРасходов = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ПрочиеВнереализационныеДоходыРасходы");
КонецЕсли;

Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																						СтрокаТаблицы.Номенклатура,
																						Объект.Склад);
		СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьОтчетКомиссионераОПродажах" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

Документы.ОтчетКомиссионераОПродажах.ЗаполнитьСчетаУчетаРасчетов(,Ложь,Объект);

ТабличнаяЧасть = Объект.Товары;
ЭтоУслуги      = Ложь;
ЕстьКомиссия   = Ложь;
Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);

ТабличнаяЧасть = Объект.Услуги;
ЭтоУслуги      = Истина;
ЕстьКомиссия   = Ложь;
Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);

Если Не ValueIsFilled(Объект.СчетУчетаЗатрат) Тогда
	////Объект.СчетУчетаЗатрат = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
	Объект.СчетУчетаЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíBánHàng;		// 1VS
	СчетУчета = Объект.СчетУчетаЗатрат;
	Выполнить(Algorithms.ПривестиСубконтоВСоответствиеСчетуУчета);
КонецЕсли;

Если Не ValueIsFilled(Объект.Субконто1) Тогда
	Объект.Субконто1 = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.УслугиКомиссионеров");
КонецЕсли;

Если Не ValueIsFilled(Объект.Субконто1) Тогда
	Объект.Субконто1 = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
КонецЕсли;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьОтчетКомитентуОПродажах" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);
	
Если НЕ ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
КонецЕсли;

Если НЕ ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
	Если Объект.УдержатьВознаграждение Тогда
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетРасчетовСКомитентом;
	Иначе
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	КонецЕсли;
КонецЕсли;

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																				Объект.УслугаПоВознаграждению);

Если Не ValueIsFilled(Объект.СчетУчетаНДСПоРеализации) Тогда
	Объект.СчетУчетаНДСПоРеализации = СчетаУчета.СчетУчетаНДСПродажи;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетДоходов) Тогда
	Объект.СчетДоходов = СчетаУчета.СчетДоходов;
КонецЕсли;

Если Объект.СчетДоходов.ВидыСубконто.Количество() &gt; 0 Тогда
	Если Объект.СчетДоходов.ВидыСубконто[0].ВидСубконто.ТипValues.СодержитТип(ТипЗнч(Объект.Субконто)) Тогда
		//Не надо менять, Value подходит
	Иначе
		Объект.Субконто = Новый(Объект.СчетДоходов.ВидыСубконто[0].ВидСубконто.ТипValues.Типы()[0])
	КонецЕсли;
Иначе
	Объект.Субконто = Неопределено;
КонецЕсли;

Если ТипЗнч(Объект.Субконто) = Тип("CatalogRef.НоменклатурныеГруппы") 
   И ValueIsFilled(Объект.УслугаПоВознаграждению) 
   И ValueIsFilled(Объект.УслугаПоВознаграждению.НоменклатурнаяГруппа) Тогда

	Объект.Субконто = Объект.УслугаПоВознаграждению.НоменклатурнаяГруппа;

КонецЕсли;

Если Не ValueIsFilled(Объект.УслугаПоВознаграждению) Тогда
	 Объект.УслугаПоВознаграждению = Параметры.УзелОбменаЗагрузкаДанных.УслугаПоВознаграждению;
 КонецЕсли;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьОтчетОРозничныхПродажах" UsedOnImport="true">
					<Text>
// Параметры:
// - Объект
// - ПараметрыОбъекта

Выполнить(Algorithms.ЗаполнитьСчетУчетаКассы);

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ТоварыТабличнаяЧасть");
	Если ПараметрыТЧ &lt;&gt; Неопределено И ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено Тогда
		
		Для каждого СтрокаТаблицы Из Объект.Товары Цикл
			
			Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета)
				И ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ТоварНаКомиссии Тогда
				////СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
				СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.HàngHóaNhậnBánHộNhậnGiữHộKýCược_TrongKho;		// 1VS
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

ТабличнаяЧасть = Объект.Товары;
ЭтоУслуги      = Ложь;
ЕстьКомиссия   = Ложь;

Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);

Для Каждого СтрокаТаблицы Из Объект.Оплата Цикл
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																						СтрокаТаблицы.Контрагент,
																						СтрокаТаблицы.ДоговорКонтрагента);
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаРасчетов) Тогда
		Если Не ValueIsFilled(СтрокаТаблицы.ВидОплаты.СчетУчетаРасчетов) Тогда
			СтрокаТаблицы.СчетУчетаРасчетов = СчетаУчета.СчетРасчетов;
		Иначе
			СтрокаТаблицы.СчетУчетаРасчетов = СтрокаТаблицы.ВидОплаты.СчетУчетаРасчетов;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьОтчетПроизводстваЗаСмену" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

// Заполним реквизиты шапки
Если Не ValueIsFilled(Объект.СчетЗатрат) Тогда
	////Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
	Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíSảnXuấtKinhDoanh_Chính;	// 1VS
КонецЕсли;

Если Не ValueIsFilled(Объект.НДСвСтоимостиТоваров) Тогда
	Объект.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
КонецЕсли;

Объект.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат = Истина;

// Заполним необходимые реквизиты в табличной части Продукция
Для каждого ТекСтрока Из Объект.Продукция Цикл
	
	ПлановаяСтоимость = ТекСтрока.ПлановаяСтоимость;
	СуммаПлановая = ТекСтрока.СуммаПлановая;
	Ценообразование.ЗаполнитьПлановуюСебестоимость(ТекСтрока, Объект.Дата);
	ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьПлановуюСумму(ТекСтрока);
	Если ТекСтрока.СуммаПлановая = 0 Тогда
		ТекСтрока.ПлановаяСтоимость = ПлановаяСтоимость;
		ТекСтрока.СуммаПлановая = СуммаПлановая;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.Счет) Тогда
		СчетаУчета						= БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
		ТекСтрока.Счет					= СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.НоменклатурнаяГруппа) Тогда
		ТекСтрока.НоменклатурнаяГруппа	= ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "НоменклатурнаяГруппа");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.Спецификация) Тогда
		ТекСтрока.Спецификация 			= ТекСтрока.Номенклатура.ОсновнаяСпецификацияНоменклатуры;
	КонецЕсли;
	
КонецЦикла;

// Заполним необходимые реквизиты в табличной части Услуги
Для каждого ТекСтрока Из Объект.Услуги Цикл
	
	ПлановаяСтоимость = ТекСтрока.ПлановаяСтоимость;
	СуммаПлановая = ТекСтрока.СуммаПлановая;
	Ценообразование.ЗаполнитьПлановуюСебестоимость(ТекСтрока, Объект.Дата);
	ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьПлановуюСумму(ТекСтрока);
	Если ТекСтрока.СуммаПлановая = 0 Тогда
		ТекСтрока.ПлановаяСтоимость = ПлановаяСтоимость;
		ТекСтрока.СуммаПлановая = СуммаПлановая;
	КонецЕсли;
	
	СчетаУчета 						= БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	ТекСтрока.Счет 					= СчетаУчета.СчетУчета;
	ТекСтрока.Субконто1 			= СчетаУчета.Субконто1;
	ТекСтрока.Субконто2 			= СчетаУчета.Субконто2;
	ТекСтрока.Субконто3 			= СчетаУчета.Субконто3;
	
	Если Не ValueIsFilled(ТекСтрока.НоменклатурнаяГруппа) Тогда
		ТекСтрока.НоменклатурнаяГруппа 	= ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "НоменклатурнаяГруппа");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.Спецификация) Тогда
		ТекСтрока.Спецификация 			= ТекСтрока.Номенклатура.ОсновнаяСпецификацияНоменклатуры;
	КонецЕсли;
	
КонецЦикла;

// Заполним необходимые реквизиты в табличной части Материалы
Для каждого ТекСтрока Из Объект.Материалы Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	
	Если Не ValueIsFilled(ТекСтрока.Счет) Тогда
		ТекСтрока.Счет					= СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.ОтражениеВУСН 		= Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 			= ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "СтатьяЗатрат");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 			= ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.СписаниеМатериалов");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 			= ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.НоменклатурнаяГруппа) Тогда
		ТекСтрока.НоменклатурнаяГруппа	= ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "НоменклатурнаяГруппа");
	КонецЕсли;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
		ТекСтрока.СпособУчетаНДС		= СчетаУчета.СпособУчетаНДС;
	КонецЕсли;
	
КонецЦикла;

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ВозвратныеОтходыТабличнаяЧасть");
КонецЕсли;

// Заполним необходимые реквизиты в табличной части Возвратные отходы
Для каждого ТекСтрока Из Объект.ВозвратныеОтходы Цикл
	
	ТипЦенПлановойСебестоимости   = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
	ВалютаРеглментированногоУчета = Параметры.ВалютаРегламентированногоУчета;
	
	Если ValueIsFilled(ТипЦенПлановойСебестоимости) Тогда
		ТекСтрока.Цена = Ценообразование.ПолучитьЦенуНоменклатуры(
			ТекСтрока.Номенклатура,
			ТипЦенПлановойСебестоимости,
			Объект.Дата,
			ВалютаРеглментированногоУчета,
			1
		);
	КонецЕсли;
	
	ТекСтрока.Сумма = ТекСтрока.Количество * ТекСтрока.Цена;
	
	Если Не ValueIsFilled(ТекСтрока.Счет) Тогда
		СчетаУчета					= БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
		ТекСтрока.Счет				= СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если ПараметрыОбъекта &lt;&gt; Неопределено 
		И ПараметрыТЧ.Колонки.Найти("ТоварВПереработке") &lt;&gt; Неопределено
		И ПараметрыТЧ[ТекСтрока.НомерСтроки - 1].ТоварВПереработке Тогда
		
		////ТекСтрока.Счет 				= ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;
		ТекСтрока.Счет 				= ПланыСчетов.Хозрасчетный.VậtTưHàngHóaNhậnGiữHộNhậnGiaCông_ĐangGiaCông;		// 1VS
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 		= ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "СтатьяЗатрат");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 		= ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.СписаниеМатериалов");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат 		= ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.НоменклатурнаяГруппа) Тогда
		ТекСтрока.НоменклатурнаяГруппа = ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "НоменклатурнаяГруппа");
	КонецЕсли;
	
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьПередачаТоваров" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоТаре) Тогда
	Объект.СчетУчетаРасчетовПоТаре = СчетаУчета.СчетУчетаТарыПокупателя;
КонецЕсли;

Для каждого ТекСтрока Из Объект.Товары Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	
	Если Не ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		ТекСтрока.СчетУчета		= СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СчетПередачи) Тогда
		ТекСтрока.СчетПередачи	= ?(Объект.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ВПереработку, СчетаУчета.СчетПередачи, СчетаУчета.СчетУчета);
	КонецЕсли;
	
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьПоступлениеДопРасходов" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
	Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансов;
КонецЕсли;

Если Объект.Товары.Количество()&gt;0 Тогда
	ТабличнаяЧасть = Объект.Товары;
	Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);
КонецЕсли;

//Заполним табличную часть "Товары"
Для Каждого СтрокаТаблицы Из Объект.Товары Цикл

	Если Не ValueIsFilled(СтрокаТаблицы.Номенклатура) Тогда
		Продолжить;
	КонецЕсли;

	Если Не ValueIsFilled(СтрокаТаблицы.ОтражениеВУСН) Тогда
		СтрокаТаблицы.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;

	// Заполнение счетов учета номенклатуры
	Склад = Неопределено;
	Если ValueIsFilled(СтрокаТаблицы.ДокументПартии) И ОщегоНазначенияБПВызовСервера.ЕстьРеквизитДокумента("Склад", СтрокаТаблицы.ДокументПартии.Метаданные()) Тогда
		Склад = СтрокаТаблицы.ДокументПартии.Склад;
	КонецЕсли;

	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																					СтрокаТаблицы.Номенклатура, 
																					Склад);
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
		СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) Тогда
		////СтрокаТаблицы.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
		СтрокаТаблицы.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.ThuếGTGTĐượcKhấuTrừ_HàngHóaDịchVụ;	// 1VS
	КонецЕсли;
	
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНУ) Тогда
		СтрокаТаблицы.СчетУчетаНУ = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
		СтрокаТаблицы.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
	КонецЕсли;
	
КонецЦикла;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьПоступлениеИзПереработки" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

// Заполним счета учета затрат
Если НЕ ValueIsFilled(Объект.СчетЗатрат) Тогда
	////Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
	Объект.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíSảnXuấtKinhDoanh_Chính;	// 1VS
КонецЕсли;

// Заполним счета учета расчетов с контрагентом
СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
	Объект.Организация, 
	Объект.Контрагент, 
	Объект.ДоговорКонтрагента
);

Если НЕ ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
КонецЕсли;

Если НЕ ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
	Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансов;
КонецЕсли;

// Заполним необходимые реквизиты в табличной части Услуги 
Для каждого ТекСтрока Из Объект.Услуги Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	
	Если Не ValueЗаполнено (ТекСтрока.СчетУчетаНДС) Тогда
		ТекСтрока.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.ОтражениеВУСН) Тогда
		ТекСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "СтатьяЗатрат");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.СписаниеМатериалов");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	КонецЕсли;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда
		ТекСтрока.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
	КонецЕсли;
	
КонецЦикла;

// Заполним счета и другие необходимые реквизиты в табличной части Возвращенные материалы
Для каждого ТекСтрока Из Объект.ИспользованныеМатериалы Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	
	Если Не ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		ТекСтрока.СчетУчета 	= СчетаУчета.СчетПередачи;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.ОтражениеВУСН) Тогда
		ТекСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "СтатьяЗатрат");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.СписаниеМатериалов");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	КонецЕсли;
	
КонецЦикла;

// Заполним счета и другие необходимые реквизиты в табличной части Возвращенные материалы
Для каждого ТекСтрока Из Объект.ВозвращенныеМатериалы Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	
	Если НЕ ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		ТекСтрока.СчетУчета = СчетаУчета.СчетПередачи;
	КонецЕсли;
	
	Если НЕ ValueIsFilled(ТекСтрока.СчетПередачи) Тогда
		ТекСтрока.СчетПередачи = СчетаУчета.СчетУчета;
	КонецЕсли;
	
КонецЦикла;

// Заполним счета в табличной части Продукция
Для каждого ТекСтрока Из Объект.Продукция Цикл
	
	Если НЕ ValueIsFilled(ТекСтрока.Счет) Тогда
		
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
		
		Если НЕ ValueIsFilled(ТекСтрока.Счет) Тогда
			ТекСтрока.Счет = СчетаУчета.СчетУчета;
		КонецЕсли;
		
		Если НЕ ValueIsFilled(ТекСтрока.Спецификация) Тогда
			ТекСтрока.Спецификация = ТекСтрока.Номенклатура.ОсновнаяСпецификацияНоменклатуры;
		КонецЕсли;
		
	КонецЕсли;
	
	// Заполним плановую сумму в табличной части Продукция
	Если НЕ ValueIsFilled(ТекСтрока.СуммаПлановая) Тогда    
		
		ТипЦенПлановойСебестоимости = Параметры.ТипЦенПлановойСебестоимости;
			ВалютаРегламентированногоУчета = Параметры.ВалютаРегламентированногоУчета;
			ТекСтрока.ПлановаяСтоимость = Ценообразование.ПолучитьЦенуНоменклатуры(
			ТекСтрока.Номенклатура,
			ТипЦенПлановойСебестоимости,
			Объект.Дата,
			ВалютаРегламентированногоУчета,
			1
		);
		
		ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьПлановуюСумму(ТекСтрока);
		
	КонецЕсли;
	
КонецЦикла;

//Заполняем параметры, зависящие от режима налогообложения
Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьПоступлениеТоваров" UsedOnImport="true">
					<Text>	// Параметры:
	// - Объект
	// - ПараметрыОбъекта
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация, 
																						Объект.Контрагент, 
																						Объект.ДоговорКонтрагента);
	ВидДоговораКонтрагента = ОщегоНазначения.ПолучитьValueРеквизита(Объект.ДоговорКонтрагента, "ВидДоговора");
	
	Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
		Если ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Иначе
			Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
		Если Объект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку
			Или ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Иначе
			Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансов;
		КонецЕсли;
	КонецЕсли;
	
	//Заполним табличную часть "Товары"
	Для Каждого СтрокаТаблицы Из Объект.Услуги Цикл
		
		Если Не ValueIsFilled(СтрокаТаблицы.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																						СтрокаТаблицы.Номенклатура,
																						Объект.Склад);
		
		Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатрат) Тогда
			СтрокаТаблицы.СчетЗатрат = СчетаУчета.СчетУчета;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.Субконто1) Тогда
			СтрокаТаблицы.Субконто1 = СчетаУчета.Субконто1;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.Субконто2) Тогда
			СтрокаТаблицы.Субконто2 = СчетаУчета.Субконто2;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.Субконто3) Тогда
			СтрокаТаблицы.Субконто3 = СчетаУчета.Субконто3;
		КонецЕсли;
		
		Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатратНУ) Тогда
			СтрокаТаблицы.СчетЗатратНУ = СчетаУчета.СчетУчета;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ1) Тогда
			СтрокаТаблицы.СубконтоНУ1 = СчетаУчета.Субконто1;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ2) Тогда
			СтрокаТаблицы.СубконтоНУ2 = СчетаУчета.Субконто2;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СубконтоНУ3) Тогда
			СтрокаТаблицы.СубконтоНУ3 = СчетаУчета.Субконто3;
		КонецЕсли;
		
		Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) Тогда 
			СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
		КонецЕсли;
		
		Для каждого СтрокаВидыСубконто Из СчетаУчета.СчетУчета.ВидыСубконто Цикл
			
			Если ValueIsFilled(СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки]) Тогда
				Продолжить;
			КонецЕсли;
			
			ОписаниеТиповВидаСубконто = СтрокаВидыСубконто.ВидСубконто.ТипValues;
			Если ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.СтатьиЗатрат")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
			ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.ПрочиеДоходыИРасходы")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ПрочиеВнереализационныеДоходыРасходы");
			ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.НоменклатурныеГруппы")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "НоменклатурнаяГруппа");
			КонецЕсли;
			
			СтрокаТаблицы["СубконтоНУ" + СтрокаВидыСубконто.НомерСтроки] = СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки];
		КонецЦикла;
		
		Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда 
			СтрокаТаблицы.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Объект.Товары.Количество()&gt;0 Тогда
		ТабличнаяЧасть = Объект.Товары;
		Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);
	КонецЕсли;
	
	//Заполним табличную часть "Услуги"
	Для Каждого СтрокаТаблицы Из Объект.Услуги Цикл
	
		Если Не ValueIsFilled(СтрокаТаблицы.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
	
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																					  	СтрокаТаблицы.Номенклатура,
																					  	Объект.Склад);
	
		Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатрат) Тогда
			СтрокаТаблицы.СчетЗатрат = СчетаУчета.СчетУчета;
			СтрокаТаблицы.Субконто1 = СчетаУчета.Субконто1;
			СтрокаТаблицы.Субконто2 = СчетаУчета.Субконто2;
			СтрокаТаблицы.Субконто3 = СчетаУчета.Субконто3;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатратНУ) Тогда
			СтрокаТаблицы.СчетЗатратНУ = СчетаУчета.СчетУчета;
			СтрокаТаблицы.СубконтоНУ1 = СчетаУчета.Субконто1;
			СтрокаТаблицы.СубконтоНУ2 = СчетаУчета.Субконто2;
			СтрокаТаблицы.СубконтоНУ3 = СчетаУчета.Субконто3;
		КонецЕсли;
		Если Не ValueIsFilled(СтрокаТаблицы.СчетУчетаНДС) Тогда 
			СтрокаТаблицы.СчетУчетаНДС = СчетаУчета.СчетУчетаНДС;
		КонецЕсли;
		
		Для каждого СтрокаВидыСубконто Из СчетаУчета.СчетУчета.ВидыСубконто Цикл
			
			Если ValueIsFilled(СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки]) Тогда
				Продолжить;
			КонецЕсли;
			
			ОписаниеТиповВидаСубконто = СтрокаВидыСубконто.ВидСубконто.ТипValues;
			Если ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.СтатьиЗатрат")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
			ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.ПрочиеДоходыИРасходы")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ПрочиеВнереализационныеДоходыРасходы");
			ИначеЕсли ОписаниеТиповВидаСубконто.СодержитТип(Тип("CatalogRef.НоменклатурныеГруппы")) Тогда
				СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки] = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "НоменклатурнаяГруппа");
			КонецЕсли;
			
			СтрокаТаблицы["СубконтоНУ" + СтрокаВидыСубконто.НомерСтроки] = СтрокаТаблицы["Субконто" + СтрокаВидыСубконто.НомерСтроки];
		КонецЦикла;
		
		Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда 
			СтрокаТаблицы.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
		КонецЕсли;
	
	КонецЦикла;
	
	Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
		
		ПараметрыТЧ = ПараметрыОбъекта.Получить("ТоварыТабличнаяЧасть");
		Если ПараметрыТЧ &lt;&gt; Неопределено 
			И ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено Тогда
			
			Для каждого СтрокаТаблицы Из Объект.Товары Цикл
				
				Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета)
					И ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ТоварНаКомиссии Тогда
					////СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
					СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.HàngHóaNhậnBánHộNhậnGiữHộKýCược_TrongKho;		// 1VS
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыТЧ = ПараметрыОбъекта.Получить("УслугиТабличнаяЧасть");
		Если ПараметрыТЧ &lt;&gt; Неопределено 
			И ПараметрыТЧ.Колонки.Найти("ПроизводственныйРасход") &lt;&gt; Неопределено Тогда
			
			Для каждого СтрокаТаблицы Из Объект.Услуги Цикл	
				
				Если Не ValueIsFilled(СтрокаТаблицы.СчетЗатрат) Тогда
					Если ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ПроизводственныйРасход Тогда
						////СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы;
						СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíQuảnLýDoanhNghiệp;	// 1VS
					Иначе
						////СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ИздержкиОбращения;
						СтрокаТаблицы.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíBánHàng;		// 1VS
					КонецЕсли;
					СтрокаТаблицы.Субконто1 = ОщегоНазначения.ПолучитьValueРеквизита(СтрокаТаблицы.Номенклатура, "СтатьяЗатрат");
					
					СтрокаТаблицы.СчетЗатратНУ = СтрокаТаблицы.СчетЗатрат;
					СтрокаТаблицы.СубконтоНУ1 = СтрокаТаблицы.Субконто1;
					
					Если Не ValueIsFilled(СтрокаТаблицы.Субконто1) Тогда
						СтрокаТаблицы.Субконто1 = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
						СтрокаТаблицы.СубконтоНУ1 = СтрокаТаблицы.Субконто1;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//Заполняем параметры, зависящие от режима налогообложения
	Выполнить(Algorithms.ЗаполнениеОтражениеНДСВСтоимости);
	
	Если Объект.Услуги.Количество()&gt;0 Тогда
		ТабличнаяЧасть = Объект.Услуги;
		Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);
	КонецЕсли;
	
	//Заполняем параметры, зависящие от режима налогообложения
	Выполнить(Algorithms.ЗаполнитьСчетаУчетаВозвратнойТары);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьРеализацияТоваров" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(	Объект.Организация,
																					Объект.Контрагент,
																					Объект.ДоговорКонтрагента);
Если (ОщегоНазначения.ПолучитьValueРеквизита( Объект.ДоговорКонтрагента, "ВидДоговора") = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером)
	Или (Объект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности) Тогда
		Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
Иначе
	Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
		Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
	КонецЕсли;
	Если (Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически)
		Или (Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.ПоДокументу) Тогда
		Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
			Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
		КонецЕсли;
	Иначе
		Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
КонецЕсли;

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	
	ПараметрыТЧ = ПараметрыОбъекта.Получить("ТоварыТабличнаяЧасть");
	Если ПараметрыТЧ &lt;&gt; Неопределено И ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено Тогда
		
		Для каждого СтрокаТаблицы Из Объект.Товары Цикл	
			
			Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета)
				И ПараметрыТЧ[СтрокаТаблицы.НомерСтроки - 1].ТоварНаКомиссии Тогда
				////СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
				СтрокаТаблицы.СчетУчета = ПланыСчетов.Хозрасчетный.VậtTưHàngHóaNhậnGiữHộNhậnGiaCông_TrongKho;	// 1VS
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

ТабличнаяЧасть = Объект.Товары;
ЭтоУслуги      = Ложь;
ЕстьКомиссия   = Истина;
Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);

ТабличнаяЧасть = Объект.Услуги;
ЭтоУслуги      = Истина;
ЕстьКомиссия   = Ложь;
Выполнить(Algorithms.ЗаполнитьСчетаУчетаНоменклатурыПродажа);</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьРеализацияУслугПоПереработке" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

// Заполним счета учета расчетов с контрагентом
СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
	Объект.Организация,
	Объект.Контрагент,
	Объект.ДоговорКонтрагента
);

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовСКонтрагентом) Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
КонецЕсли;

Если Не ValueIsFilled(Объект.СчетУчетаРасчетовПоАвансам) Тогда
	Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансовПокупателя;
КонецЕсли;

ТипЦенПлановойСебестоимости = Константы.ТипЦенПлановойСебестоимостиНоменклатуры.Получить();
ВалютаРеглментированногоУчета = Параметры.ВалютаРегламентированногоУчета;

// Заполним необходимые реквизиты в табличной части Услуги 
Для каждого ТекСтрока Из Объект.Услуги Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура);
	
	Если Не ValueIsFilled(ТекСтрока.СчетДоходов) Тогда
		ТекСтрока.СчетДоходов				= СчетаУчета.СчетДоходов;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СчетРасходов) Тогда
		ТекСтрока.СчетРасходов 				= СчетаУчета.СчетРасходов;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СчетУчетаНДСПоРеализации) Тогда
		ТекСтрока.СчетУчетаНДСПоРеализации	= СчетаУчета.СчетУчетаНДСПродажи;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		ТекСтрока.СчетУчета					= СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СуммаПлановая) Тогда
		ТекСтрока.ПлановаяСтоимость = Ценообразование.ПолучитьЦенуНоменклатуры(
			ТекСтрока.Номенклатура,
			ТипЦенПлановойСебестоимости,
			Объект.Дата,
			ВалютаРеглментированногоУчета,
			1
		);
		
		ОбработкаТабличныхЧастейКлиентСервер.ПересчитатьПлановуюСумму(ТекСтрока);
	КонецЕсли;
	
	Если ValueIsFilled(ТекСтрока.Номенклатура) Тогда
		Содержание = ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "НаименованиеПолное");
	КонецЕсли;
	
	ТекСтрока.Содержание = ?(ValueIsFilled(Содержание), Содержание, ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "Description"));
	
КонецЦикла;

Для каждого ТекСтрока Из Объект.МатериалыЗаказчика Цикл
	
	Если ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		Продолжить;
	КонецЕсли;
	
	СчетаУчета 			= БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура);
	ТекСтрока.СчетУчета = СчетаУчета.СчетПередачиЗаб;
	
	Если Не ValueIsFilled(ТекСтрока.СчетУчета) Тогда
		////ТекСтрока.СчетУчета = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;	
		ТекСтрока.СчетУчета = ПланыСчетов.Хозрасчетный.VậtTưHàngHóaNhậnGiữHộNhậnGiaCông_ĐangGiaCông;		// 1VS
	КонецЕсли;
	
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьСписаниеТоваров" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

ТабличнаяЧасть = Объект.Товары;

Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
	Если Не ValueIsFilled(СтрокаТаблицы.СчетУчета) Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(	Объект.Организация,
																						СтрокаТаблицы.Номенклатура,
																						Объект.Склад);
		СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
	КонецЕсли;
КонецЦикла;

Выполнить(Algorithms.ЗаполнитьСчетаУчетаВозвратнойТары);

Выполнить(Algorithms.ЗаполнениеОтражениеВУСН);

Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
				<Algorithm Name="ОбработатьТребованиеНакладная" UsedOnImport="true">
					<Text>// Параметры:
// - Объект
// - ПараметрыОбъекта

// Заполним реквизиты шапки
Если НЕ ValueIsFilled(Объект.НДСвСтоимостиТоваров) Тогда
	Объект.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
КонецЕсли;

Объект.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат = Истина;

Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	ПараметрыТЧ = ПараметрыОбъекта.Получить("МатериалыТабличнаяЧасть");
КонецЕсли;

ПараметрыОбъектаАктуальны 	= (ПараметрыОбъекта &lt;&gt; Неопределено);
Если ТипЗнч(ПараметрыТЧ) = Тип("ТаблицаЗначений") Тогда
	ЕстьКолонкаТоварыНаКомиссии = (ПараметрыТЧ.Колонки.Найти("ТоварНаКомиссии") &lt;&gt; Неопределено);
Иначе
	ЕстьКолонкаТоварыНаКомиссии  = Ложь;
КонецЕсли;

// Заполним счета учета в табличной части Материалы
Для каждого ТекСтрока Из Объект.Материалы Цикл
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначения.ПолучитьValueРеквизита(ТекСтрока.Номенклатура, "СтатьяЗатрат");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.СписаниеМатериалов");
	КонецЕсли;
	
	Если Не ValueIsFilled(ТекСтрока.СтатьяЗатрат) Тогда
		ТекСтрока.СтатьяЗатрат = ОщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатьиЗатрат.ПрочиеЗатраты");
	КонецЕсли;
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура);
	
	Если Не ValueIsFilled(ТекСтрока.Счет) Тогда
		ТекСтрока.Счет = СчетаУчета.СчетУчета;
	КонецЕсли;
	
	Если ПараметрыОбъектаАктуальны
		И ЕстьКолонкаТоварыНаКомиссии
		И ПараметрыТЧ[ТекСтрока.НомерСтроки - 1].ТоварНаКомиссии Тогда
		
		////ТекСтрока.Счет = ПланыСчетов.Хозрасчетный.ТоварыНаСкладе;
		ТекСтрока.Счет = ПланыСчетов.Хозрасчетный.VậtTưHàngHóaNhậnGiữHộNhậnGiaCông_TrongKho;		// 1VS
		
	КонецЕсли;
	
	Если НЕ ValueIsFilled(ТекСтрока.СчетЗатрат) Тогда
		////ТекСтрока.СчетЗатрат = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
		ТекСтрока.СчетЗатрат = ПланыСчетов.Хозрасчетный.ChiPhíSảnXuấtKinhDoanh_Chính;	// 1VS
	КонецЕсли;
	
	Если ValueIsFilled(СчетаУчета.СпособУчетаНДС) Тогда 
		ТекСтрока.СпособУчетаНДС = СчетаУчета.СпособУчетаНДС;
	КонецЕсли;
	
КонецЦикла;

// Заполним счета учета в табличной части Материалы
Для каждого ТекСтрока Из Объект.МатериалыЗаказчика Цикл
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация, ТекСтрока.Номенклатура, Объект.Склад);
	Если НЕ ValueIsFilled(ТекСтрока.Счет) Тогда
		ТекСтрока.Счет = СчетаУчета.СчетУчетаДавСырья;
	КонецЕсли;
	
	Если НЕ ValueIsFilled(ТекСтрока.СчетПередачи) Тогда
		ТекСтрока.СчетПередачи = СчетаУчета.СчетПередачиЗаб;
	КонецЕсли;
	
	Если НЕ ValueIsFilled(ТекСтрока.СчетПередачи) Тогда
		////ТекСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве;754
		ТекСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.VậtTưHàngHóaNhậnGiữHộNhậnGiaCông_ĐangGiaCông;	// 1VS
	КонецЕсли;
	
КонецЦикла;</Text>
					<Parameters>Объект, ПараметрыОбъекта</Parameters>
				</Algorithm>
			</Group>
			<Algorithm Name="ЗаполнитьСодержаниеТабличнойЧастиУслуги" UsedOnImport="true">
				<Text>// Алгоритм предназначен для заполнения реквизит Содержание в строках ТЧ Услуги документа
// Вызывается из обработчика "После загрузки" ПКО документа
Для каждого ТекСтрока Из Объект.Услуги Цикл	
	
	//ОбработкаТабличныхЧастей.ЗаполнитьСодержаниеТабЧасти(ТекСтрока, Объект);
	Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
		
		Содержание = ТекСтрока.Номенклатура.НаименованиеПолное;
		
	КонецЕсли;
	
	ТекСтрока.Содержание = ?(ЗначениеЗаполнено(Содержание), Содержание, ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекСтрока.Номенклатура, "Наименование"));
	
КонецЦикла;</Text>
				<Parameters>Объект</Parameters>
			</Algorithm>
			<Algorithm Name="ОбработатьДоговорКонтрагента" UsedOnImport="false">
				<Text>
Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер")
	ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.РасходныйКассовыйОрдер")
	ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеНаРасчетныйСчет")
	ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.СписаниеСРасчетногоСчета") Тогда
	
	Для каждого СтрокаТабличнойЧасти Из Объект.РасшифровкаПлатежа Цикл
		
		ДоговорКонтрагента = СтрокаТабличнойЧасти.ДоговорКонтрагента;
		Если ValueIsFilled(ДоговорКонтрагента) Тогда
			
			Договор = ДоговорКонтрагента.ПолучитьОбъект();
			Если Договор &lt;&gt; Неопределено И НЕ ValueIsFilled(Договор.Code) Тогда
				Договор.ОбменДанными.Загрузка = Истина;
				Договор.ДополнительныеProperties.Вставить("РегистрироватьОбъектНаУзлеОтправителе", Ложь);
				Договор.ДополнительныеProperties.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
				Договор.УстановитьНовыйCode();
				Договор.Записать();
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

Иначе

	ДоговорКонтрагента = Объект.ДоговорКонтрагента;
	Если ValueIsFilled(ДоговорКонтрагента) Тогда
		
		Договор = ДоговорКонтрагента.ПолучитьОбъект();
		Если Договор &lt;&gt; Неопределено И НЕ ValueIsFilled(Договор.Code) Тогда
			Договор.ОбменДанными.Загрузка = Истина;
			Договор.ДополнительныеProperties.Вставить("РегистрироватьОбъектНаУзлеОтправителе", Ложь);
			Договор.ДополнительныеProperties.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
			Договор.УстановитьНовыйCode();
			Договор.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;</Text>
				<Parameters>Объект</Parameters>
			</Algorithm>
		</Group>
	</Algorithms>
	<Queries/>
</ExchangeRules>